

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 11 12:21:39 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext1,local,class=CONST,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x20,48,_BDT
    72                           	dabs	1,0x58,8,_CtrlTrfData
    73                           	dabs	1,0x50,8,_SetupPkt
    74                           	dabs	1,0x127,10,_cdc_notice
    75                           	dabs	1,0x120,7,_line_coding
    76                           	dabs	1,0x220,64,_cdc_data_tx
    77                           	dabs	1,0x2A0,64,_cdc_data_rx
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 1.45
    81                           ; Generated 16/11/2017 GMT
    82                           ; 
    83                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1455 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011D                     	;# 
   167  018C                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0216                     	;# 
   200  0217                     	;# 
   201  0217                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  039A                     	;# 
   206  039B                     	;# 
   207  0611                     	;# 
   208  0612                     	;# 
   209  0613                     	;# 
   210  0613                     	;# 
   211  0614                     	;# 
   212  0615                     	;# 
   213  0616                     	;# 
   214  0616                     	;# 
   215  0691                     	;# 
   216  0692                     	;# 
   217  0693                     	;# 
   218  0694                     	;# 
   219  0695                     	;# 
   220  0E8E                     	;# 
   221  0E8F                     	;# 
   222  0E90                     	;# 
   223  0E91                     	;# 
   224  0E92                     	;# 
   225  0E93                     	;# 
   226  0E94                     	;# 
   227  0E94                     	;# 
   228  0E95                     	;# 
   229  0E96                     	;# 
   230  0E97                     	;# 
   231  0E98                     	;# 
   232  0E99                     	;# 
   233  0E9A                     	;# 
   234  0E9B                     	;# 
   235  0E9C                     	;# 
   236  0E9D                     	;# 
   237  0E9E                     	;# 
   238  0E9F                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000E                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  008C                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010E                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0197                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  039A                     	;# 
   342  039B                     	;# 
   343  0611                     	;# 
   344  0612                     	;# 
   345  0613                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0616                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0E8E                     	;# 
   357  0E8F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E93                     	;# 
   362  0E94                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0E96                     	;# 
   366  0E97                     	;# 
   367  0E98                     	;# 
   368  0E99                     	;# 
   369  0E9A                     	;# 
   370  0E9B                     	;# 
   371  0E9C                     	;# 
   372  0E9D                     	;# 
   373  0E9E                     	;# 
   374  0E9F                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000E                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  008C                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  010C                     	;# 
   428  010E                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011D                     	;# 
   439  018C                     	;# 
   440  018E                     	;# 
   441  0191                     	;# 
   442  0191                     	;# 
   443  0192                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0194                     	;# 
   447  0195                     	;# 
   448  0196                     	;# 
   449  0197                     	;# 
   450  0199                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019C                     	;# 
   455  019D                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  020C                     	;# 
   459  0211                     	;# 
   460  0211                     	;# 
   461  0212                     	;# 
   462  0212                     	;# 
   463  0213                     	;# 
   464  0213                     	;# 
   465  0214                     	;# 
   466  0214                     	;# 
   467  0215                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0216                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0217                     	;# 
   474  0391                     	;# 
   475  0392                     	;# 
   476  0393                     	;# 
   477  039A                     	;# 
   478  039B                     	;# 
   479  0611                     	;# 
   480  0612                     	;# 
   481  0613                     	;# 
   482  0613                     	;# 
   483  0614                     	;# 
   484  0615                     	;# 
   485  0616                     	;# 
   486  0616                     	;# 
   487  0691                     	;# 
   488  0692                     	;# 
   489  0693                     	;# 
   490  0694                     	;# 
   491  0695                     	;# 
   492  0E8E                     	;# 
   493  0E8F                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E93                     	;# 
   498  0E94                     	;# 
   499  0E94                     	;# 
   500  0E95                     	;# 
   501  0E96                     	;# 
   502  0E97                     	;# 
   503  0E98                     	;# 
   504  0E99                     	;# 
   505  0E9A                     	;# 
   506  0E9B                     	;# 
   507  0E9C                     	;# 
   508  0E9D                     	;# 
   509  0E9E                     	;# 
   510  0E9F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000E                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  008C                     	;# 
   548  008E                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010E                     	;# 
   565  0111                     	;# 
   566  0112                     	;# 
   567  0113                     	;# 
   568  0114                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  018C                     	;# 
   576  018E                     	;# 
   577  0191                     	;# 
   578  0191                     	;# 
   579  0192                     	;# 
   580  0193                     	;# 
   581  0193                     	;# 
   582  0194                     	;# 
   583  0195                     	;# 
   584  0196                     	;# 
   585  0197                     	;# 
   586  0199                     	;# 
   587  019A                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019F                     	;# 
   594  020C                     	;# 
   595  0211                     	;# 
   596  0211                     	;# 
   597  0212                     	;# 
   598  0212                     	;# 
   599  0213                     	;# 
   600  0213                     	;# 
   601  0214                     	;# 
   602  0214                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0216                     	;# 
   607  0216                     	;# 
   608  0217                     	;# 
   609  0217                     	;# 
   610  0391                     	;# 
   611  0392                     	;# 
   612  0393                     	;# 
   613  039A                     	;# 
   614  039B                     	;# 
   615  0611                     	;# 
   616  0612                     	;# 
   617  0613                     	;# 
   618  0613                     	;# 
   619  0614                     	;# 
   620  0615                     	;# 
   621  0616                     	;# 
   622  0616                     	;# 
   623  0691                     	;# 
   624  0692                     	;# 
   625  0693                     	;# 
   626  0694                     	;# 
   627  0695                     	;# 
   628  0E8E                     	;# 
   629  0E8F                     	;# 
   630  0E90                     	;# 
   631  0E91                     	;# 
   632  0E92                     	;# 
   633  0E93                     	;# 
   634  0E94                     	;# 
   635  0E94                     	;# 
   636  0E95                     	;# 
   637  0E96                     	;# 
   638  0E97                     	;# 
   639  0E98                     	;# 
   640  0E99                     	;# 
   641  0E9A                     	;# 
   642  0E9B                     	;# 
   643  0E9C                     	;# 
   644  0E9D                     	;# 
   645  0E9E                     	;# 
   646  0E9F                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658                           
   659                           	psect	idataBANK2
   660  0B5F                     __pidataBANK2:	
   661                           
   662                           ;initializer for _tmrVal
   663  0B5F  3400               	retlw	0
   664  0B60  3401               	retlw	1
   665                           
   666                           ;initializer for _tmrMask
   667  0B61  34FF               	retlw	255
   668  0B62  3401               	retlw	1
   669                           
   670                           	psect	stringtext1
   671  10D3                     __pstringtext1:	
   672  10D3                     _USB_SD_Ptr:	
   673  10D3  34AB               	retlw	low (_sd000| (0+32768))
   674  10D4  3490               	retlw	high (_sd000| (0+32768))
   675  10D5  3477               	retlw	low (_sd001| (0+32768))
   676  10D6  3490               	retlw	high (_sd001| (0+32768))
   677  10D7  3443               	retlw	low (_sd002| (0+32768))
   678  10D8  3490               	retlw	high (_sd002| (0+32768))
   679  10D9                     __end_of_USB_SD_Ptr:	
   680                           
   681                           	psect	stringtext2
   682  10D9                     __pstringtext2:	
   683  10D9                     _USB_CD_Ptr:	
   684  10D9  3400               	retlw	low (_configDescriptor1| (0+32768))
   685  10DA  3490               	retlw	high (_configDescriptor1| (0+32768))
   686  10DB                     __end_of_USB_CD_Ptr:	
   687                           
   688                           	psect	stringtext3
   689  1000                     __pstringtext3:	
   690  1000                     _configDescriptor1:	
   691  1000  3409               	retlw	9
   692  1001  3402               	retlw	2
   693  1002  3443               	retlw	67
   694  1003  3400               	retlw	0
   695  1004  3402               	retlw	2
   696  1005  3401               	retlw	1
   697  1006  3400               	retlw	0
   698  1007  34C0               	retlw	192
   699  1008  3432               	retlw	50
   700  1009  3409               	retlw	9
   701  100A  3404               	retlw	4
   702  100B  3400               	retlw	0
   703  100C  3400               	retlw	0
   704  100D  3401               	retlw	1
   705  100E  3402               	retlw	2
   706  100F  3402               	retlw	2
   707  1010  3401               	retlw	1
   708  1011  3400               	retlw	0
   709  1012  3405               	retlw	5
   710  1013  3424               	retlw	36
   711  1014  3400               	retlw	0
   712  1015  3410               	retlw	16
   713  1016  3401               	retlw	1
   714  1017  3404               	retlw	4
   715  1018  3424               	retlw	36
   716  1019  3402               	retlw	2
   717  101A  3402               	retlw	2
   718  101B  3405               	retlw	5
   719  101C  3424               	retlw	36
   720  101D  3406               	retlw	6
   721  101E  3400               	retlw	0
   722  101F  3401               	retlw	1
   723  1020  3405               	retlw	5
   724  1021  3424               	retlw	36
   725  1022  3401               	retlw	1
   726  1023  3400               	retlw	0
   727  1024  3401               	retlw	1
   728  1025  3407               	retlw	7
   729  1026  3405               	retlw	5
   730  1027  3481               	retlw	129
   731  1028  3403               	retlw	3
   732  1029  3408               	retlw	8
   733  102A  3400               	retlw	0
   734  102B  3402               	retlw	2
   735  102C  3409               	retlw	9
   736  102D  3404               	retlw	4
   737  102E  3401               	retlw	1
   738  102F  3400               	retlw	0
   739  1030  3402               	retlw	2
   740  1031  340A               	retlw	10
   741  1032  3400               	retlw	0
   742  1033  3400               	retlw	0
   743  1034  3400               	retlw	0
   744  1035  3407               	retlw	7
   745  1036  3405               	retlw	5
   746  1037  3402               	retlw	2
   747  1038  3402               	retlw	2
   748  1039  3440               	retlw	64
   749  103A  3400               	retlw	0
   750  103B  3400               	retlw	0
   751  103C  3407               	retlw	7
   752  103D  3405               	retlw	5
   753  103E  3482               	retlw	130
   754  103F  3402               	retlw	2
   755  1040  3440               	retlw	64
   756  1041  3400               	retlw	0
   757  1042  3400               	retlw	0
   758  1043                     __end_of_configDescriptor1:	
   759                           
   760                           	psect	stringtext4
   761  1043                     __pstringtext4:	
   762  1043                     _sd002:	
   763  1043  3434               	retlw	52
   764  1044  3403               	retlw	3
   765  1045  3453               	retlw	83
   766  1046  3400               	retlw	0
   767  1047  3474               	retlw	116
   768  1048  3400               	retlw	0
   769  1049  3461               	retlw	97
   770  104A  3400               	retlw	0
   771  104B  346E               	retlw	110
   772  104C  3400               	retlw	0
   773  104D  3464               	retlw	100
   774  104E  3400               	retlw	0
   775  104F  3475               	retlw	117
   776  1050  3400               	retlw	0
   777  1051  3470               	retlw	112
   778  1052  3400               	retlw	0
   779  1053  3420               	retlw	32
   780  1054  3400               	retlw	0
   781  1055  3454               	retlw	84
   782  1056  3400               	retlw	0
   783  1057  3469               	retlw	105
   784  1058  3400               	retlw	0
   785  1059  346D               	retlw	109
   786  105A  3400               	retlw	0
   787  105B  3465               	retlw	101
   788  105C  3400               	retlw	0
   789  105D  3472               	retlw	114
   790  105E  3400               	retlw	0
   791  105F  3420               	retlw	32
   792  1060  3400               	retlw	0
   793  1061  3431               	retlw	49
   794  1062  3400               	retlw	0
   795  1063  342E               	retlw	46
   796  1064  3400               	retlw	0
   797  1065  3430               	retlw	48
   798  1066  3400               	retlw	0
   799  1067  3400               	retlw	0
   800  1068  3400               	retlw	0
   801  1069  3400               	retlw	0
   802  106A  3400               	retlw	0
   803  106B  3400               	retlw	0
   804  106C  3400               	retlw	0
   805  106D  3400               	retlw	0
   806  106E  3400               	retlw	0
   807  106F  3400               	retlw	0
   808  1070  3400               	retlw	0
   809  1071  3400               	retlw	0
   810  1072  3400               	retlw	0
   811  1073  3400               	retlw	0
   812  1074  3400               	retlw	0
   813  1075  3400               	retlw	0
   814  1076  3400               	retlw	0
   815  1077                     __end_of_sd002:	
   816                           
   817                           	psect	stringtext5
   818  1077                     __pstringtext5:	
   819  1077                     _sd001:	
   820  1077  3434               	retlw	52
   821  1078  3403               	retlw	3
   822  1079  344A               	retlw	74
   823  107A  3400               	retlw	0
   824  107B  346F               	retlw	111
   825  107C  3400               	retlw	0
   826  107D  3465               	retlw	101
   827  107E  3400               	retlw	0
   828  107F  3420               	retlw	32
   829  1080  3400               	retlw	0
   830  1081  344F               	retlw	79
   831  1082  3400               	retlw	0
   832  1083  3473               	retlw	115
   833  1084  3400               	retlw	0
   834  1085  3474               	retlw	116
   835  1086  3400               	retlw	0
   836  1087  3472               	retlw	114
   837  1088  3400               	retlw	0
   838  1089  3461               	retlw	97
   839  108A  3400               	retlw	0
   840  108B  346E               	retlw	110
   841  108C  3400               	retlw	0
   842  108D  3464               	retlw	100
   843  108E  3400               	retlw	0
   844  108F  3465               	retlw	101
   845  1090  3400               	retlw	0
   846  1091  3472               	retlw	114
   847  1092  3400               	retlw	0
   848  1093  3400               	retlw	0
   849  1094  3400               	retlw	0
   850  1095  3400               	retlw	0
   851  1096  3400               	retlw	0
   852  1097  3400               	retlw	0
   853  1098  3400               	retlw	0
   854  1099  3400               	retlw	0
   855  109A  3400               	retlw	0
   856  109B  3400               	retlw	0
   857  109C  3400               	retlw	0
   858  109D  3400               	retlw	0
   859  109E  3400               	retlw	0
   860  109F  3400               	retlw	0
   861  10A0  3400               	retlw	0
   862  10A1  3400               	retlw	0
   863  10A2  3400               	retlw	0
   864  10A3  3400               	retlw	0
   865  10A4  3400               	retlw	0
   866  10A5  3400               	retlw	0
   867  10A6  3400               	retlw	0
   868  10A7  3400               	retlw	0
   869  10A8  3400               	retlw	0
   870  10A9  3400               	retlw	0
   871  10AA  3400               	retlw	0
   872  10AB                     __end_of_sd001:	
   873                           
   874                           	psect	stringtext6
   875  10C1                     __pstringtext6:	
   876  10C1                     _device_dsc:	
   877  10C1  3412               	retlw	18
   878  10C2  3401               	retlw	1
   879  10C3  3400               	retlw	0
   880  10C4  3402               	retlw	2
   881  10C5  3402               	retlw	2
   882  10C6  3400               	retlw	0
   883  10C7  3400               	retlw	0
   884  10C8  3408               	retlw	8
   885  10C9  34D8               	retlw	216
   886  10CA  3404               	retlw	4
   887  10CB  340A               	retlw	10
   888  10CC  3400               	retlw	0
   889  10CD  3400               	retlw	0
   890  10CE  3401               	retlw	1
   891  10CF  3401               	retlw	1
   892  10D0  3402               	retlw	2
   893  10D1  3400               	retlw	0
   894  10D2  3401               	retlw	1
   895  10D3                     __end_of_device_dsc:	
   896                           
   897                           	psect	stringtext7
   898  10AB                     __pstringtext7:	
   899  10AB                     _sd000:	
   900  10AB  3404               	retlw	4
   901  10AC  3403               	retlw	3
   902  10AD  3409               	retlw	9
   903  10AE  3404               	retlw	4
   904  10AF                     __end_of_sd000:	
   905  0015                     _TMR0	set	21
   906  000E                     _PORTCbits	set	14
   907  000B                     _INTCONbits	set	11
   908  0012                     _PIR2bits	set	18
   909  0072                     _RC2	set	114
   910  0073                     _RC3	set	115
   911  0095                     _OPTION_REG	set	149
   912  008E                     _TRISCbits	set	142
   913  0099                     _OSCCON	set	153
   914  0098                     _OSCTUNE	set	152
   915  0092                     _PIE2bits	set	146
   916  018E                     _ANSELC	set	398
   917  018C                     _ANSELA	set	396
   918  039B                     _ACTCON	set	923
   919  0E98                     _UEP0bits	set	3736
   920  0E8E                     _UCON	set	3726
   921  0E8F                     _USTAT	set	3727
   922  0E92                     _UIEbits	set	3730
   923  0E90                     _UIRbits	set	3728
   924  0E96                     _UADDR	set	3734
   925  0E8E                     _UCONbits	set	3726
   926  0E92                     _UIE	set	3730
   927  0E97                     _UEIE	set	3735
   928  0E91                     _UCFG	set	3729
   929  0E90                     _UIR	set	3728
   930  0E93                     _UEIR	set	3731
   931  0E99                     _UEP1	set	3737
   932  0E98                     _UEP0	set	3736
   933  10AF                     STR_1:	
   934  10AF  3453               	retlw	83	;'S'
   935  10B0  3474               	retlw	116	;'t'
   936  10B1  3461               	retlw	97	;'a'
   937  10B2  346E               	retlw	110	;'n'
   938  10B3  3464               	retlw	100	;'d'
   939  10B4  3475               	retlw	117	;'u'
   940  10B5  3470               	retlw	112	;'p'
   941  10B6  3420               	retlw	32	;' '
   942  10B7  3454               	retlw	84	;'T'
   943  10B8  3469               	retlw	105	;'i'
   944  10B9  346D               	retlw	109	;'m'
   945  10BA  3465               	retlw	101	;'e'
   946  10BB  3472               	retlw	114	;'r'
   947  10BC  3420               	retlw	32	;' '
   948  10BD  3431               	retlw	49	;'1'
   949  10BE  342E               	retlw	46	;'.'
   950  10BF  3430               	retlw	48	;'0'
   951  10C0  3400               	retlw	0
   952                           
   953                           	psect	stringtext8
   954  10DB                     __pstringtext8:	
   955  10DB                     STR_2:	
   956  10DB  3431               	retlw	49	;'1'
   957  10DC  3400               	retlw	0
   958                           
   959                           	psect	stringtext9
   960  0000                     __pstringtext9:	
   961  10BF                     
   962                           ; #config settings
   963  0000                     
   964                           	psect	cinit
   965  0020                     start_initialization:	
   966  0020                     __initialization:	
   967                           
   968                           ; Initialize objects allocated to BANK2
   969  0020  0022               	movlb	2	; select bank2
   970  0021  318B  235F  3180   	fcall	__pidataBANK2	;fetch initializer
   971  0024  00CE               	movwf	__pdataBANK2& (0+127)
   972  0025  318B  2360  3180   	fcall	__pidataBANK2+1	;fetch initializer
   973  0028  00CF               	movwf	(__pdataBANK2+1)& (0+127)
   974  0029  318B  2361  3180   	fcall	__pidataBANK2+2	;fetch initializer
   975  002C  00D0               	movwf	(__pdataBANK2+2)& (0+127)
   976  002D  318B  2362  3180   	fcall	__pidataBANK2+3	;fetch initializer
   977  0030  00D1               	movwf	(__pdataBANK2+3)& (0+127)
   978                           
   979                           ; Clear objects allocated to BANK1
   980  0031  30A0               	movlw	low __pbssBANK1
   981  0032  0084               	movwf	4
   982  0033  3000               	movlw	high __pbssBANK1
   983  0034  0085               	movwf	5
   984  0035  3032               	movlw	50
   985  0036  318B  2363  3180   	fcall	clear_ram0
   986                           
   987                           ; Clear objects allocated to BANK2
   988  0039  3031               	movlw	low __pbssBANK2
   989  003A  0084               	movwf	4
   990  003B  3001               	movlw	high __pbssBANK2
   991  003C  0085               	movwf	5
   992  003D  3016               	movlw	22
   993  003E  318B  2363  3180   	fcall	clear_ram0
   994                           
   995                           ; Clear objects allocated to BANK3
   996  0041  30A0               	movlw	low __pbssBANK3
   997  0042  0084               	movwf	4
   998  0043  3001               	movlw	high __pbssBANK3
   999  0044  0085               	movwf	5
  1000  0045  3040               	movlw	64
  1001  0046  318B  2363  3180   	fcall	clear_ram0
  1002                           
  1003                           ; Clear objects allocated to BANK6
  1004  0049  3020               	movlw	low __pbssBANK6
  1005  004A  0084               	movwf	4
  1006  004B  3003               	movlw	high __pbssBANK6
  1007  004C  0085               	movwf	5
  1008  004D  3040               	movlw	64
  1009  004E  318B  2363         	fcall	clear_ram0
  1010  0050                     end_of_initialization:	
  1011                           ;End of C runtime variable initialization code
  1012                           
  1013  0050                     __end_of__initialization:	
  1014  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1015  0051  0020               	movlb	0
  1016  0052  318B  2BB1         	ljmp	_main	;jump to C main() function
  1017                           
  1018                           	psect	bssBANK1
  1019  00A0                     __pbssBANK1:	
  1020  00A0                     _outPipes:	
  1021  00A0                     	ds	7
  1022  00A7                     _inPipes:	
  1023  00A7                     	ds	5
  1024  00AC                     _ep_data_out:	
  1025  00AC                     	ds	3
  1026  00AF                     _ep_data_in:	
  1027  00AF                     	ds	3
  1028  00B2                     _pBDTEntryIn:	
  1029  00B2                     	ds	3
  1030  00B5                     _pBDTEntryOut:	
  1031  00B5                     	ds	3
  1032  00B8                     _control_signal_bitmap:	
  1033  00B8                     	ds	1
  1034  00B9                     _CDCDataInHandle:	
  1035  00B9                     	ds	1
  1036  00BA                     _CDCDataOutHandle:	
  1037  00BA                     	ds	1
  1038  00BB                     _cdc_mem_type:	
  1039  00BB                     	ds	1
  1040  00BC                     _cdc_tx_len:	
  1041  00BC                     	ds	1
  1042  00BD                     _cdc_trf_state:	
  1043  00BD                     	ds	1
  1044  00BE                     _cdc_rx_len:	
  1045  00BE                     	ds	1
  1046  00BF                     _USBDeferOUTDataStagePackets:	
  1047  00BF                     	ds	1
  1048  00C0                     _USBDeferINDataStagePackets:	
  1049  00C0                     	ds	1
  1050  00C1                     _USBStatusStageEnabledFlag2:	
  1051  00C1                     	ds	1
  1052  00C2                     _USBStatusStageEnabledFlag1:	
  1053  00C2                     	ds	1
  1054  00C3                     _USBDeferStatusStagePacket:	
  1055  00C3                     	ds	1
  1056  00C4                     _USBStatusStageTimeoutCounter:	
  1057  00C4                     	ds	1
  1058  00C5                     _BothEP0OutUOWNsSet:	
  1059  00C5                     	ds	1
  1060  00C6                     _endpoint_number:	
  1061  00C6                     	ds	1
  1062  00C7                     _USBBusIsSuspended:	
  1063  00C7                     	ds	1
  1064  00C8                     _RemoteWakeup:	
  1065  00C8                     	ds	1
  1066  00C9                     _pDst:	
  1067  00C9                     	ds	1
  1068  00CA                     _controlTransferState:	
  1069  00CA                     	ds	1
  1070  00CB                     _shortPacketStatus:	
  1071  00CB                     	ds	1
  1072  00CC                     _pBDTEntryEP0OutNext:	
  1073  00CC                     	ds	1
  1074  00CD                     _pBDTEntryEP0OutCurrent:	
  1075  00CD                     	ds	1
  1076  00CE                     _USBDeviceState:	
  1077  00CE                     	ds	1
  1078  00CF                     _USTATcopy:	
  1079  00CF                     	ds	1
  1080  00D0                     _USBAlternateInterface:	
  1081  00D0                     	ds	1
  1082  00D1                     _USBActiveConfiguration:	
  1083  00D1                     	ds	1
  1084                           
  1085                           	psect	bssBANK2
  1086  0131                     __pbssBANK2:	
  1087  0131                     _BaudRateGen:	
  1088  0131                     	ds	4
  1089  0135                     USBCBSendResume@delay_count:	
  1090  0135                     	ds	2
  1091  0137                     _state:	
  1092  0137                     	ds	2
  1093  0139                     _tmrCounter:	
  1094  0139                     	ds	2
  1095  013B                     _pCDCDst:	
  1096  013B                     	ds	2
  1097  013D                     _pCDCSrc:	
  1098  013D                     	ds	2
  1099  013F                     _dummy_encapsulated_cmd_response:	
  1100  013F                     	ds	8
  1101                           
  1102                           	psect	dataBANK2
  1103  014E                     __pdataBANK2:	
  1104  014E                     _tmrVal:	
  1105  014E                     	ds	2
  1106  0150                     _tmrMask:	
  1107  0150                     	ds	2
  1108                           
  1109                           	psect	bssBANK3
  1110  01A0                     __pbssBANK3:	
  1111  01A0                     _USB_Out_Buffer:	
  1112  01A0                     	ds	64
  1113                           
  1114                           	psect	bssBANK6
  1115  0320                     __pbssBANK6:	
  1116  0320                     _USB_In_Buffer:	
  1117  0320                     	ds	64
  1118                           
  1119                           	psect	clrtext
  1120  0B63                     clear_ram0:	
  1121                           ;	Called with FSR0 containing the base address, and
  1122                           ;	WREG with the size to clear
  1123                           
  1124  0B63  0064               	clrwdt	;clear the watchdog before getting into this loop
  1125  0B64                     clrloop0:	
  1126  0B64  0180               	clrf	0	;clear RAM location pointed to by FSR
  1127  0B65  3101               	addfsr 0,1
  1128  0B66  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1129  0B67  2B64               	goto	clrloop0	;have we reached the end yet?
  1130  0B68  3400               	retlw	0	;all done for this memory range, return
  1131                           
  1132                           	psect	cstackBANK2
  1133  0147                     __pcstackBANK2:	
  1134  0147                     ??_ProcessIO:	
  1135                           
  1136                           ; 1 bytes @ 0x0
  1137  0147                     	ds	2
  1138  0149                     ProcessIO@validCmd:	
  1139                           
  1140                           ; 1 bytes @ 0x2
  1141  0149                     	ds	1
  1142  014A                     ProcessIO@numBytesRead:	
  1143                           
  1144                           ; 1 bytes @ 0x3
  1145  014A                     	ds	1
  1146  014B                     ProcessIO@i:	
  1147                           
  1148                           ; 1 bytes @ 0x4
  1149  014B                     	ds	1
  1150  014C                     ??_main:	
  1151                           
  1152                           ; 1 bytes @ 0x5
  1153  014C                     	ds	2
  1154                           
  1155                           	psect	cstackBANK1
  1156  00D2                     __pcstackBANK1:	
  1157  00D2                     ??_USBCtrlEPService:	
  1158                           
  1159                           ; 1 bytes @ 0x0
  1160  00D2                     	ds	3
  1161  00D5                     USBCtrlEPService@setup_cnt:	
  1162                           
  1163                           ; 1 bytes @ 0x3
  1164  00D5                     	ds	1
  1165  00D6                     ??_USBDeviceTasks:	
  1166                           
  1167                           ; 1 bytes @ 0x4
  1168  00D6                     	ds	2
  1169  00D8                     USBDeviceTasks@i:	
  1170                           
  1171                           ; 1 bytes @ 0x6
  1172  00D8                     	ds	1
  1173  00D9                     ??_ISRCode:	
  1174                           
  1175                           ; 1 bytes @ 0x7
  1176  00D9                     	ds	1
  1177  00DA                     ?_USBTransferOnePacket:	
  1178  00DA                     ??_UserInit:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  00DA                     ??_BlinkUSBStatus:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  00DA                     ??_USBDeviceInit:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  00DA                     ??_USBDeviceAttach:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  00DA                     ?_putsUSBUSART:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  00DA                     USBTransferOnePacket@dir:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  00DA                     putsUSBUSART@data:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x8
  1201  00DA                     	ds	1
  1202  00DB                     USBTransferOnePacket@data:	
  1203  00DB                     USBDeviceInit@p:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x9
  1208  00DB                     	ds	1
  1209  00DC                     ??_putsUSBUSART:	
  1210  00DC                     USBTransferOnePacket@len:	
  1211                           ; 1 bytes @ 0xA
  1212                           
  1213                           
  1214                           ; 1 bytes @ 0xA
  1215  00DC                     	ds	1
  1216  00DD                     ??_USBTransferOnePacket:	
  1217  00DD                     USBDeviceInit@i_746:	
  1218                           ; 1 bytes @ 0xB
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0xB
  1222  00DD                     	ds	1
  1223  00DE                     USBDeviceInit@i:	
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226  00DE                     	ds	1
  1227  00DF                     ??_InitializeSystem:	
  1228  00DF                     USBTransferOnePacket@ep:	
  1229                           ; 1 bytes @ 0xD
  1230                           
  1231  00DF                     putsUSBUSART@pData:	
  1232                           ; 1 bytes @ 0xD
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0xD
  1236  00DF                     	ds	1
  1237  00E0                     USBTransferOnePacket@handle:	
  1238                           
  1239                           ; 1 bytes @ 0xE
  1240  00E0                     	ds	1
  1241  00E1                     ?_getsUSBUSART:	
  1242  00E1                     ??_CDCTxService:	
  1243                           ; 1 bytes @ 0xF
  1244                           
  1245  00E1                     getsUSBUSART@len:	
  1246                           ; 1 bytes @ 0xF
  1247                           
  1248  00E1                     putsUSBUSART@len:	
  1249                           ; 1 bytes @ 0xF
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0xF
  1253  00E1                     	ds	1
  1254  00E2                     ??_getsUSBUSART:	
  1255                           
  1256                           ; 1 bytes @ 0x10
  1257  00E2                     	ds	2
  1258  00E4                     _CDCTxService$3221:	
  1259                           
  1260                           ; 2 bytes @ 0x12
  1261  00E4                     	ds	1
  1262  00E5                     getsUSBUSART@buffer:	
  1263                           
  1264                           ; 1 bytes @ 0x13
  1265  00E5                     	ds	1
  1266  00E6                     CDCTxService@i:	
  1267  00E6                     _getsUSBUSART$3173:	
  1268                           ; 1 bytes @ 0x14
  1269                           
  1270                           
  1271                           ; 2 bytes @ 0x14
  1272  00E6                     	ds	1
  1273  00E7                     CDCTxService@byte_to_send:	
  1274                           
  1275                           ; 1 bytes @ 0x15
  1276  00E7                     	ds	1
  1277                           
  1278                           	psect	cstackCOMMON
  1279  0070                     __pcstackCOMMON:	
  1280  0070                     ?_USBWakeFromSuspend:	
  1281  0070                     ?_USBSuspend:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_USBStallHandler:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ??_USBStallHandler:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_USBCtrlEPService:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_USBConfigureEndpoint:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_USBCtrlTrfTxService:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ??_USBCtrlTrfTxService:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_memset:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_USBCtrlTrfSetupHandler:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_USBCtrlTrfOutHandler:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_USBCtrlTrfInHandler:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_USBCheckStdRequest:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_USBStdFeatureReqHandler:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_InitializeSystem:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_ProcessIO:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_UserInit:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_BlinkUSBStatus:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_USBDeviceInit:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_USBDeviceTasks:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_USBDeviceAttach:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_USBCtrlEPAllowStatusStage:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ??_USBCtrlEPAllowStatusStage:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_USBCtrlEPAllowDataStage:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_USBCtrlEPServiceComplete:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_USBCtrlTrfRxService:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_USBStdSetCfgHandler:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_USBStdGetDscHandler:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ??_USBStdGetDscHandler:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_USBStdGetStatusHandler:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ??_USBStdGetStatusHandler:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_USBCheckCDCRequest:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ??_USBCheckCDCRequest:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ?_CDCInitEP:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_CDCTxService:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_ISRCode:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_USBCBSuspend:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ??_USBCBSuspend:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_USBCBWakeFromSuspend:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ??_USBCBWakeFromSuspend:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_USBCB_SOF_Handler:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ??_USBCB_SOF_Handler:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_USBCBErrorHandler:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ??_USBCBErrorHandler:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_USBCBCheckOtherReq:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ?_USBCBStdSetDscHandler:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ??_USBCBStdSetDscHandler:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_USBCBInitEP:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?i1_USBDeviceInit:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ??i1_USBDeviceInit:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?i1_USBTransferOnePacket:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_main:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     USBConfigureEndpoint@direction:	
  1435                           ; 2 bytes @ 0x0
  1436                           
  1437  0070                     i1USBTransferOnePacket@dir:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     memset@c:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x0
  1445  0070                     	ds	1
  1446  0071                     ??_USBConfigureEndpoint:	
  1447  0071                     ??_USBCBCheckOtherReq:	
  1448                           ; 1 bytes @ 0x1
  1449                           
  1450  0071                     USBStdGetStatusHandler@p:	
  1451                           ; 1 bytes @ 0x1
  1452                           
  1453  0071                     i1USBTransferOnePacket@data:	
  1454                           ; 1 bytes @ 0x1
  1455                           
  1456  0071                     i1USBDeviceInit@p:	
  1457                           ; 1 bytes @ 0x1
  1458                           
  1459                           
  1460                           ; 2 bytes @ 0x1
  1461  0071                     	ds	1
  1462  0072                     ??_USBCtrlTrfRxService:	
  1463  0072                     i1USBTransferOnePacket@len:	
  1464                           ; 1 bytes @ 0x2
  1465                           
  1466  0072                     memset@n:	
  1467                           ; 1 bytes @ 0x2
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x2
  1471  0072                     	ds	1
  1472  0073                     ??i1_USBTransferOnePacket:	
  1473  0073                     i1USBDeviceInit@i_746:	
  1474                           ; 1 bytes @ 0x3
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x3
  1478  0073                     	ds	1
  1479  0074                     ??_memset:	
  1480  0074                     USBCtrlTrfTxService@byteToSend:	
  1481                           ; 1 bytes @ 0x4
  1482                           
  1483  0074                     i1USBDeviceInit@i:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0x4
  1488  0074                     	ds	1
  1489  0075                     ??_USBCtrlTrfInHandler:	
  1490  0075                     ??_USBCtrlEPAllowDataStage:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     USBConfigureEndpoint@EPNum:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496  0075                     memset@p:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499  0075                     i1USBTransferOnePacket@ep:	
  1500                           ; 1 bytes @ 0x5
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x5
  1504  0075                     	ds	1
  1505  0076                     USBConfigureEndpoint@handle:	
  1506  0076                     USBCtrlTrfRxService@i:	
  1507                           ; 1 bytes @ 0x6
  1508                           
  1509  0076                     memset@p1:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512  0076                     i1USBTransferOnePacket@handle:	
  1513                           ; 1 bytes @ 0x6
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x6
  1517  0076                     	ds	1
  1518  0077                     ?_USBEnableEndpoint:	
  1519  0077                     ??_USBCtrlEPServiceComplete:	
  1520                           ; 1 bytes @ 0x7
  1521                           
  1522  0077                     USBEnableEndpoint@options:	
  1523                           ; 1 bytes @ 0x7
  1524                           
  1525  0077                     USBCtrlTrfRxService@byteToRead:	
  1526                           ; 1 bytes @ 0x7
  1527                           
  1528  0077                     USBCtrlTrfInHandler@lastDTS:	
  1529                           ; 1 bytes @ 0x7
  1530                           
  1531                           
  1532                           ; 1 bytes @ 0x7
  1533  0077                     	ds	1
  1534  0078                     ??_USBCtrlTrfOutHandler:	
  1535  0078                     ??_USBEnableEndpoint:	
  1536                           ; 1 bytes @ 0x8
  1537                           
  1538                           
  1539                           ; 1 bytes @ 0x8
  1540  0078                     	ds	2
  1541  007A                     USBEnableEndpoint@p:	
  1542                           
  1543                           ; 2 bytes @ 0xA
  1544  007A                     	ds	2
  1545  007C                     USBEnableEndpoint@ep:	
  1546                           
  1547                           ; 1 bytes @ 0xC
  1548  007C                     	ds	1
  1549  007D                     ??_USBWakeFromSuspend:	
  1550  007D                     ??_USBSuspend:	
  1551                           ; 1 bytes @ 0xD
  1552                           
  1553  007D                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1554                           ; 1 bytes @ 0xD
  1555                           
  1556  007D                     ??_USBStdSetCfgHandler:	
  1557                           ; 1 bytes @ 0xD
  1558                           
  1559  007D                     ??_USBCBInitEP:	
  1560                           ; 1 bytes @ 0xD
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0xD
  1564  007D                     	ds	1
  1565                           
  1566                           	psect	cstackBANK0
  1567  0060                     __pcstackBANK0:	
  1568  0060                     ??_CDCInitEP:	
  1569                           
  1570                           ; 1 bytes @ 0x0
  1571  0060                     	ds	3
  1572  0063                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1573  0063                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1574                           ; 1 bytes @ 0x3
  1575                           
  1576                           
  1577                           ; 2 bytes @ 0x3
  1578  0063                     	ds	2
  1579  0065                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1580                           
  1581                           ; 1 bytes @ 0x5
  1582  0065                     	ds	1
  1583  0066                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1584                           
  1585                           ; 2 bytes @ 0x6
  1586  0066                     	ds	2
  1587  0068                     ??_USBStdFeatureReqHandler:	
  1588  0068                     USBStdSetCfgHandler@p:	
  1589                           ; 1 bytes @ 0x8
  1590                           
  1591                           
  1592                           ; 2 bytes @ 0x8
  1593  0068                     	ds	2
  1594  006A                     USBStdSetCfgHandler@i_1853:	
  1595  006A                     USBStdFeatureReqHandler@pUEP:	
  1596                           ; 1 bytes @ 0xA
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0xA
  1600  006A                     	ds	1
  1601  006B                     USBStdSetCfgHandler@i:	
  1602                           
  1603                           ; 1 bytes @ 0xB
  1604  006B                     	ds	1
  1605  006C                     USBStdFeatureReqHandler@current_ep_data:	
  1606                           
  1607                           ; 1 bytes @ 0xC
  1608  006C                     	ds	1
  1609  006D                     USBStdFeatureReqHandler@p:	
  1610                           
  1611                           ; 1 bytes @ 0xD
  1612  006D                     	ds	1
  1613  006E                     ??_USBCheckStdRequest:	
  1614                           
  1615                           ; 1 bytes @ 0xE
  1616  006E                     	ds	1
  1617  006F                     ??_USBCtrlTrfSetupHandler:	
  1618                           
  1619                           ; 1 bytes @ 0xF
  1620  006F                     	ds	1
  1621                           
  1622                           	psect	maintext
  1623  0BB1                     __pmaintext:	
  1624 ;;
  1625 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1626 ;;
  1627 ;; *************** function _main *****************
  1628 ;; Defined at:
  1629 ;;		line 106 in file "../main.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2  585[None  ] int 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : B1F/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1647 ;;Total ram usage:        2 bytes
  1648 ;; Hardware stack levels required when called:   14
  1649 ;; This function calls:
  1650 ;;		_InitializeSystem
  1651 ;;		_ProcessIO
  1652 ;;		_USBDeviceAttach
  1653 ;; This function is called by:
  1654 ;;		Startup code after reset
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _main
  1660  0BB1                     _main:	
  1661                           
  1662                           ;main.c: 108: InitializeSystem();
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1666  0BB1  318B  2374  318B   	fcall	_InitializeSystem
  1667                           
  1668                           ;main.c: 110: state = PORTCbits.RC2;
  1669  0BB4  0020               	movlb	0	; select bank0
  1670  0BB5  0C0E               	rrf	14,w	;volatile
  1671  0BB6  0C89               	rrf	9,f
  1672  0BB7  3901               	andlw	1
  1673  0BB8  0022               	movlb	2	; select bank2
  1674  0BB9  00CC               	movwf	??_main^(0+256)
  1675  0BBA  01CD               	clrf	(??_main^(0+256)+1)
  1676  0BBB  084C               	movf	??_main^(0+256),w
  1677  0BBC  00B7               	movwf	_state^(0+256)
  1678  0BBD  084D               	movf	(??_main+1)^(0+256),w
  1679  0BBE  00B8               	movwf	(_state+1)^(0+256)
  1680  0BBF                     l4182:	
  1681                           ;main.c: 113: {
  1682                           ;main.c: 115: if(1 && (USBDeviceState == DETACHED_STATE))
  1683                           
  1684  0BBF  0021               	movlb	1	; select bank1
  1685  0BC0  084E               	movf	_USBDeviceState^(0+128),w	;volatile
  1686  0BC1  1D03               	btfss	3,2
  1687  0BC2  2BC6               	goto	l4186
  1688                           
  1689                           ;main.c: 116: {
  1690                           ;main.c: 117: USBDeviceAttach();
  1691  0BC3  318B  23E4  318B   	fcall	_USBDeviceAttach
  1692  0BC6                     l4186:	
  1693                           
  1694                           ;main.c: 118: }
  1695                           ;main.c: 139: ProcessIO();
  1696  0BC6  3184  24A8  318B   	fcall	_ProcessIO
  1697  0BC9  2BBF               	goto	l4182
  1698  0BCA                     __end_of_main:	
  1699                           
  1700                           	psect	text1
  1701  0BE4                     __ptext1:	
  1702 ;; *************** function _USBDeviceAttach *****************
  1703 ;; Defined at:
  1704 ;;		line 1525 in file "../Microchip/USB/usb_device.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;Total ram usage:        1 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:   11
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _USBDeviceAttach
  1734  0BE4                     _USBDeviceAttach:	
  1735                           
  1736                           ;usb_device.c: 1529: {
  1737                           ;usb_device.c: 1530: if(1 == 1)
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  1741  0BE4  0021               	movlb	1	; select bank1
  1742  0BE5  084E               	movf	_USBDeviceState^(0+128),w	;volatile
  1743  0BE6  1D03               	btfss	3,2
  1744  0BE7  0008               	return
  1745                           
  1746                           ;usb_device.c: 1531: {
  1747                           ;usb_device.c: 1533: UCON = 0;
  1748  0BE8  003D               	movlb	29	; select bank29
  1749  0BE9  018E               	clrf	14	;volatile
  1750                           
  1751                           ;usb_device.c: 1536: UIE = 0;
  1752  0BEA  0192               	clrf	18	;volatile
  1753                           
  1754                           ;usb_device.c: 1540: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1755  0BEB  3016               	movlw	22
  1756  0BEC  0091               	movwf	17	;volatile
  1757  0BED  309F               	movlw	159
  1758  0BEE  0097               	movwf	23	;volatile
  1759  0BEF  307B               	movlw	123
  1760  0BF0  0092               	movwf	18	;volatile
  1761                           
  1762                           ;usb_device.c: 1542: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  1763  0BF1  0021               	movlb	1	; select bank1
  1764  0BF2  1512               	bsf	18,2	;volatile
  1765  0BF3  170B               	bsf	11,6	;volatile
  1766  0BF4  178B               	bsf	11,7	;volatile
  1767  0BF5                     l187:	
  1768                           ;usb_device.c: 1545: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1769                           
  1770  0BF5  003D               	movlb	29	; select bank29
  1771  0BF6  198E               	btfsc	14,3	;volatile
  1772  0BF7  2BFA               	goto	l3692
  1773  0BF8  158E               	bsf	14,3	;volatile
  1774  0BF9  2BF5               	goto	l187
  1775  0BFA                     l3692:	
  1776                           
  1777                           ;usb_device.c: 1548: USBDeviceState = ATTACHED_STATE;
  1778  0BFA  3001               	movlw	1
  1779  0BFB  0021               	movlb	1	; select bank1
  1780  0BFC  00DA               	movwf	??_USBDeviceAttach^(0+128)
  1781  0BFD  085A               	movf	??_USBDeviceAttach^(0+128),w
  1782  0BFE  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  1783  0BFF  0008               	return
  1784  0C00                     __end_of_USBDeviceAttach:	
  1785                           
  1786                           	psect	text2
  1787  04A8                     __ptext2:	
  1788 ;; *************** function _ProcessIO *****************
  1789 ;; Defined at:
  1790 ;;		line 266 in file "../main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  i               1    4[BANK2 ] unsigned char 
  1795 ;;  validCmd        1    2[BANK2 ] enum E185
  1796 ;;  numBytesRead    1    3[BANK2 ] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;Total ram usage:        5 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:   13
  1813 ;; This function calls:
  1814 ;;		_BlinkUSBStatus
  1815 ;;		_CDCTxService
  1816 ;;		_getsUSBUSART
  1817 ;;		_putsUSBUSART
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _ProcessIO
  1825  04A8                     _ProcessIO:	
  1826                           
  1827                           ;main.c: 268: BYTE numBytesRead;
  1828                           ;main.c: 271: BlinkUSBStatus();
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1832  04A8  318B  235C  3184   	fcall	_BlinkUSBStatus
  1833                           
  1834                           ;main.c: 274: RC3 = PORTCbits.RC2;
  1835  04AB  0020               	movlb	0	; select bank0
  1836  04AC  1D0E               	btfss	14,2	;volatile
  1837  04AD  2CB1               	goto	u3830
  1838  04AE  0020               	movlb	0	; select bank0
  1839  04AF  158E               	bsf	14,3	;volatile
  1840  04B0  2CB3               	goto	l4120
  1841  04B1                     u3830:	
  1842  04B1  0020               	movlb	0	; select bank0
  1843  04B2  118E               	bcf	14,3	;volatile
  1844  04B3                     l4120:	
  1845                           
  1846                           ;main.c: 278: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  1847  04B3  3020               	movlw	32
  1848  04B4  0021               	movlb	1	; select bank1
  1849  04B5  024E               	subwf	_USBDeviceState^(0+128),w	;volatile
  1850  04B6  1C03               	skipc
  1851  04B7  0008               	return
  1852  04B8  003D               	movlb	29	; select bank29
  1853  04B9  188E               	btfsc	14,1	;volatile
  1854  04BA  0008               	return
  1855                           
  1856                           ;main.c: 280: if((cdc_trf_state == 0))
  1857  04BB  0021               	movlb	1	; select bank1
  1858  04BC  083D               	movf	_cdc_trf_state^(0+128),w
  1859  04BD  1D03               	btfss	3,2
  1860  04BE  2D36               	goto	l4158
  1861                           
  1862                           ;main.c: 281: {
  1863                           ;main.c: 282: numBytesRead = getsUSBUSART(USB_Out_Buffer,64);
  1864  04BF  3040               	movlw	64
  1865  04C0  0022               	movlb	2	; select bank2
  1866  04C1  00C7               	movwf	??_ProcessIO^(0+256)
  1867  04C2  0847               	movf	??_ProcessIO^(0+256),w
  1868  04C3  0021               	movlb	1	; select bank1
  1869  04C4  00E1               	movwf	getsUSBUSART@len^(0+128)
  1870  04C5  30A0               	movlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  1871  04C6  318E  269E  3184   	fcall	_getsUSBUSART
  1872  04C9  0022               	movlb	2	; select bank2
  1873  04CA  00C8               	movwf	(??_ProcessIO+1)^(0+256)
  1874  04CB  0848               	movf	(??_ProcessIO+1)^(0+256),w
  1875  04CC  00CA               	movwf	ProcessIO@numBytesRead^(0+256)
  1876                           
  1877                           ;main.c: 283: if(numBytesRead != 0)
  1878  04CD  084A               	movf	ProcessIO@numBytesRead^(0+256),w
  1879  04CE  1903               	btfsc	3,2
  1880  04CF  2CFB               	goto	l4146
  1881                           
  1882                           ;main.c: 284: {
  1883                           ;main.c: 285: BYTE i;
  1884                           ;main.c: 286: BOOL validCmd = TRUE;
  1885  04D0  01C9               	clrf	ProcessIO@validCmd^(0+256)
  1886  04D1  0AC9               	incf	ProcessIO@validCmd^(0+256),f
  1887                           
  1888                           ;main.c: 288: for(i=0;i<numBytesRead;i++)
  1889  04D2  01CB               	clrf	ProcessIO@i^(0+256)
  1890  04D3                     l4144:	
  1891  04D3  084A               	movf	ProcessIO@numBytesRead^(0+256),w
  1892  04D4  024B               	subwf	ProcessIO@i^(0+256),w
  1893  04D5  1803               	btfsc	3,0
  1894  04D6  2D36               	goto	l4158
  1895                           
  1896                           ;main.c: 289: {
  1897                           ;main.c: 318: if (USB_Out_Buffer[i] == '?') {
  1898  04D7  084B               	movf	ProcessIO@i^(0+256),w
  1899  04D8  3EA0               	addlw	(low (_USB_Out_Buffer| (0+256)))& (0+255)
  1900  04D9  0086               	movwf	6
  1901  04DA  3001               	movlw	1	; select bank3/4
  1902  04DB  0087               	movwf	7
  1903  04DC  303F               	movlw	63
  1904  04DD  0601               	xorwf	1,w
  1905  04DE  1D03               	btfss	3,2
  1906  04DF  2CE5               	goto	l607
  1907                           
  1908                           ;main.c: 319: putsUSBUSART((char*)"Standup Timer 1.0");
  1909  04E0  30AF               	movlw	low (STR_1| (0+32768))
  1910  04E1  0021               	movlb	1	; select bank1
  1911  04E2  00DA               	movwf	putsUSBUSART@data^(0+128)
  1912  04E3  3090               	movlw	high (STR_1| (0+32768))
  1913  04E4  2CF1               	goto	L1
  1914  04E5                     l607:	
  1915                           ;main.c: 320: } else {
  1916                           
  1917                           
  1918                           ;main.c: 321: if (PORTCbits.RC2 == 1) {
  1919  04E5  0020               	movlb	0	; select bank0
  1920  04E6  1D0E               	btfss	14,2	;volatile
  1921  04E7  2CED               	goto	l4140
  1922                           
  1923                           ;main.c: 322: putsUSBUSART((char*)"1");
  1924  04E8  30DB               	movlw	low (STR_2| (0+32768))
  1925  04E9  0021               	movlb	1	; select bank1
  1926  04EA  00DA               	movwf	putsUSBUSART@data^(0+128)
  1927  04EB  3090               	movlw	high (STR_2| (0+32768))
  1928  04EC  2CF1               	goto	L1
  1929  04ED                     l4140:	
  1930                           ;main.c: 323: } else {
  1931                           
  1932                           
  1933                           ;main.c: 324: putsUSBUSART((char*)"0");
  1934  04ED  30BF               	movlw	low ((STR_1+16)| (0+32768))
  1935  04EE  0021               	movlb	1	; select bank1
  1936  04EF  00DA               	movwf	putsUSBUSART@data^(0+128)
  1937  04F0  3090               	movlw	high ((STR_1+16)| (0+32768))
  1938  04F1                     L1:	
  1939  04F1  00DB               	movwf	(putsUSBUSART@data^(0+128)+1)
  1940  04F2  318C  244A  3184   	fcall	_putsUSBUSART
  1941  04F5  3001               	movlw	1
  1942  04F6  0022               	movlb	2	; select bank2
  1943  04F7  00C7               	movwf	??_ProcessIO^(0+256)
  1944  04F8  0847               	movf	??_ProcessIO^(0+256),w
  1945  04F9  07CB               	addwf	ProcessIO@i^(0+256),f
  1946  04FA  2CD3               	goto	l4144
  1947  04FB                     l4146:	
  1948                           ;main.c: 325: }
  1949                           ;main.c: 326: }
  1950                           ;main.c: 327: }
  1951                           ;main.c: 338: } else {
  1952                           
  1953                           
  1954                           ;main.c: 339: if (RC2 != state) {
  1955  04FB  1003               	clrc
  1956  04FC  0020               	movlb	0	; select bank0
  1957  04FD  190E               	btfsc	14,2	;volatile
  1958  04FE  1403               	setc
  1959  04FF  3000               	movlw	0
  1960  0500  3D09               	addwfc	9,w
  1961  0501  0022               	movlb	2	; select bank2
  1962  0502  00C7               	movwf	??_ProcessIO^(0+256)
  1963  0503  01C8               	clrf	(??_ProcessIO^(0+256)+1)
  1964  0504  0838               	movf	(_state+1)^(0+256),w
  1965  0505  0648               	xorwf	(??_ProcessIO+1)^(0+256),w
  1966  0506  1D03               	skipz
  1967  0507  2D0A               	goto	u3925
  1968  0508  0837               	movf	_state^(0+256),w
  1969  0509  0647               	xorwf	??_ProcessIO^(0+256),w
  1970  050A                     u3925:	
  1971  050A  1903               	skipnz
  1972  050B  2D36               	goto	l4158
  1973                           
  1974                           ;main.c: 341: if (RC2 == 1) {
  1975  050C  0020               	movlb	0	; select bank0
  1976  050D  1D0E               	btfss	14,2	;volatile
  1977  050E  2D14               	goto	l4152
  1978                           
  1979                           ;main.c: 342: putsUSBUSART((char*)"1");
  1980  050F  30DB               	movlw	low (STR_2| (0+32768))
  1981  0510  0021               	movlb	1	; select bank1
  1982  0511  00DA               	movwf	putsUSBUSART@data^(0+128)
  1983  0512  3090               	movlw	high (STR_2| (0+32768))
  1984  0513  2D18               	goto	L2
  1985  0514                     l4152:	
  1986                           ;main.c: 343: } else {
  1987                           
  1988                           
  1989                           ;main.c: 344: putsUSBUSART((char*)"0");
  1990  0514  30BF               	movlw	low ((STR_1+16)| (0+32768))
  1991  0515  0021               	movlb	1	; select bank1
  1992  0516  00DA               	movwf	putsUSBUSART@data^(0+128)
  1993  0517  3090               	movlw	high ((STR_1+16)| (0+32768))
  1994  0518                     L2:	
  1995  0518  00DB               	movwf	(putsUSBUSART@data^(0+128)+1)
  1996  0519  318C  244A  3184   	fcall	_putsUSBUSART
  1997                           
  1998                           ;main.c: 345: }
  1999                           ;main.c: 347: state = RC2;
  2000  051C  1003               	clrc
  2001  051D  0020               	movlb	0	; select bank0
  2002  051E  190E               	btfsc	14,2	;volatile
  2003  051F  1403               	setc
  2004  0520  3000               	movlw	0
  2005  0521  3D09               	addwfc	9,w
  2006  0522  0022               	movlb	2	; select bank2
  2007  0523  00C7               	movwf	??_ProcessIO^(0+256)
  2008  0524  01C8               	clrf	(??_ProcessIO^(0+256)+1)
  2009  0525  0847               	movf	??_ProcessIO^(0+256),w
  2010  0526  00B7               	movwf	_state^(0+256)
  2011  0527  0848               	movf	(??_ProcessIO+1)^(0+256),w
  2012  0528  00B8               	movwf	(_state+1)^(0+256)
  2013                           
  2014                           ;main.c: 350: _delay((unsigned long)((1000)*(48000000L/4000.0)));
  2015  0529  303D               	movlw	61
  2016  052A  0022               	movlb	2	; select bank2
  2017  052B  00C8               	movwf	(??_ProcessIO^(0+256)+1)
  2018  052C  30E1               	movlw	225
  2019  052D  00C7               	movwf	??_ProcessIO^(0+256)
  2020  052E  303F               	movlw	63
  2021  052F                     u3977:	
  2022  052F  0B89               	decfsz	9,f
  2023  0530  2D2F               	goto	u3977
  2024  0531  0BC7               	decfsz	??_ProcessIO^(0+256),f
  2025  0532  2D2F               	goto	u3977
  2026  0533  0BC8               	decfsz	(??_ProcessIO^(0+256)+1),f
  2027  0534  2D2F               	goto	u3977
  2028  0535  3200               	nop2
  2029  0536                     l4158:	
  2030                           
  2031                           ;main.c: 353: }
  2032                           ;main.c: 354: }
  2033                           ;main.c: 355: }
  2034                           ;main.c: 357: CDCTxService();
  2035  0536  3182  2221         	fcall	_CDCTxService
  2036  0538  0008               	return
  2037  0539                     __end_of_ProcessIO:	
  2038                           
  2039                           	psect	text3
  2040  0C4A                     __ptext3:	
  2041 ;; *************** function _putsUSBUSART *****************
  2042 ;; Defined at:
  2043 ;;		line 749 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  data            2    8[BANK1 ] PTR unsigned char 
  2046 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  2047 ;;		 -> STR_1(18), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  pData           2   13[BANK1 ] PTR unsigned char 
  2050 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  2051 ;;		 -> STR_1(18), 
  2052 ;;  len             1   15[BANK1 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        8 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:   11
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_ProcessIO
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _putsUSBUSART
  2078  0C4A                     _putsUSBUSART:	
  2079                           
  2080                           ;usb_function_cdc.c: 751: BYTE len;
  2081                           ;usb_function_cdc.c: 752: char *pData;
  2082                           ;usb_function_cdc.c: 777: {PIE2bits.USBIE = 0;};
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _putsUSBUSART: [wreg-fsr0h+status,2+status,0]
  2086  0C4A  0021               	movlb	1	; select bank1
  2087  0C4B  1112               	bcf	18,2	;volatile
  2088                           
  2089                           ;usb_function_cdc.c: 778: if(cdc_trf_state != 0)
  2090  0C4C  083D               	movf	_cdc_trf_state^(0+128),w
  2091  0C4D  1903               	btfsc	3,2
  2092  0C4E  2C51               	goto	l3994
  2093                           
  2094                           ;usb_function_cdc.c: 779: {
  2095                           ;usb_function_cdc.c: 780: {PIE2bits.USBIE = 1;};
  2096  0C4F  1512               	bsf	18,2	;volatile
  2097                           
  2098                           ;usb_function_cdc.c: 781: return;
  2099  0C50  0008               	return
  2100  0C51                     l3994:	
  2101                           
  2102                           ;usb_function_cdc.c: 782: }
  2103                           ;usb_function_cdc.c: 788: len = 0;
  2104  0C51  01E1               	clrf	putsUSBUSART@len^(0+128)
  2105                           
  2106                           ;usb_function_cdc.c: 789: pData = data;
  2107  0C52  085B               	movf	(putsUSBUSART@data+1)^(0+128),w
  2108  0C53  00E0               	movwf	(putsUSBUSART@pData+1)^(0+128)
  2109  0C54  085A               	movf	putsUSBUSART@data^(0+128),w
  2110  0C55  00DF               	movwf	putsUSBUSART@pData^(0+128)
  2111  0C56                     l3998:	
  2112                           ;usb_function_cdc.c: 790: do
  2113                           
  2114                           
  2115                           ;usb_function_cdc.c: 791: {
  2116                           ;usb_function_cdc.c: 792: len++;
  2117  0C56  3001               	movlw	1
  2118  0C57  00DC               	movwf	??_putsUSBUSART^(0+128)
  2119  0C58  085C               	movf	??_putsUSBUSART^(0+128),w
  2120  0C59  07E1               	addwf	putsUSBUSART@len^(0+128),f
  2121                           
  2122                           ;usb_function_cdc.c: 793: if(len == 255) break;
  2123  0C5A  0A61               	incf	putsUSBUSART@len^(0+128),w
  2124  0C5B  1903               	btfsc	3,2
  2125  0C5C  2C6B               	goto	l4006
  2126                           
  2127                           ;usb_function_cdc.c: 794: }while(*pData++);
  2128  0C5D  0860               	movf	(putsUSBUSART@pData+1)^(0+128),w
  2129  0C5E  00DD               	movwf	(??_putsUSBUSART^(0+128)+1)
  2130  0C5F  085F               	movf	putsUSBUSART@pData^(0+128),w
  2131  0C60  00DC               	movwf	??_putsUSBUSART^(0+128)
  2132  0C61  0ADF               	incf	putsUSBUSART@pData^(0+128),f
  2133  0C62  1903               	skipnz
  2134  0C63  0AE0               	incf	(putsUSBUSART@pData+1)^(0+128),f
  2135  0C64  085C               	movf	??_putsUSBUSART^(0+128),w
  2136  0C65  0084               	movwf	4
  2137  0C66  085D               	movf	(??_putsUSBUSART+1)^(0+128),w
  2138  0C67  0085               	movwf	5
  2139  0C68  0012               	moviw fsr0++
  2140  0C69  1D03               	btfss	3,2
  2141  0C6A  2C56               	goto	l3998
  2142  0C6B                     l4006:	
  2143                           
  2144                           ;usb_function_cdc.c: 802: { pCDCSrc.bRam = (BYTE*)data; cdc_tx_len = len; cdc_mem_type =
      +                           0x01; cdc_trf_state = 1; };
  2145  0C6B  085B               	movf	(putsUSBUSART@data+1)^(0+128),w
  2146  0C6C  0022               	movlb	2	; select bank2
  2147  0C6D  00BE               	movwf	(_pCDCSrc+1)^(0+256)
  2148  0C6E  0021               	movlb	1	; select bank1
  2149  0C6F  085A               	movf	putsUSBUSART@data^(0+128),w
  2150  0C70  0022               	movlb	2	; select bank2
  2151  0C71  00BD               	movwf	_pCDCSrc^(0+256)
  2152  0C72  0021               	movlb	1	; select bank1
  2153  0C73  0861               	movf	putsUSBUSART@len^(0+128),w
  2154  0C74  00DC               	movwf	??_putsUSBUSART^(0+128)
  2155  0C75  085C               	movf	??_putsUSBUSART^(0+128),w
  2156  0C76  00BC               	movwf	_cdc_tx_len^(0+128)
  2157  0C77  01BB               	clrf	_cdc_mem_type^(0+128)
  2158  0C78  0ABB               	incf	_cdc_mem_type^(0+128),f
  2159  0C79  01BD               	clrf	_cdc_trf_state^(0+128)
  2160  0C7A  0ABD               	incf	_cdc_trf_state^(0+128),f
  2161                           
  2162                           ;usb_function_cdc.c: 803: {PIE2bits.USBIE = 1;};
  2163  0C7B  1512               	bsf	18,2	;volatile
  2164  0C7C  0008               	return
  2165  0C7D                     __end_of_putsUSBUSART:	
  2166                           
  2167                           	psect	text4
  2168  0E9E                     __ptext4:	
  2169 ;; *************** function _getsUSBUSART *****************
  2170 ;; Defined at:
  2171 ;;		line 605 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  buffer          1    wreg     PTR unsigned char 
  2174 ;;		 -> USB_Out_Buffer(64), 
  2175 ;;  len             1   15[BANK1 ] unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  buffer          1   19[BANK1 ] PTR unsigned char 
  2178 ;;		 -> USB_Out_Buffer(64), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      unsigned char 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        7 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:   12
  2195 ;; This function calls:
  2196 ;;		_USBTransferOnePacket
  2197 ;; This function is called by:
  2198 ;;		_ProcessIO
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _getsUSBUSART
  2204  0E9E                     _getsUSBUSART:	
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2208                           ;getsUSBUSART@buffer stored from wreg
  2209  0E9E  0021               	movlb	1	; select bank1
  2210  0E9F  00E5               	movwf	getsUSBUSART@buffer^(0+128)
  2211                           
  2212                           ;usb_function_cdc.c: 607: cdc_rx_len = 0;
  2213  0EA0  01BE               	clrf	_cdc_rx_len^(0+128)
  2214                           
  2215                           ;usb_function_cdc.c: 609: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHan
      +                          dle)->STAT.UOWN))
  2216  0EA1  083A               	movf	_CDCDataOutHandle^(0+128),w
  2217  0EA2  1903               	btfsc	3,2
  2218  0EA3  2EB1               	goto	l3966
  2219  0EA4  083A               	movf	_CDCDataOutHandle^(0+128),w
  2220  0EA5  0086               	movwf	6
  2221  0EA6  0187               	clrf	7
  2222  0EA7  0D01               	rlf	1,w
  2223  0EA8  0D01               	rlf	1,w
  2224  0EA9  3901               	andlw	1
  2225  0EAA  00E2               	movwf	??_getsUSBUSART^(0+128)
  2226  0EAB  01E3               	clrf	(??_getsUSBUSART^(0+128)+1)
  2227  0EAC  0862               	movf	??_getsUSBUSART^(0+128),w
  2228  0EAD  00E6               	movwf	_getsUSBUSART$3173^(0+128)
  2229  0EAE  0863               	movf	(??_getsUSBUSART+1)^(0+128),w
  2230  0EAF  00E7               	movwf	(_getsUSBUSART$3173+1)^(0+128)
  2231  0EB0  2EB3               	goto	l3968
  2232  0EB1                     l3966:	
  2233  0EB1  01E6               	clrf	_getsUSBUSART$3173^(0+128)
  2234  0EB2  01E7               	clrf	(_getsUSBUSART$3173+1)^(0+128)
  2235  0EB3                     l3968:	
  2236  0EB3  0866               	movf	_getsUSBUSART$3173^(0+128),w
  2237  0EB4  0467               	iorwf	(_getsUSBUSART$3173+1)^(0+128),w
  2238  0EB5  1D03               	btfss	3,2
  2239  0EB6  2EED               	goto	l3984
  2240                           
  2241                           ;usb_function_cdc.c: 610: {
  2242                           ;usb_function_cdc.c: 615: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2243  0EB7  0A3A               	incf	_CDCDataOutHandle^(0+128),w
  2244  0EB8  0086               	movwf	6
  2245  0EB9  0187               	clrf	7
  2246  0EBA  0861               	movf	getsUSBUSART@len^(0+128),w
  2247  0EBB  0201               	subwf	1,w
  2248  0EBC  1803               	skipnc
  2249  0EBD  2EC3               	goto	l3974
  2250                           
  2251                           ;usb_function_cdc.c: 616: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2252  0EBE  083A               	movf	_CDCDataOutHandle^(0+128),w
  2253  0EBF  0086               	movwf	6
  2254  0EC0  0187               	clrf	7
  2255  0EC1  3F41               	moviw [1]fsr1
  2256  0EC2  00E1               	movwf	getsUSBUSART@len^(0+128)
  2257  0EC3                     l3974:	
  2258                           
  2259                           ;usb_function_cdc.c: 621: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2260  0EC3  01BE               	clrf	_cdc_rx_len^(0+128)
  2261  0EC4                     l3980:	
  2262  0EC4  0861               	movf	getsUSBUSART@len^(0+128),w
  2263  0EC5  023E               	subwf	_cdc_rx_len^(0+128),w
  2264  0EC6  1803               	btfsc	3,0
  2265  0EC7  2EDD               	goto	l3982
  2266                           
  2267                           ;usb_function_cdc.c: 622: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2268  0EC8  083E               	movf	_cdc_rx_len^(0+128),w
  2269  0EC9  3EA0               	addlw	160
  2270  0ECA  0086               	movwf	6
  2271  0ECB  3002               	movlw	2	; select bank5/6
  2272  0ECC  0087               	movwf	7
  2273  0ECD  0801               	movf	1,w
  2274  0ECE  00E2               	movwf	??_getsUSBUSART^(0+128)
  2275  0ECF  083E               	movf	_cdc_rx_len^(0+128),w
  2276  0ED0  0765               	addwf	getsUSBUSART@buffer^(0+128),w
  2277  0ED1  00E3               	movwf	(??_getsUSBUSART+1)^(0+128)
  2278  0ED2  0863               	movf	(??_getsUSBUSART+1)^(0+128),w
  2279  0ED3  0086               	movwf	6
  2280  0ED4  3001               	movlw	1	; select bank2/3
  2281  0ED5  0087               	movwf	7
  2282  0ED6  0862               	movf	??_getsUSBUSART^(0+128),w
  2283  0ED7  0081               	movwf	1
  2284  0ED8  3001               	movlw	1
  2285  0ED9  00E2               	movwf	??_getsUSBUSART^(0+128)
  2286  0EDA  0862               	movf	??_getsUSBUSART^(0+128),w
  2287  0EDB  07BE               	addwf	_cdc_rx_len^(0+128),f
  2288  0EDC  2EC4               	goto	l3980
  2289  0EDD                     l3982:	
  2290                           
  2291                           ;usb_function_cdc.c: 628: CDCDataOutHandle = USBTransferOnePacket(2,0,(BYTE*)&cdc_data_r
      +                          x,sizeof(cdc_data_rx));
  2292  0EDD  01DA               	clrf	USBTransferOnePacket@dir^(0+128)
  2293  0EDE  30A0               	movlw	160
  2294  0EDF  00E2               	movwf	??_getsUSBUSART^(0+128)
  2295  0EE0  0862               	movf	??_getsUSBUSART^(0+128),w
  2296  0EE1  00DB               	movwf	USBTransferOnePacket@data^(0+128)
  2297  0EE2  3040               	movlw	64
  2298  0EE3  00E3               	movwf	(??_getsUSBUSART+1)^(0+128)
  2299  0EE4  0863               	movf	(??_getsUSBUSART+1)^(0+128),w
  2300  0EE5  00DC               	movwf	USBTransferOnePacket@len^(0+128)
  2301  0EE6  3002               	movlw	2
  2302  0EE7  318D  25C1         	fcall	_USBTransferOnePacket
  2303  0EE9  0021               	movlb	1	; select bank1
  2304  0EEA  00E4               	movwf	(??_getsUSBUSART+2)^(0+128)
  2305  0EEB  0864               	movf	(??_getsUSBUSART+2)^(0+128),w
  2306  0EEC  00BA               	movwf	_CDCDataOutHandle^(0+128)
  2307  0EED                     l3984:	
  2308                           
  2309                           ;usb_function_cdc.c: 630: }
  2310                           ;usb_function_cdc.c: 632: return cdc_rx_len;
  2311  0EED  083E               	movf	_cdc_rx_len^(0+128),w
  2312  0EEE  0008               	return
  2313  0EEF                     __end_of_getsUSBUSART:	
  2314                           
  2315                           	psect	text5
  2316  0221                     __ptext5:	
  2317 ;; *************** function _CDCTxService *****************
  2318 ;; Defined at:
  2319 ;;		line 956 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  byte_to_send    1   21[BANK1 ] unsigned char 
  2324 ;;  i               1   20[BANK1 ] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        7 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:   12
  2341 ;; This function calls:
  2342 ;;		_USBTransferOnePacket
  2343 ;; This function is called by:
  2344 ;;		_ProcessIO
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _CDCTxService
  2350  0221                     _CDCTxService:	
  2351                           
  2352                           ;usb_function_cdc.c: 958: BYTE byte_to_send;
  2353                           ;usb_function_cdc.c: 959: BYTE i;
  2354                           ;usb_function_cdc.c: 961: {PIE2bits.USBIE = 0;};
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _CDCTxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2358  0221  0021               	movlb	1	; select bank1
  2359  0222  1112               	bcf	18,2	;volatile
  2360                           
  2361                           ;usb_function_cdc.c: 963: {};
  2362                           ;usb_function_cdc.c: 965: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle
      +                          )->STAT.UOWN))
  2363  0223  0839               	movf	_CDCDataInHandle^(0+128),w
  2364  0224  1903               	btfsc	3,2
  2365  0225  2A33               	goto	l4020
  2366  0226  0839               	movf	_CDCDataInHandle^(0+128),w
  2367  0227  0086               	movwf	6
  2368  0228  0187               	clrf	7
  2369  0229  0D01               	rlf	1,w
  2370  022A  0D01               	rlf	1,w
  2371  022B  3901               	andlw	1
  2372  022C  00E1               	movwf	??_CDCTxService^(0+128)
  2373  022D  01E2               	clrf	(??_CDCTxService^(0+128)+1)
  2374  022E  0861               	movf	??_CDCTxService^(0+128),w
  2375  022F  00E4               	movwf	_CDCTxService$3221^(0+128)
  2376  0230  0862               	movf	(??_CDCTxService+1)^(0+128),w
  2377  0231  00E5               	movwf	(_CDCTxService$3221+1)^(0+128)
  2378  0232  2A35               	goto	l4022
  2379  0233                     l4020:	
  2380  0233  01E4               	clrf	_CDCTxService$3221^(0+128)
  2381  0234  01E5               	clrf	(_CDCTxService$3221+1)^(0+128)
  2382  0235                     l4022:	
  2383  0235  0864               	movf	_CDCTxService$3221^(0+128),w
  2384  0236  0465               	iorwf	(_CDCTxService$3221+1)^(0+128),w
  2385  0237  1903               	btfsc	3,2
  2386  0238  2A3B               	goto	l4026
  2387                           
  2388                           ;usb_function_cdc.c: 966: {
  2389                           ;usb_function_cdc.c: 967: {PIE2bits.USBIE = 1;};
  2390  0239  1512               	bsf	18,2	;volatile
  2391                           
  2392                           ;usb_function_cdc.c: 968: return;
  2393  023A  0008               	return
  2394  023B                     l4026:	
  2395                           
  2396                           ;usb_function_cdc.c: 969: }
  2397                           ;usb_function_cdc.c: 976: if(cdc_trf_state == 3)
  2398  023B  3003               	movlw	3
  2399  023C  063D               	xorwf	_cdc_trf_state^(0+128),w
  2400  023D  1903               	btfsc	3,2
  2401                           
  2402                           ;usb_function_cdc.c: 977: cdc_trf_state = 0;
  2403  023E  01BD               	clrf	_cdc_trf_state^(0+128)
  2404                           
  2405                           ;usb_function_cdc.c: 982: if(cdc_trf_state == 0)
  2406  023F  083D               	movf	_cdc_trf_state^(0+128),w
  2407  0240  1D03               	btfss	3,2
  2408  0241  2A44               	goto	l4034
  2409                           
  2410                           ;usb_function_cdc.c: 983: {
  2411                           ;usb_function_cdc.c: 984: {PIE2bits.USBIE = 1;};
  2412  0242  1512               	bsf	18,2	;volatile
  2413                           
  2414                           ;usb_function_cdc.c: 985: return;
  2415  0243  0008               	return
  2416  0244                     l4034:	
  2417                           
  2418                           ;usb_function_cdc.c: 986: }
  2419                           ;usb_function_cdc.c: 991: if(cdc_trf_state == 2)
  2420  0244  3002               	movlw	2
  2421  0245  063D               	xorwf	_cdc_trf_state^(0+128),w
  2422  0246  1D03               	btfss	3,2
  2423  0247  2A59               	goto	l4040
  2424                           
  2425                           ;usb_function_cdc.c: 992: {
  2426                           ;usb_function_cdc.c: 993: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  2427  0248  01DA               	clrf	USBTransferOnePacket@dir^(0+128)
  2428  0249  0ADA               	incf	USBTransferOnePacket@dir^(0+128),f
  2429  024A  01DB               	clrf	USBTransferOnePacket@data^(0+128)
  2430  024B  01DC               	clrf	USBTransferOnePacket@len^(0+128)
  2431  024C  3002               	movlw	2
  2432  024D  318D  25C1  3182   	fcall	_USBTransferOnePacket
  2433  0250  0021               	movlb	1	; select bank1
  2434  0251  00E1               	movwf	??_CDCTxService^(0+128)
  2435  0252  0861               	movf	??_CDCTxService^(0+128),w
  2436  0253  00B9               	movwf	_CDCDataInHandle^(0+128)
  2437                           
  2438                           ;usb_function_cdc.c: 995: cdc_trf_state = 3;
  2439  0254  3003               	movlw	3
  2440  0255  00E1               	movwf	??_CDCTxService^(0+128)
  2441  0256  0861               	movf	??_CDCTxService^(0+128),w
  2442  0257  00BD               	movwf	_cdc_trf_state^(0+128)
  2443                           
  2444                           ;usb_function_cdc.c: 996: }
  2445  0258  2AD7               	goto	l4088
  2446  0259                     l4040:	
  2447                           
  2448                           ;usb_function_cdc.c: 997: else if(cdc_trf_state == 1)
  2449  0259  033D               	decf	_cdc_trf_state^(0+128),w
  2450  025A  1D03               	btfss	3,2
  2451  025B  2AD7               	goto	l4088
  2452                           
  2453                           ;usb_function_cdc.c: 998: {
  2454                           ;usb_function_cdc.c: 1002: if(cdc_tx_len > sizeof(cdc_data_tx))
  2455  025C  3041               	movlw	65
  2456  025D  023C               	subwf	_cdc_tx_len^(0+128),w
  2457  025E  1C03               	skipc
  2458  025F  2A62               	goto	l4046
  2459                           
  2460                           ;usb_function_cdc.c: 1003: byte_to_send = sizeof(cdc_data_tx);
  2461  0260  3040               	movlw	64
  2462  0261  2A63               	goto	L3
  2463  0262                     l4046:	
  2464                           
  2465                           ;usb_function_cdc.c: 1004: else
  2466                           ;usb_function_cdc.c: 1005: byte_to_send = cdc_tx_len;
  2467  0262  083C               	movf	_cdc_tx_len^(0+128),w
  2468  0263                     L3:	
  2469  0263  00E1               	movwf	??_CDCTxService^(0+128)
  2470  0264  0861               	movf	??_CDCTxService^(0+128),w
  2471  0265  00E7               	movwf	CDCTxService@byte_to_send^(0+128)
  2472                           
  2473                           ;usb_function_cdc.c: 1010: cdc_tx_len = cdc_tx_len - byte_to_send;
  2474  0266  0367               	decf	CDCTxService@byte_to_send^(0+128),w
  2475  0267  3AFF               	xorlw	255
  2476  0268  073C               	addwf	_cdc_tx_len^(0+128),w
  2477  0269  00E1               	movwf	??_CDCTxService^(0+128)
  2478  026A  0861               	movf	??_CDCTxService^(0+128),w
  2479  026B  00BC               	movwf	_cdc_tx_len^(0+128)
  2480                           
  2481                           ;usb_function_cdc.c: 1012: pCDCDst.bRam = (BYTE*)&cdc_data_tx;
  2482  026C  3020               	movlw	32
  2483  026D  00E1               	movwf	??_CDCTxService^(0+128)
  2484  026E  0861               	movf	??_CDCTxService^(0+128),w
  2485  026F  0022               	movlb	2	; select bank2
  2486  0270  00BB               	movwf	_pCDCDst^(0+256)
  2487                           
  2488                           ;usb_function_cdc.c: 1014: i = byte_to_send;
  2489  0271  0021               	movlb	1	; select bank1
  2490  0272  0867               	movf	CDCTxService@byte_to_send^(0+128),w
  2491  0273  00E1               	movwf	??_CDCTxService^(0+128)
  2492  0274  0861               	movf	??_CDCTxService^(0+128),w
  2493  0275  00E6               	movwf	CDCTxService@i^(0+128)
  2494                           
  2495                           ;usb_function_cdc.c: 1015: if(cdc_mem_type == 0x00)
  2496  0276  083B               	movf	_cdc_mem_type^(0+128),w
  2497  0277  1903               	btfsc	3,2
  2498  0278  2A96               	goto	l4066
  2499  0279  2AB6               	goto	l4076
  2500  027A                     l4058:	
  2501                           ;usb_function_cdc.c: 1016: {
  2502                           ;usb_function_cdc.c: 1017: while(i)
  2503                           
  2504                           
  2505                           ;usb_function_cdc.c: 1018: {
  2506                           ;usb_function_cdc.c: 1019: *pCDCDst.bRam = *pCDCSrc.bRom;
  2507  027A  0022               	movlb	2	; select bank2
  2508  027B  083D               	movf	_pCDCSrc^(0+256),w
  2509  027C  0084               	movwf	4
  2510  027D  083E               	movf	(_pCDCSrc+1)^(0+256),w
  2511  027E  0085               	movwf	5
  2512  027F  0800               	movf	0,w	;code access
  2513  0280  0021               	movlb	1	; select bank1
  2514  0281  00E1               	movwf	??_CDCTxService^(0+128)
  2515  0282  0022               	movlb	2	; select bank2
  2516  0283  083B               	movf	_pCDCDst^(0+256),w
  2517  0284  0086               	movwf	6
  2518  0285  3002               	movlw	2	; select bank4/5
  2519  0286  0087               	movwf	7
  2520  0287  0021               	movlb	1	; select bank1
  2521  0288  0861               	movf	??_CDCTxService^(0+128),w
  2522  0289  0081               	movwf	1
  2523                           
  2524                           ;usb_function_cdc.c: 1020: pCDCDst.bRam++;
  2525  028A  3001               	movlw	1
  2526  028B  00E1               	movwf	??_CDCTxService^(0+128)
  2527  028C  0861               	movf	??_CDCTxService^(0+128),w
  2528  028D  0022               	movlb	2	; select bank2
  2529  028E  07BB               	addwf	_pCDCDst^(0+256),f
  2530                           
  2531                           ;usb_function_cdc.c: 1021: pCDCSrc.bRom++;
  2532  028F  3001               	movlw	1
  2533  0290  07BD               	addwf	_pCDCSrc^(0+256),f
  2534  0291  3000               	movlw	0
  2535  0292  3DBE               	addwfc	(_pCDCSrc+1)^(0+256),f
  2536                           
  2537                           ;usb_function_cdc.c: 1022: i--;
  2538  0293  3001               	movlw	1
  2539  0294  0021               	movlb	1	; select bank1
  2540  0295  02E6               	subwf	CDCTxService@i^(0+128),f
  2541  0296                     l4066:	
  2542  0296  0866               	movf	CDCTxService@i^(0+128),w
  2543  0297  1903               	btfsc	3,2
  2544  0298  2AB9               	goto	l4078
  2545  0299  2A7A               	goto	l4058
  2546  029A                     l4068:	
  2547                           ;usb_function_cdc.c: 1025: else
  2548                           ;usb_function_cdc.c: 1026: {
  2549                           ;usb_function_cdc.c: 1027: while(i)
  2550                           
  2551                           ;usb_function_cdc.c: 1023: }
  2552                           ;usb_function_cdc.c: 1024: }
  2553                           
  2554                           
  2555                           ;usb_function_cdc.c: 1028: {
  2556                           ;usb_function_cdc.c: 1029: *pCDCDst.bRam = *pCDCSrc.bRam;
  2557  029A  0022               	movlb	2	; select bank2
  2558  029B  083D               	movf	_pCDCSrc^(0+256),w
  2559  029C  0084               	movwf	4
  2560  029D  083E               	movf	(_pCDCSrc+1)^(0+256),w
  2561  029E  0085               	movwf	5
  2562  029F  0800               	movf	0,w	;code access
  2563  02A0  0021               	movlb	1	; select bank1
  2564  02A1  00E1               	movwf	??_CDCTxService^(0+128)
  2565  02A2  0022               	movlb	2	; select bank2
  2566  02A3  083B               	movf	_pCDCDst^(0+256),w
  2567  02A4  0086               	movwf	6
  2568  02A5  3002               	movlw	2	; select bank4/5
  2569  02A6  0087               	movwf	7
  2570  02A7  0021               	movlb	1	; select bank1
  2571  02A8  0861               	movf	??_CDCTxService^(0+128),w
  2572  02A9  0081               	movwf	1
  2573                           
  2574                           ;usb_function_cdc.c: 1030: pCDCDst.bRam++;
  2575  02AA  3001               	movlw	1
  2576  02AB  00E1               	movwf	??_CDCTxService^(0+128)
  2577  02AC  0861               	movf	??_CDCTxService^(0+128),w
  2578  02AD  0022               	movlb	2	; select bank2
  2579  02AE  07BB               	addwf	_pCDCDst^(0+256),f
  2580                           
  2581                           ;usb_function_cdc.c: 1031: pCDCSrc.bRam++;
  2582  02AF  3001               	movlw	1
  2583  02B0  07BD               	addwf	_pCDCSrc^(0+256),f
  2584  02B1  3000               	movlw	0
  2585  02B2  3DBE               	addwfc	(_pCDCSrc+1)^(0+256),f
  2586                           
  2587                           ;usb_function_cdc.c: 1032: i--;
  2588  02B3  3001               	movlw	1
  2589  02B4  0021               	movlb	1	; select bank1
  2590  02B5  02E6               	subwf	CDCTxService@i^(0+128),f
  2591  02B6                     l4076:	
  2592  02B6  0866               	movf	CDCTxService@i^(0+128),w
  2593  02B7  1D03               	btfss	3,2
  2594  02B8  2A9A               	goto	l4068
  2595  02B9                     l4078:	
  2596                           
  2597                           ;usb_function_cdc.c: 1033: }
  2598                           ;usb_function_cdc.c: 1034: }
  2599                           ;usb_function_cdc.c: 1040: if(cdc_tx_len == 0)
  2600  02B9  083C               	movf	_cdc_tx_len^(0+128),w
  2601  02BA  1D03               	btfss	3,2
  2602  02BB  2AC6               	goto	l4086
  2603                           
  2604                           ;usb_function_cdc.c: 1041: {
  2605                           ;usb_function_cdc.c: 1042: if(byte_to_send == 64)
  2606  02BC  3040               	movlw	64
  2607  02BD  0667               	xorwf	CDCTxService@byte_to_send^(0+128),w
  2608  02BE  1D03               	btfss	3,2
  2609  02BF  2AC2               	goto	l4084
  2610                           
  2611                           ;usb_function_cdc.c: 1043: cdc_trf_state = 2;
  2612  02C0  3002               	movlw	2
  2613  02C1  2AC3               	goto	L4
  2614  02C2                     l4084:	
  2615                           
  2616                           ;usb_function_cdc.c: 1044: else
  2617                           ;usb_function_cdc.c: 1045: cdc_trf_state = 3;
  2618  02C2  3003               	movlw	3
  2619  02C3                     L4:	
  2620  02C3  00E1               	movwf	??_CDCTxService^(0+128)
  2621  02C4  0861               	movf	??_CDCTxService^(0+128),w
  2622  02C5  00BD               	movwf	_cdc_trf_state^(0+128)
  2623  02C6                     l4086:	
  2624                           
  2625                           ;usb_function_cdc.c: 1046: }
  2626                           ;usb_function_cdc.c: 1047: CDCDataInHandle = USBTransferOnePacket(2,1,(BYTE*)&cdc_data_t
      +                          x,byte_to_send);
  2627  02C6  01DA               	clrf	USBTransferOnePacket@dir^(0+128)
  2628  02C7  0ADA               	incf	USBTransferOnePacket@dir^(0+128),f
  2629  02C8  3020               	movlw	32
  2630  02C9  00E1               	movwf	??_CDCTxService^(0+128)
  2631  02CA  0861               	movf	??_CDCTxService^(0+128),w
  2632  02CB  00DB               	movwf	USBTransferOnePacket@data^(0+128)
  2633  02CC  0867               	movf	CDCTxService@byte_to_send^(0+128),w
  2634  02CD  00E2               	movwf	(??_CDCTxService+1)^(0+128)
  2635  02CE  0862               	movf	(??_CDCTxService+1)^(0+128),w
  2636  02CF  00DC               	movwf	USBTransferOnePacket@len^(0+128)
  2637  02D0  3002               	movlw	2
  2638  02D1  318D  25C1         	fcall	_USBTransferOnePacket
  2639  02D3  0021               	movlb	1	; select bank1
  2640  02D4  00E3               	movwf	(??_CDCTxService+2)^(0+128)
  2641  02D5  0863               	movf	(??_CDCTxService+2)^(0+128),w
  2642  02D6  00B9               	movwf	_CDCDataInHandle^(0+128)
  2643  02D7                     l4088:	
  2644                           
  2645                           ;usb_function_cdc.c: 1049: }
  2646                           ;usb_function_cdc.c: 1051: {PIE2bits.USBIE = 1;};
  2647  02D7  1512               	bsf	18,2	;volatile
  2648  02D8  0008               	return
  2649  02D9                     __end_of_CDCTxService:	
  2650                           
  2651                           	psect	text6
  2652  0DC1                     __ptext6:	
  2653 ;; *************** function _USBTransferOnePacket *****************
  2654 ;; Defined at:
  2655 ;;		line 1172 in file "../Microchip/USB/usb_device.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  ep              1    wreg     unsigned char 
  2658 ;;  dir             1    8[BANK1 ] unsigned char 
  2659 ;;  data            1    9[BANK1 ] PTR unsigned char 
  2660 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  2661 ;;  len             1   10[BANK1 ] unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  ep              1   13[BANK1 ] unsigned char 
  2664 ;;  handle          1   14[BANK1 ] PTR volatile struct __BD
  2665 ;;		 -> NULL(0), BDT(48), 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      PTR void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2675 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;Total ram usage:        7 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:   11
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_getsUSBUSART
  2686 ;;		_CDCTxService
  2687 ;;		_USBCDCEventHandler
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _USBTransferOnePacket
  2693  0DC1                     _USBTransferOnePacket:	
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  2697                           ;USBTransferOnePacket@ep stored from wreg
  2698  0DC1  0021               	movlb	1	; select bank1
  2699  0DC2  00DF               	movwf	USBTransferOnePacket@ep^(0+128)
  2700                           
  2701                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
  2702                           ;usb_device.c: 1177: if(dir != 0)
  2703  0DC3  085A               	movf	USBTransferOnePacket@dir^(0+128),w
  2704  0DC4  1903               	btfsc	3,2
  2705  0DC5  2DC9               	goto	l3934
  2706                           
  2707                           ;usb_device.c: 1178: {
  2708                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
  2709  0DC6  085F               	movf	USBTransferOnePacket@ep^(0+128),w
  2710  0DC7  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2711  0DC8  2DCB               	goto	L5
  2712  0DC9                     l3934:	
  2713                           ;usb_device.c: 1181: }
  2714                           
  2715                           
  2716                           ;usb_device.c: 1182: else
  2717                           ;usb_device.c: 1183: {
  2718                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
  2719  0DC9  085F               	movf	USBTransferOnePacket@ep^(0+128),w
  2720  0DCA  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2721  0DCB                     L5:	
  2722  0DCB  0086               	movwf	6
  2723  0DCC  0187               	clrf	7
  2724  0DCD  0801               	movf	1,w
  2725  0DCE  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2726  0DCF  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2727  0DD0  00E0               	movwf	USBTransferOnePacket@handle^(0+128)
  2728                           
  2729                           ;usb_device.c: 1186: }
  2730                           ;usb_device.c: 1190: if(handle == 0)
  2731  0DD1  0860               	movf	USBTransferOnePacket@handle^(0+128),w
  2732  0DD2  1D03               	btfss	3,2
  2733  0DD3  2DD6               	goto	l3942
  2734                           
  2735                           ;usb_device.c: 1191: {
  2736                           ;usb_device.c: 1192: return 0;
  2737  0DD4  3000               	movlw	0
  2738  0DD5  0008               	return
  2739  0DD6                     l3942:	
  2740                           
  2741                           ;usb_device.c: 1193: }
  2742                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
  2743  0DD6  085B               	movf	USBTransferOnePacket@data^(0+128),w
  2744  0DD7  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2745  0DD8  3002               	movlw	2
  2746  0DD9  00DE               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2747  0DDA  0860               	movf	USBTransferOnePacket@handle^(0+128),w
  2748  0DDB  3E02               	addlw	2
  2749  0DDC  0086               	movwf	6
  2750  0DDD  0187               	clrf	7
  2751  0DDE  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2752  0DDF  3FC0               	movwi [0]fsr1
  2753  0DE0  085E               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  2754  0DE1  3FC1               	movwi [1]fsr1
  2755                           
  2756                           ;usb_device.c: 1207: handle->CNT = len;
  2757  0DE2  085C               	movf	USBTransferOnePacket@len^(0+128),w
  2758  0DE3  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2759  0DE4  0A60               	incf	USBTransferOnePacket@handle^(0+128),w
  2760  0DE5  0086               	movwf	6
  2761  0DE6  0187               	clrf	7
  2762  0DE7  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2763  0DE8  0081               	movwf	1
  2764                           
  2765                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
  2766  0DE9  3040               	movlw	64
  2767  0DEA  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2768  0DEB  0860               	movf	USBTransferOnePacket@handle^(0+128),w
  2769  0DEC  0086               	movwf	6
  2770  0DED  0187               	clrf	7
  2771  0DEE  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2772  0DEF  0581               	andwf	1,f
  2773                           
  2774                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
  2775  0DF0  3088               	movlw	136
  2776  0DF1  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2777  0DF2  0860               	movf	USBTransferOnePacket@handle^(0+128),w
  2778  0DF3  0086               	movwf	6
  2779  0DF4  0187               	clrf	7
  2780  0DF5  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2781  0DF6  0481               	iorwf	1,f
  2782                           
  2783                           ;usb_device.c: 1212: if(dir != 0)
  2784  0DF7  085A               	movf	USBTransferOnePacket@dir^(0+128),w
  2785  0DF8  1903               	btfsc	3,2
  2786  0DF9  2DFF               	goto	l3954
  2787                           
  2788                           ;usb_device.c: 1213: {
  2789                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
  2790  0DFA  3004               	movlw	4
  2791  0DFB  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2792  0DFC  085F               	movf	USBTransferOnePacket@ep^(0+128),w
  2793  0DFD  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2794  0DFE  2E03               	goto	L6
  2795  0DFF                     l3954:	
  2796                           ;usb_device.c: 1216: }
  2797                           
  2798                           
  2799                           ;usb_device.c: 1217: else
  2800                           ;usb_device.c: 1218: {
  2801                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
  2802  0DFF  3004               	movlw	4
  2803  0E00  00DD               	movwf	??_USBTransferOnePacket^(0+128)
  2804  0E01  085F               	movf	USBTransferOnePacket@ep^(0+128),w
  2805  0E02  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2806  0E03                     L6:	
  2807  0E03  0086               	movwf	6
  2808  0E04  0187               	clrf	7
  2809  0E05  085D               	movf	??_USBTransferOnePacket^(0+128),w
  2810  0E06  0681               	xorwf	1,f
  2811                           
  2812                           ;usb_device.c: 1221: }
  2813                           ;usb_device.c: 1222: return (void*)handle;
  2814  0E07  0860               	movf	USBTransferOnePacket@handle^(0+128),w
  2815  0E08  0008               	return
  2816  0E09                     __end_of_USBTransferOnePacket:	
  2817                           
  2818                           	psect	text7
  2819  0B5C                     __ptext7:	
  2820 ;; *************** function _BlinkUSBStatus *****************
  2821 ;; Defined at:
  2822 ;;		line 378 in file "../main.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:   11
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_ProcessIO
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _BlinkUSBStatus
  2852  0B5C                     _BlinkUSBStatus:	
  2853                           
  2854                           ;main.c: 380: if(UCONbits.SUSPND == 1)
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _BlinkUSBStatus: [wreg+status,2+status,0]
  2858  0B5C  003D               	movlb	29	; select bank29
  2859  0B5D  080E               	movf	14,w	;volatile
  2860                           
  2861                           ;main.c: 401: {
  2862                           
  2863                           ;main.c: 398: {
  2864                           ;main.c: 399: }
  2865                           
  2866                           ;main.c: 395: {
  2867                           ;main.c: 396: }
  2868                           
  2869                           ;main.c: 392: {
  2870                           ;main.c: 393: }
  2871                           
  2872                           ;main.c: 389: {
  2873                           ;main.c: 390: }
  2874                           
  2875                           ;main.c: 386: {
  2876                           ;main.c: 387: }
  2877                           
  2878                           ;main.c: 381: {
  2879                           ;main.c: 382: }
  2880  0B5E  0008               	return
  2881  0B5F                     __end_of_BlinkUSBStatus:	
  2882                           
  2883                           	psect	text8
  2884  0B74                     __ptext8:	
  2885 ;; *************** function _InitializeSystem *****************
  2886 ;; Defined at:
  2887 ;;		line 163 in file "../main.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:   12
  2908 ;; This function calls:
  2909 ;;		_USBDeviceInit
  2910 ;;		_UserInit
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _InitializeSystem
  2918  0B74                     _InitializeSystem:	
  2919                           
  2920                           ;main.c: 167: ANSELA = 0x00;
  2921                           
  2922                           ;incstack = 0
  2923                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2924  0B74  0023               	movlb	3	; select bank3
  2925  0B75  018C               	clrf	12	;volatile
  2926                           
  2927                           ;main.c: 168: ANSELC = 0x00;
  2928  0B76  018E               	clrf	14	;volatile
  2929                           
  2930                           ;main.c: 170: OSCTUNE = 0;
  2931  0B77  0021               	movlb	1	; select bank1
  2932  0B78  0198               	clrf	24	;volatile
  2933                           
  2934                           ;main.c: 171: OSCCON = 0xFC;
  2935  0B79  30FC               	movlw	252
  2936  0B7A  0099               	movwf	25	;volatile
  2937                           
  2938                           ;main.c: 172: ACTCON = 0x90;
  2939  0B7B  3090               	movlw	144
  2940  0B7C  0027               	movlb	7	; select bank7
  2941  0B7D  009B               	movwf	27	;volatile
  2942                           
  2943                           ;main.c: 213: UserInit();
  2944  0B7E  318B  2369  318B   	fcall	_UserInit
  2945                           
  2946                           ;main.c: 215: USBDeviceInit();
  2947  0B81  3182  22D9         	fcall	_USBDeviceInit
  2948  0B83  0008               	return
  2949  0B84                     __end_of_InitializeSystem:	
  2950                           
  2951                           	psect	text9
  2952  0B69                     __ptext9:	
  2953 ;; *************** function _UserInit *****************
  2954 ;; Defined at:
  2955 ;;		line 236 in file "../main.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:   11
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_InitializeSystem
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _UserInit
  2985  0B69                     _UserInit:	
  2986                           
  2987                           ;main.c: 239: TRISCbits.TRISC3 = 0b0;
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _UserInit: [wreg]
  2991  0B69  0021               	movlb	1	; select bank1
  2992  0B6A  118E               	bcf	14,3	;volatile
  2993                           
  2994                           ;main.c: 240: TRISCbits.TRISC2 = 0b1;
  2995  0B6B  150E               	bsf	14,2	;volatile
  2996                           
  2997                           ;main.c: 242: OPTION_REG = 0xC3;
  2998  0B6C  30C3               	movlw	195
  2999  0B6D  0095               	movwf	21	;volatile
  3000                           
  3001                           ;main.c: 243: TMR0 = 0xFF;
  3002  0B6E  30FF               	movlw	255
  3003  0B6F  0020               	movlb	0	; select bank0
  3004  0B70  0095               	movwf	21	;volatile
  3005                           
  3006                           ;main.c: 244: INTCONbits.TMR0IF = 0;
  3007  0B71  110B               	bcf	11,2	;volatile
  3008                           
  3009                           ;main.c: 245: INTCONbits.TMR0IE = 1;
  3010  0B72  168B               	bsf	11,5	;volatile
  3011  0B73  0008               	return
  3012  0B74                     __end_of_UserInit:	
  3013                           
  3014                           	psect	text10
  3015  02D9                     __ptext10:	
  3016 ;; *************** function _USBDeviceInit *****************
  3017 ;; Defined at:
  3018 ;;		line 466 in file "../Microchip/USB/usb_device.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  p               2    9[BANK1 ] PTR unsigned char 
  3023 ;;		 -> UEP1(1), 
  3024 ;;  i               1   11[BANK1 ] unsigned char 
  3025 ;;  i               1   12[BANK1 ] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;Total ram usage:        5 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:   11
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_InitializeSystem
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _USBDeviceInit
  3051  02D9                     _USBDeviceInit:	
  3052                           
  3053                           ;usb_device.c: 468: BYTE i;
  3054                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3058  02D9  0021               	movlb	1	; select bank1
  3059  02DA  1112               	bcf	18,2	;volatile
  3060                           
  3061                           ;usb_device.c: 473: UEIR = 0;;
  3062  02DB  003D               	movlb	29	; select bank29
  3063  02DC  0193               	clrf	19	;volatile
  3064                           
  3065                           ;usb_device.c: 476: UIR = 0;;
  3066  02DD  0190               	clrf	16	;volatile
  3067                           
  3068                           ;usb_device.c: 479: UEP0 = 0;
  3069  02DE  0198               	clrf	24	;volatile
  3070                           
  3071                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  3072  02DF  300E               	movlw	14
  3073  02E0  0021               	movlb	1	; select bank1
  3074  02E1  00DC               	movwf	(USBDeviceInit@p+1)^(0+128)
  3075  02E2  3099               	movlw	153
  3076  02E3  00DB               	movwf	USBDeviceInit@p^(0+128)
  3077  02E4  01DD               	clrf	USBDeviceInit@i_746^(0+128)
  3078  02E5  3002               	movlw	2
  3079  02E6  025D               	subwf	USBDeviceInit@i_746^(0+128),w
  3080  02E7  1803               	btfsc	3,0
  3081  02E8  2AFA               	goto	l3218
  3082  02E9                     l3210:	
  3083  02E9  085B               	movf	USBDeviceInit@p^(0+128),w
  3084  02EA  0086               	movwf	6
  3085  02EB  085C               	movf	(USBDeviceInit@p+1)^(0+128),w
  3086  02EC  0087               	movwf	7
  3087  02ED  0181               	clrf	1
  3088  02EE  3001               	movlw	1
  3089  02EF  07DB               	addwf	USBDeviceInit@p^(0+128),f
  3090  02F0  3000               	movlw	0
  3091  02F1  3DDC               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  3092  02F2  3001               	movlw	1
  3093  02F3  00DA               	movwf	??_USBDeviceInit^(0+128)
  3094  02F4  085A               	movf	??_USBDeviceInit^(0+128),w
  3095  02F5  07DD               	addwf	USBDeviceInit@i_746^(0+128),f
  3096  02F6  3002               	movlw	2
  3097  02F7  025D               	subwf	USBDeviceInit@i_746^(0+128),w
  3098  02F8  1C03               	skipc
  3099  02F9  2AE9               	goto	l3210
  3100  02FA                     l3218:	
  3101                           
  3102                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3103  02FA  3016               	movlw	22
  3104  02FB  003D               	movlb	29	; select bank29
  3105  02FC  0091               	movwf	17	;volatile
  3106  02FD  309F               	movlw	159
  3107  02FE  0097               	movwf	23	;volatile
  3108  02FF  307B               	movlw	123
  3109  0300  0092               	movwf	18	;volatile
  3110                           
  3111                           ;usb_device.c: 486: ;
  3112                           ;usb_device.c: 489: ;
  3113                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3114  0301  0021               	movlb	1	; select bank1
  3115  0302  01DE               	clrf	USBDeviceInit@i^(0+128)
  3116  0303  300C               	movlw	12
  3117  0304  025E               	subwf	USBDeviceInit@i^(0+128),w
  3118  0305  1803               	btfsc	3,0
  3119  0306  2B20               	goto	l128
  3120  0307                     l3226:	
  3121                           
  3122                           ;usb_device.c: 493: {
  3123                           ;usb_device.c: 494: BDT[i].Val = 0x00;
  3124  0307  085E               	movf	USBDeviceInit@i^(0+128),w
  3125  0308  00DA               	movwf	??_USBDeviceInit^(0+128)
  3126  0309  3001               	movlw	1
  3127  030A                     u2645:	
  3128  030A  35DA               	lslf	??_USBDeviceInit^(0+128),f
  3129  030B  3EFF               	addlw	-1
  3130  030C  1D03               	skipz
  3131  030D  2B0A               	goto	u2645
  3132  030E  355A               	lslf	??_USBDeviceInit^(0+128),w
  3133  030F  3E20               	addlw	32
  3134  0310  0086               	movwf	6
  3135  0311  0187               	clrf	7
  3136  0312  3000               	movlw	0
  3137  0313  3FC0               	movwi [0]fsr1
  3138  0314  3000               	movlw	0
  3139  0315  3FC1               	movwi [1]fsr1
  3140  0316  3FC2               	movwi [2]fsr1
  3141  0317  3FC3               	movwi [3]fsr1
  3142  0318  3001               	movlw	1
  3143  0319  00DA               	movwf	??_USBDeviceInit^(0+128)
  3144  031A  085A               	movf	??_USBDeviceInit^(0+128),w
  3145  031B  07DE               	addwf	USBDeviceInit@i^(0+128),f
  3146  031C  300C               	movlw	12
  3147  031D  025E               	subwf	USBDeviceInit@i^(0+128),w
  3148  031E  1C03               	skipc
  3149  031F  2B07               	goto	l3226
  3150  0320                     l128:	
  3151                           
  3152                           ;usb_device.c: 495: }
  3153                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
  3154  0320  003D               	movlb	29	; select bank29
  3155  0321  170E               	bsf	14,6	;volatile
  3156                           
  3157                           ;usb_device.c: 501: UADDR = 0x00;
  3158  0322  0196               	clrf	22	;volatile
  3159                           
  3160                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
  3161  0323  120E               	bcf	14,4	;volatile
  3162                           
  3163                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
  3164  0324  130E               	bcf	14,6	;volatile
  3165  0325                     l3246:	
  3166                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
  3167                           
  3168  0325  003D               	movlb	29	; select bank29
  3169  0326  1D90               	btfss	16,3	;volatile
  3170  0327  2B34               	goto	l3248
  3171                           
  3172                           ;usb_device.c: 511: {
  3173                           ;usb_device.c: 512: (UIR &= 0xF7);
  3174  0328  30F7               	movlw	247
  3175  0329  0021               	movlb	1	; select bank1
  3176  032A  00DA               	movwf	??_USBDeviceInit^(0+128)
  3177  032B  085A               	movf	??_USBDeviceInit^(0+128),w
  3178  032C  003D               	movlb	29	; select bank29
  3179  032D  0590               	andwf	16,f	;volatile
  3180                           
  3181                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
  3182  032E  0021               	movlb	1	; select bank1
  3183  032F  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  3184                           
  3185                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
  3186  0330  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  3187                           
  3188                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
  3189  0331  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  3190  0332  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3191  0333  2B25               	goto	l3246
  3192  0334                     l3248:	
  3193                           
  3194                           ;usb_device.c: 517: }
  3195                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
  3196  0334  3001               	movlw	1
  3197  0335  0021               	movlb	1	; select bank1
  3198  0336  00DA               	movwf	??_USBDeviceInit^(0+128)
  3199  0337  085A               	movf	??_USBDeviceInit^(0+128),w
  3200  0338  00C2               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3201                           
  3202                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
  3203  0339  3001               	movlw	1
  3204  033A  00DA               	movwf	??_USBDeviceInit^(0+128)
  3205  033B  085A               	movf	??_USBDeviceInit^(0+128),w
  3206  033C  00C1               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3207                           
  3208                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
  3209  033D  01C0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3210                           
  3211                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
  3212  033E  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3213                           
  3214                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
  3215  033F  01C7               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  3216                           
  3217                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(2+1u); i++)
  3218  0340  01DE               	clrf	USBDeviceInit@i^(0+128)
  3219  0341  3003               	movlw	3
  3220  0342  025E               	subwf	USBDeviceInit@i^(0+128),w
  3221  0343  1803               	btfsc	3,0
  3222  0344  2B61               	goto	l3266
  3223  0345                     l3260:	
  3224                           
  3225                           ;usb_device.c: 531: {
  3226                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
  3227  0345  085E               	movf	USBDeviceInit@i^(0+128),w
  3228  0346  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3229  0347  0086               	movwf	6
  3230  0348  0187               	clrf	7
  3231  0349  0181               	clrf	1
  3232                           
  3233                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
  3234  034A  085E               	movf	USBDeviceInit@i^(0+128),w
  3235  034B  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  3236  034C  0086               	movwf	6
  3237  034D  0187               	clrf	7
  3238  034E  0181               	clrf	1
  3239                           
  3240                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
  3241  034F  085E               	movf	USBDeviceInit@i^(0+128),w
  3242  0350  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  3243  0351  0086               	movwf	6
  3244  0352  0187               	clrf	7
  3245  0353  0181               	clrf	1
  3246                           
  3247                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
  3248  0354  085E               	movf	USBDeviceInit@i^(0+128),w
  3249  0355  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  3250  0356  0086               	movwf	6
  3251  0357  0187               	clrf	7
  3252  0358  0181               	clrf	1
  3253  0359  3001               	movlw	1
  3254  035A  00DA               	movwf	??_USBDeviceInit^(0+128)
  3255  035B  085A               	movf	??_USBDeviceInit^(0+128),w
  3256  035C  07DE               	addwf	USBDeviceInit@i^(0+128),f
  3257  035D  3003               	movlw	3
  3258  035E  025E               	subwf	USBDeviceInit@i^(0+128),w
  3259  035F  1C03               	skipc
  3260  0360  2B45               	goto	l3260
  3261  0361                     l3266:	
  3262                           
  3263                           ;usb_device.c: 536: }
  3264                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3265  0361  3028               	movlw	40
  3266  0362  00DA               	movwf	??_USBDeviceInit^(0+128)
  3267  0363  085A               	movf	??_USBDeviceInit^(0+128),w
  3268  0364  00B2               	movwf	_pBDTEntryIn^(0+128)
  3269                           
  3270                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
  3271  0365  3016               	movlw	22
  3272  0366  003D               	movlb	29	; select bank29
  3273  0367  0098               	movwf	24	;volatile
  3274                           
  3275                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  3276  0368  3000               	movlw	0
  3277  0369  0020               	movlb	0	; select bank0
  3278  036A  00A3               	movwf	35	;volatile
  3279  036B  3050               	movlw	80
  3280  036C  00A2               	movwf	34	;volatile
  3281                           
  3282                           ;usb_device.c: 544: BDT[0].CNT = 8;
  3283  036D  3008               	movlw	8
  3284  036E  00A1               	movwf	33	;volatile
  3285                           
  3286                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
  3287  036F  3084               	movlw	132
  3288  0370  0021               	movlb	1	; select bank1
  3289  0371  00DA               	movwf	??_USBDeviceInit^(0+128)
  3290  0372  085A               	movf	??_USBDeviceInit^(0+128),w
  3291  0373  0020               	movlb	0	; select bank0
  3292  0374  00A0               	movwf	32	;volatile
  3293                           
  3294                           ;usb_device.c: 548: USBActiveConfiguration = 0;
  3295  0375  0021               	movlb	1	; select bank1
  3296  0376  01D1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  3297                           
  3298                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
  3299  0377  01CE               	clrf	_USBDeviceState^(0+128)	;volatile
  3300  0378  0008               	return
  3301  0379                     __end_of_USBDeviceInit:	
  3302                           
  3303                           	psect	intentry
  3304  0004                     __pintentry:	
  3305 ;; *************** function _ISRCode *****************
  3306 ;; Defined at:
  3307 ;;		line 58 in file "../main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:   10
  3328 ;; This function calls:
  3329 ;;		_USBDeviceTasks
  3330 ;; This function is called by:
  3331 ;;		Interrupt level 1
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335  0004                     _ISRCode:	
  3336                           
  3337                           ;incstack = 0
  3338  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3339                           
  3340                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3341  0005  3180               	pagesel	$
  3342  0006  0020               	movlb	0	; select bank0
  3343  0007  087F               	movf	127,w
  3344  0008  0021               	movlb	1	; select bank1
  3345  0009  00D9               	movwf	??_ISRCode^(0+128)
  3346                           
  3347                           ;main.c: 65: if (PIR2bits.USBIF != 0)
  3348  000A  0020               	movlb	0	; select bank0
  3349  000B  1D12               	btfss	18,2	;volatile
  3350  000C  2810               	goto	i1l3832
  3351                           
  3352                           ;main.c: 66: USBDeviceTasks();
  3353  000D  3181  2154  3180   	fcall	_USBDeviceTasks
  3354  0010                     i1l3832:	
  3355                           
  3356                           ;main.c: 69: if (INTCONbits.TMR0IF)
  3357  0010  1D0B               	btfss	11,2	;volatile
  3358  0011  2818               	goto	i1l581
  3359                           
  3360                           ;main.c: 70: {
  3361                           ;main.c: 71: tmrCounter++;
  3362  0012  3001               	movlw	1
  3363  0013  0022               	movlb	2	; select bank2
  3364  0014  07B9               	addwf	_tmrCounter^(0+256),f
  3365  0015  3000               	movlw	0
  3366  0016  3DBA               	addwfc	(_tmrCounter+1)^(0+256),f
  3367                           
  3368                           ;main.c: 82: INTCONbits.TMR0IF = 0;
  3369  0017  110B               	bcf	11,2	;volatile
  3370  0018                     i1l581:	
  3371  0018  0021               	movlb	1	; select bank1
  3372  0019  0859               	movf	??_ISRCode^(0+128),w
  3373  001A  0020               	movlb	0	; select bank0
  3374  001B  00FF               	movwf	127
  3375  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3376  001D  0009               	retfie
  3377  001E                     __end_of_ISRCode:	
  3378                           
  3379                           	psect	text12
  3380  0154                     __ptext12:	
  3381 ;; *************** function _USBDeviceTasks *****************
  3382 ;; Defined at:
  3383 ;;		line 660 in file "../Microchip/USB/usb_device.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  i               1    6[BANK1 ] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;Total ram usage:        3 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    9
  3404 ;; This function calls:
  3405 ;;		_USBCtrlEPService
  3406 ;;		_USBStallHandler
  3407 ;;		_USBSuspend
  3408 ;;		_USBWakeFromSuspend
  3409 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3410 ;;		i1_USBDeviceInit
  3411 ;; This function is called by:
  3412 ;;		_ISRCode
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _USBDeviceTasks
  3418  0154                     _USBDeviceTasks:	
  3419                           
  3420                           ;usb_device.c: 670: BYTE i;
  3421                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3425  0154  0021               	movlb	1	; select bank1
  3426  0155  034E               	decf	_USBDeviceState^(0+128),w	;volatile
  3427  0156  1D03               	btfss	3,2
  3428  0157  2963               	goto	i1l3592
  3429                           
  3430                           ;usb_device.c: 782: {
  3431                           ;usb_device.c: 792: if(!UCONbits.SE0)
  3432  0158  003D               	movlb	29	; select bank29
  3433  0159  1A8E               	btfsc	14,5	;volatile
  3434  015A  2963               	goto	i1l3592
  3435                           
  3436                           ;usb_device.c: 793: {
  3437                           ;usb_device.c: 794: UIR = 0;;
  3438  015B  0190               	clrf	16	;volatile
  3439                           
  3440                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  3441  015C  1412               	bsf	18,0	;volatile
  3442                           
  3443                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  3444  015D  1612               	bsf	18,4	;volatile
  3445                           
  3446                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  3447  015E  3002               	movlw	2
  3448  015F  0021               	movlb	1	; select bank1
  3449  0160  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3450  0161  0856               	movf	??_USBDeviceTasks^(0+128),w
  3451  0162  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  3452  0163                     i1l3592:	
  3453                           
  3454                           ;usb_device.c: 801: }
  3455                           ;usb_device.c: 802: }
  3456                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3457  0163  003D               	movlb	29	; select bank29
  3458  0164  1910               	btfsc	16,2	;volatile
  3459  0165  1D12               	btfss	18,2	;volatile
  3460  0166  2970               	goto	i1l3600
  3461                           
  3462                           ;usb_device.c: 819: {
  3463                           ;usb_device.c: 820: (UIR &= 0xFB);
  3464  0167  30FB               	movlw	251
  3465  0168  0021               	movlb	1	; select bank1
  3466  0169  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3467  016A  0856               	movf	??_USBDeviceTasks^(0+128),w
  3468  016B  003D               	movlb	29	; select bank29
  3469  016C  0590               	andwf	16,f	;volatile
  3470                           
  3471                           ;usb_device.c: 824: USBWakeFromSuspend();
  3472  016D  318B  2384  3181   	fcall	_USBWakeFromSuspend
  3473  0170                     i1l3600:	
  3474                           
  3475                           ;usb_device.c: 826: }
  3476                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  3477  0170  003D               	movlb	29	; select bank29
  3478  0171  1C8E               	btfss	14,1	;volatile
  3479  0172  2976               	goto	i1l140
  3480                           
  3481                           ;usb_device.c: 832: {
  3482                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  3483  0173  0020               	movlb	0	; select bank0
  3484  0174  1112               	bcf	18,2	;volatile
  3485                           
  3486                           ;usb_device.c: 834: return;
  3487  0175  0008               	return
  3488  0176                     i1l140:	
  3489                           
  3490                           ;usb_device.c: 835: }
  3491                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3492  0176  1810               	btfsc	16,0	;volatile
  3493  0177  1C12               	btfss	18,0	;volatile
  3494  0178  2987               	goto	i1l3614
  3495                           
  3496                           ;usb_device.c: 848: {
  3497                           ;usb_device.c: 849: USBDeviceInit();
  3498  0179  3183  2379  3181   	fcall	i1_USBDeviceInit
  3499                           
  3500                           ;usb_device.c: 853: {PIE2bits.USBIE = 1;};
  3501  017C  0021               	movlb	1	; select bank1
  3502  017D  1512               	bsf	18,2	;volatile
  3503                           
  3504                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  3505  017E  3004               	movlw	4
  3506  017F  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3507  0180  0856               	movf	??_USBDeviceTasks^(0+128),w
  3508  0181  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  3509                           
  3510                           ;usb_device.c: 865: (UIR &= 0xFE);
  3511  0182  30FE               	movlw	254
  3512  0183  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3513  0184  0856               	movf	??_USBDeviceTasks^(0+128),w
  3514  0185  003D               	movlb	29	; select bank29
  3515  0186  0590               	andwf	16,f	;volatile
  3516  0187                     i1l3614:	
  3517                           
  3518                           ;usb_device.c: 866: }
  3519                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3520  0187  1A10               	btfsc	16,4	;volatile
  3521  0188  1E12               	btfss	18,4	;volatile
  3522  0189  2993               	goto	i1l3622
  3523                           
  3524                           ;usb_device.c: 872: {
  3525                           ;usb_device.c: 877: USBSuspend();
  3526  018A  318B  2399  3181   	fcall	_USBSuspend
  3527                           
  3528                           ;usb_device.c: 880: (UIR &= 0xEF);
  3529  018D  30EF               	movlw	239
  3530  018E  0021               	movlb	1	; select bank1
  3531  018F  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3532  0190  0856               	movf	??_USBDeviceTasks^(0+128),w
  3533  0191  003D               	movlb	29	; select bank29
  3534  0192  0590               	andwf	16,f	;volatile
  3535  0193                     i1l3622:	
  3536                           
  3537                           ;usb_device.c: 881: }
  3538                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  3539  0193  1F10               	btfss	16,6	;volatile
  3540  0194  29AA               	goto	i1l3630
  3541                           
  3542                           ;usb_device.c: 884: {
  3543                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  3544  0195  1F12               	btfss	18,6	;volatile
  3545  0196  29A4               	goto	i1l3628
  3546                           
  3547                           ;usb_device.c: 886: {
  3548                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3549  0197  3073               	movlw	115
  3550  0198  0020               	movlb	0	; select bank0
  3551  0199  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3552  019A  3000               	movlw	0
  3553  019B  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3554  019C  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3555  019D  3001               	movlw	1
  3556  019E  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3557  019F  3000               	movlw	0
  3558  01A0  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3559  01A1  318C  24F3  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3560  01A4                     i1l3628:	
  3561                           
  3562                           ;usb_device.c: 888: }
  3563                           ;usb_device.c: 889: (UIR &= 0xBF);
  3564  01A4  30BF               	movlw	191
  3565  01A5  0021               	movlb	1	; select bank1
  3566  01A6  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3567  01A7  0856               	movf	??_USBDeviceTasks^(0+128),w
  3568  01A8  003D               	movlb	29	; select bank29
  3569  01A9  0590               	andwf	16,f	;volatile
  3570  01AA                     i1l3630:	
  3571                           
  3572                           ;usb_device.c: 928: }
  3573                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3574  01AA  1A90               	btfsc	16,5	;volatile
  3575  01AB  1E92               	btfss	18,5	;volatile
  3576  01AC  29B0               	goto	i1l3636
  3577                           
  3578                           ;usb_device.c: 931: {
  3579                           ;usb_device.c: 932: USBStallHandler();
  3580  01AD  3187  27E0  3181   	fcall	_USBStallHandler
  3581  01B0                     i1l3636:	
  3582                           
  3583                           ;usb_device.c: 933: }
  3584                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3585  01B0  003D               	movlb	29	; select bank29
  3586  01B1  1890               	btfsc	16,1	;volatile
  3587  01B2  1C92               	btfss	18,1	;volatile
  3588  01B3  29C3               	goto	i1l3644
  3589                           
  3590                           ;usb_device.c: 936: {
  3591                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3592  01B4  30FF               	movlw	255
  3593  01B5  0020               	movlb	0	; select bank0
  3594  01B6  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3595  01B7  307F               	movlw	127
  3596  01B8  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3597  01B9  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3598  01BA  3001               	movlw	1
  3599  01BB  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3600  01BC  3000               	movlw	0
  3601  01BD  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3602  01BE  318C  24F3  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3603                           
  3604                           ;usb_device.c: 938: UEIR = 0;;
  3605  01C1  003D               	movlb	29	; select bank29
  3606  01C2  0193               	clrf	19	;volatile
  3607  01C3                     i1l3644:	
  3608                           
  3609                           ;usb_device.c: 946: }
  3610                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  3611  01C3  3004               	movlw	4
  3612  01C4  0021               	movlb	1	; select bank1
  3613  01C5  024E               	subwf	_USBDeviceState^(0+128),w	;volatile
  3614  01C6  1803               	skipnc
  3615  01C7  29CB               	goto	i1l148
  3616                           
  3617                           ;usb_device.c: 954: {
  3618                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  3619  01C8  0020               	movlb	0	; select bank0
  3620  01C9  1112               	bcf	18,2	;volatile
  3621                           
  3622                           ;usb_device.c: 956: return;
  3623  01CA  0008               	return
  3624  01CB                     i1l148:	
  3625                           
  3626                           ;usb_device.c: 957: }
  3627                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  3628  01CB  003D               	movlb	29	; select bank29
  3629  01CC  1D92               	btfss	18,3	;volatile
  3630  01CD  2A1E               	goto	i1l149
  3631                           
  3632                           ;usb_device.c: 963: {
  3633                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  3634  01CE  0021               	movlb	1	; select bank1
  3635  01CF  01D8               	clrf	USBDeviceTasks@i^(0+128)
  3636  01D0  3004               	movlw	4
  3637  01D1  0258               	subwf	USBDeviceTasks@i^(0+128),w
  3638  01D2  1803               	btfsc	3,0
  3639  01D3  2A1E               	goto	i1l149
  3640  01D4                     i1l150:	
  3641                           
  3642                           ;usb_device.c: 965: {
  3643                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  3644  01D4  003D               	movlb	29	; select bank29
  3645  01D5  1D90               	btfss	16,3	;volatile
  3646  01D6  2A1E               	goto	i1l149
  3647                           
  3648                           ;usb_device.c: 967: {
  3649                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  3650  01D7  080F               	movf	15,w	;volatile
  3651  01D8  0021               	movlb	1	; select bank1
  3652  01D9  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3653  01DA  0856               	movf	??_USBDeviceTasks^(0+128),w
  3654  01DB  00CF               	movwf	_USTATcopy^(0+128)	;volatile
  3655                           
  3656                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  3657  01DC  0C4F               	rrf	_USTATcopy^(0+128),w	;volatile
  3658  01DD  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3659  01DE  0CD6               	rrf	??_USBDeviceTasks^(0+128),f
  3660  01DF  0C56               	rrf	??_USBDeviceTasks^(0+128),w
  3661  01E0  390F               	andlw	15
  3662  01E1  00D7               	movwf	(??_USBDeviceTasks+1)^(0+128)
  3663  01E2  0857               	movf	(??_USBDeviceTasks+1)^(0+128),w
  3664  01E3  00C6               	movwf	_endpoint_number^(0+128)	;volatile
  3665                           
  3666                           ;usb_device.c: 972: (UIR &= 0xF7);
  3667  01E4  30F7               	movlw	247
  3668  01E5  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3669  01E6  0856               	movf	??_USBDeviceTasks^(0+128),w
  3670  01E7  003D               	movlb	29	; select bank29
  3671  01E8  0590               	andwf	16,f	;volatile
  3672                           
  3673                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  3674  01E9  0021               	movlb	1	; select bank1
  3675  01EA  194F               	btfsc	_USTATcopy^(0+128),2	;volatile
  3676  01EB  29EF               	goto	i1l3664
  3677                           
  3678                           ;usb_device.c: 978: {
  3679                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3680  01EC  0846               	movf	_endpoint_number^(0+128),w	;volatile
  3681  01ED  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  3682  01EE  29F1               	goto	L7
  3683  01EF                     i1l3664:	
  3684                           ;usb_device.c: 980: }
  3685                           
  3686                           
  3687                           ;usb_device.c: 981: else
  3688                           ;usb_device.c: 982: {
  3689                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3690  01EF  0846               	movf	_endpoint_number^(0+128),w	;volatile
  3691  01F0  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  3692  01F1                     L7:	
  3693  01F1  0086               	movwf	6
  3694  01F2  0187               	clrf	7
  3695  01F3  0801               	movf	1,w
  3696  01F4  3901               	andlw	1
  3697  01F5  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3698  01F6  3001               	movlw	1
  3699  01F7  06D6               	xorwf	??_USBDeviceTasks^(0+128),f
  3700  01F8  0801               	movf	1,w
  3701  01F9  0656               	xorwf	??_USBDeviceTasks^(0+128),w
  3702  01FA  39FE               	andlw	-2
  3703  01FB  0656               	xorwf	??_USBDeviceTasks^(0+128),w
  3704  01FC  0081               	movwf	1
  3705                           
  3706                           ;usb_device.c: 984: }
  3707                           ;usb_device.c: 989: if(endpoint_number == 0)
  3708  01FD  0846               	movf	_endpoint_number^(0+128),w	;volatile
  3709  01FE  1D03               	btfss	3,2
  3710  01FF  2A04               	goto	i1l3670
  3711                           
  3712                           ;usb_device.c: 990: {
  3713                           ;usb_device.c: 991: USBCtrlEPService();
  3714  0200  3187  2717  3181   	fcall	_USBCtrlEPService
  3715                           
  3716                           ;usb_device.c: 992: }
  3717  0203  2A15               	goto	i1l3672
  3718  0204                     i1l3670:	
  3719                           
  3720                           ;usb_device.c: 993: else
  3721                           ;usb_device.c: 994: {
  3722                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  3723  0204  3072               	movlw	114
  3724  0205  0020               	movlb	0	; select bank0
  3725  0206  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3726  0207  3000               	movlw	0
  3727  0208  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3728  0209  30CF               	movlw	(low (_USTATcopy| 0))& (0+255)
  3729  020A  0021               	movlb	1	; select bank1
  3730  020B  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3731  020C  0856               	movf	??_USBDeviceTasks^(0+128),w
  3732  020D  0020               	movlb	0	; select bank0
  3733  020E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3734  020F  3000               	movlw	0
  3735  0210  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3736  0211  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3737  0212  318C  24F3  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3738  0215                     i1l3672:	
  3739                           ;usb_device.c: 998: else
  3740                           ;usb_device.c: 999: break;
  3741                           
  3742                           ;usb_device.c: 996: }
  3743                           ;usb_device.c: 997: }
  3744                           
  3745  0215  3001               	movlw	1
  3746  0216  0021               	movlb	1	; select bank1
  3747  0217  00D6               	movwf	??_USBDeviceTasks^(0+128)
  3748  0218  0856               	movf	??_USBDeviceTasks^(0+128),w
  3749  0219  07D8               	addwf	USBDeviceTasks@i^(0+128),f
  3750  021A  3004               	movlw	4
  3751  021B  0258               	subwf	USBDeviceTasks@i^(0+128),w
  3752  021C  1C03               	skipc
  3753  021D  29D4               	goto	i1l150
  3754  021E                     i1l149:	
  3755                           
  3756                           ;usb_device.c: 1000: }
  3757                           ;usb_device.c: 1001: }
  3758                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  3759  021E  0020               	movlb	0	; select bank0
  3760  021F  1112               	bcf	18,2	;volatile
  3761  0220  0008               	return
  3762  0221                     __end_of_USBDeviceTasks:	
  3763                           
  3764                           	psect	text13
  3765  0379                     __ptext13:	
  3766 ;; *************** function i1_USBDeviceInit *****************
  3767 ;; Defined at:
  3768 ;;		line 466 in file "../Microchip/USB/usb_device.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  3773 ;;		 -> UEP1(1), 
  3774 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  3775 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;Total ram usage:        5 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_USBDeviceTasks
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function i1_USBDeviceInit
  3800  0379                     i1_USBDeviceInit:	
  3801                           
  3802                           ;usb_device.c: 468: BYTE i;
  3803                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3807  0379  0021               	movlb	1	; select bank1
  3808  037A  1112               	bcf	18,2	;volatile
  3809                           
  3810                           ;usb_device.c: 473: UEIR = 0;;
  3811  037B  003D               	movlb	29	; select bank29
  3812  037C  0193               	clrf	19	;volatile
  3813                           
  3814                           ;usb_device.c: 476: UIR = 0;;
  3815  037D  0190               	clrf	16	;volatile
  3816                           
  3817                           ;usb_device.c: 479: UEP0 = 0;
  3818  037E  0198               	clrf	24	;volatile
  3819                           
  3820                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  3821  037F  300E               	movlw	14
  3822  0380  00F2               	movwf	i1USBDeviceInit@p+1
  3823  0381  3099               	movlw	153
  3824  0382  00F1               	movwf	i1USBDeviceInit@p
  3825  0383  01F3               	clrf	i1USBDeviceInit@i_746
  3826  0384  3002               	movlw	2
  3827  0385  0273               	subwf	i1USBDeviceInit@i_746,w
  3828  0386  1803               	btfsc	3,0
  3829  0387  2B99               	goto	i1l3522
  3830  0388                     i1l3514:	
  3831  0388  0871               	movf	i1USBDeviceInit@p,w
  3832  0389  0086               	movwf	6
  3833  038A  0872               	movf	i1USBDeviceInit@p+1,w
  3834  038B  0087               	movwf	7
  3835  038C  0181               	clrf	1
  3836  038D  3001               	movlw	1
  3837  038E  07F1               	addwf	i1USBDeviceInit@p,f
  3838  038F  3000               	movlw	0
  3839  0390  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  3840  0391  3001               	movlw	1
  3841  0392  00F0               	movwf	??i1_USBDeviceInit
  3842  0393  0870               	movf	??i1_USBDeviceInit,w
  3843  0394  07F3               	addwf	i1USBDeviceInit@i_746,f
  3844  0395  3002               	movlw	2
  3845  0396  0273               	subwf	i1USBDeviceInit@i_746,w
  3846  0397  1C03               	skipc
  3847  0398  2B88               	goto	i1l3514
  3848  0399                     i1l3522:	
  3849                           
  3850                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3851  0399  3016               	movlw	22
  3852  039A  003D               	movlb	29	; select bank29
  3853  039B  0091               	movwf	17	;volatile
  3854  039C  309F               	movlw	159
  3855  039D  0097               	movwf	23	;volatile
  3856  039E  307B               	movlw	123
  3857  039F  0092               	movwf	18	;volatile
  3858                           
  3859                           ;usb_device.c: 486: ;
  3860                           ;usb_device.c: 489: ;
  3861                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3862  03A0  01F4               	clrf	i1USBDeviceInit@i
  3863  03A1  300C               	movlw	12
  3864  03A2  0274               	subwf	i1USBDeviceInit@i,w
  3865  03A3  1803               	btfsc	3,0
  3866  03A4  2BBE               	goto	i1l128
  3867  03A5                     i1l3530:	
  3868                           
  3869                           ;usb_device.c: 493: {
  3870                           ;usb_device.c: 494: BDT[i].Val = 0x00;
  3871  03A5  0874               	movf	i1USBDeviceInit@i,w
  3872  03A6  00F0               	movwf	??i1_USBDeviceInit
  3873  03A7  3001               	movlw	1
  3874  03A8                     u300_25:	
  3875  03A8  35F0               	lslf	??i1_USBDeviceInit,f
  3876  03A9  3EFF               	addlw	-1
  3877  03AA  1D03               	skipz
  3878  03AB  2BA8               	goto	u300_25
  3879  03AC  3570               	lslf	??i1_USBDeviceInit,w
  3880  03AD  3E20               	addlw	32
  3881  03AE  0086               	movwf	6
  3882  03AF  0187               	clrf	7
  3883  03B0  3000               	movlw	0
  3884  03B1  3FC0               	movwi [0]fsr1
  3885  03B2  3000               	movlw	0
  3886  03B3  3FC1               	movwi [1]fsr1
  3887  03B4  3FC2               	movwi [2]fsr1
  3888  03B5  3FC3               	movwi [3]fsr1
  3889  03B6  3001               	movlw	1
  3890  03B7  00F0               	movwf	??i1_USBDeviceInit
  3891  03B8  0870               	movf	??i1_USBDeviceInit,w
  3892  03B9  07F4               	addwf	i1USBDeviceInit@i,f
  3893  03BA  300C               	movlw	12
  3894  03BB  0274               	subwf	i1USBDeviceInit@i,w
  3895  03BC  1C03               	skipc
  3896  03BD  2BA5               	goto	i1l3530
  3897  03BE                     i1l128:	
  3898                           
  3899                           ;usb_device.c: 495: }
  3900                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
  3901  03BE  003D               	movlb	29	; select bank29
  3902  03BF  170E               	bsf	14,6	;volatile
  3903                           
  3904                           ;usb_device.c: 501: UADDR = 0x00;
  3905  03C0  0196               	clrf	22	;volatile
  3906                           
  3907                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
  3908  03C1  120E               	bcf	14,4	;volatile
  3909                           
  3910                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
  3911  03C2  130E               	bcf	14,6	;volatile
  3912  03C3                     i1l3550:	
  3913                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
  3914                           
  3915  03C3  003D               	movlb	29	; select bank29
  3916  03C4  1D90               	btfss	16,3	;volatile
  3917  03C5  2BD0               	goto	i1l3552
  3918                           
  3919                           ;usb_device.c: 511: {
  3920                           ;usb_device.c: 512: (UIR &= 0xF7);
  3921  03C6  30F7               	movlw	247
  3922  03C7  00F0               	movwf	??i1_USBDeviceInit
  3923  03C8  0870               	movf	??i1_USBDeviceInit,w
  3924  03C9  0590               	andwf	16,f	;volatile
  3925                           
  3926                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
  3927  03CA  0021               	movlb	1	; select bank1
  3928  03CB  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  3929                           
  3930                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
  3931  03CC  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  3932                           
  3933                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
  3934  03CD  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  3935  03CE  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3936  03CF  2BC3               	goto	i1l3550
  3937  03D0                     i1l3552:	
  3938                           
  3939                           ;usb_device.c: 517: }
  3940                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
  3941  03D0  3001               	movlw	1
  3942  03D1  00F0               	movwf	??i1_USBDeviceInit
  3943  03D2  0870               	movf	??i1_USBDeviceInit,w
  3944  03D3  0021               	movlb	1	; select bank1
  3945  03D4  00C2               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3946                           
  3947                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
  3948  03D5  3001               	movlw	1
  3949  03D6  00F0               	movwf	??i1_USBDeviceInit
  3950  03D7  0870               	movf	??i1_USBDeviceInit,w
  3951  03D8  00C1               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3952                           
  3953                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
  3954  03D9  01C0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3955                           
  3956                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
  3957  03DA  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3958                           
  3959                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
  3960  03DB  01C7               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  3961                           
  3962                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(2+1u); i++)
  3963  03DC  01F4               	clrf	i1USBDeviceInit@i
  3964  03DD  3003               	movlw	3
  3965  03DE  0274               	subwf	i1USBDeviceInit@i,w
  3966  03DF  1803               	btfsc	3,0
  3967  03E0  2BFD               	goto	i1l3570
  3968  03E1                     i1l3564:	
  3969                           
  3970                           ;usb_device.c: 531: {
  3971                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
  3972  03E1  0874               	movf	i1USBDeviceInit@i,w
  3973  03E2  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3974  03E3  0086               	movwf	6
  3975  03E4  0187               	clrf	7
  3976  03E5  0181               	clrf	1
  3977                           
  3978                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
  3979  03E6  0874               	movf	i1USBDeviceInit@i,w
  3980  03E7  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  3981  03E8  0086               	movwf	6
  3982  03E9  0187               	clrf	7
  3983  03EA  0181               	clrf	1
  3984                           
  3985                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
  3986  03EB  0874               	movf	i1USBDeviceInit@i,w
  3987  03EC  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  3988  03ED  0086               	movwf	6
  3989  03EE  0187               	clrf	7
  3990  03EF  0181               	clrf	1
  3991                           
  3992                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
  3993  03F0  0874               	movf	i1USBDeviceInit@i,w
  3994  03F1  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  3995  03F2  0086               	movwf	6
  3996  03F3  0187               	clrf	7
  3997  03F4  0181               	clrf	1
  3998  03F5  3001               	movlw	1
  3999  03F6  00F0               	movwf	??i1_USBDeviceInit
  4000  03F7  0870               	movf	??i1_USBDeviceInit,w
  4001  03F8  07F4               	addwf	i1USBDeviceInit@i,f
  4002  03F9  3003               	movlw	3
  4003  03FA  0274               	subwf	i1USBDeviceInit@i,w
  4004  03FB  1C03               	skipc
  4005  03FC  2BE1               	goto	i1l3564
  4006  03FD                     i1l3570:	
  4007                           
  4008                           ;usb_device.c: 536: }
  4009                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4010  03FD  3028               	movlw	40
  4011  03FE  00F0               	movwf	??i1_USBDeviceInit
  4012  03FF  0870               	movf	??i1_USBDeviceInit,w
  4013  0400  0021               	movlb	1	; select bank1
  4014  0401  00B2               	movwf	_pBDTEntryIn^(0+128)
  4015                           
  4016                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
  4017  0402  3016               	movlw	22
  4018  0403  003D               	movlb	29	; select bank29
  4019  0404  0098               	movwf	24	;volatile
  4020                           
  4021                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4022  0405  3000               	movlw	0
  4023  0406  0020               	movlb	0	; select bank0
  4024  0407  00A3               	movwf	35	;volatile
  4025  0408  3050               	movlw	80
  4026  0409  00A2               	movwf	34	;volatile
  4027                           
  4028                           ;usb_device.c: 544: BDT[0].CNT = 8;
  4029  040A  3008               	movlw	8
  4030  040B  00A1               	movwf	33	;volatile
  4031                           
  4032                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
  4033  040C  3084               	movlw	132
  4034  040D  00F0               	movwf	??i1_USBDeviceInit
  4035  040E  0870               	movf	??i1_USBDeviceInit,w
  4036  040F  00A0               	movwf	32	;volatile
  4037                           
  4038                           ;usb_device.c: 548: USBActiveConfiguration = 0;
  4039  0410  0021               	movlb	1	; select bank1
  4040  0411  01D1               	clrf	_USBActiveConfiguration^(0+128)	;volatile
  4041                           
  4042                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
  4043  0412  01CE               	clrf	_USBDeviceState^(0+128)	;volatile
  4044  0413  0008               	return
  4045  0414                     __end_ofi1_USBDeviceInit:	
  4046                           
  4047                           	psect	text14
  4048  0B84                     __ptext14:	
  4049 ;; *************** function _USBWakeFromSuspend *****************
  4050 ;; Defined at:
  4051 ;;		line 2455 in file "../Microchip/USB/usb_device.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;Total ram usage:        1 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    5
  4072 ;; This function calls:
  4073 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4074 ;; This function is called by:
  4075 ;;		_USBDeviceTasks
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _USBWakeFromSuspend
  4081  0B84                     _USBWakeFromSuspend:	
  4082                           
  4083                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4087  0B84  0021               	movlb	1	; select bank1
  4088  0B85  01C7               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  4089                           
  4090                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4091  0B86  3074               	movlw	116
  4092  0B87  0020               	movlb	0	; select bank0
  4093  0B88  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4094  0B89  3000               	movlw	0
  4095  0B8A  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4096  0B8B  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4097  0B8C  3000               	movlw	0
  4098  0B8D  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4099  0B8E  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4100  0B8F  318C  24F3         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4101                           
  4102                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
  4103  0B91  003D               	movlb	29	; select bank29
  4104  0B92  108E               	bcf	14,1	;volatile
  4105                           
  4106                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
  4107  0B93  1112               	bcf	18,2	;volatile
  4108                           
  4109                           ;usb_device.c: 2495: {
  4110                           ;usb_device.c: 2496: (UIR &= 0xFB);
  4111  0B94  30FB               	movlw	251
  4112  0B95  00FD               	movwf	??_USBWakeFromSuspend
  4113  0B96  087D               	movf	??_USBWakeFromSuspend,w
  4114  0B97  0590               	andwf	16,f	;volatile
  4115  0B98  0008               	return
  4116  0B99                     __end_of_USBWakeFromSuspend:	
  4117                           
  4118                           	psect	text15
  4119  0B99                     __ptext15:	
  4120 ;; *************** function _USBSuspend *****************
  4121 ;; Defined at:
  4122 ;;		line 2398 in file "../Microchip/USB/usb_device.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;Total ram usage:        1 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    5
  4143 ;; This function calls:
  4144 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4145 ;; This function is called by:
  4146 ;;		_USBDeviceTasks
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _USBSuspend
  4152  0B99                     _USBSuspend:	
  4153                           
  4154                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4158  0B99  003D               	movlb	29	; select bank29
  4159  0B9A  1512               	bsf	18,2	;volatile
  4160                           
  4161                           ;usb_device.c: 2424: (UIR &= 0xEF);
  4162  0B9B  30EF               	movlw	239
  4163  0B9C  00FD               	movwf	??_USBSuspend
  4164  0B9D  087D               	movf	??_USBSuspend,w
  4165  0B9E  0590               	andwf	16,f	;volatile
  4166                           
  4167                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
  4168  0B9F  148E               	bsf	14,1	;volatile
  4169                           
  4170                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
  4171  0BA0  3001               	movlw	1
  4172  0BA1  00FD               	movwf	??_USBSuspend
  4173  0BA2  087D               	movf	??_USBSuspend,w
  4174  0BA3  0021               	movlb	1	; select bank1
  4175  0BA4  00C7               	movwf	_USBBusIsSuspended^(0+128)	;volatile
  4176                           
  4177                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4178  0BA5  3075               	movlw	117
  4179  0BA6  0020               	movlb	0	; select bank0
  4180  0BA7  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4181  0BA8  3000               	movlw	0
  4182  0BA9  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4183  0BAA  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4184  0BAB  3000               	movlw	0
  4185  0BAC  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4186  0BAD  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4187  0BAE  318C  24F3         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4188  0BB0  0008               	return
  4189  0BB1                     __end_of_USBSuspend:	
  4190                           
  4191                           	psect	text16
  4192  07E0                     __ptext16:	
  4193 ;; *************** function _USBStallHandler *****************
  4194 ;; Defined at:
  4195 ;;		line 2355 in file "../Microchip/USB/usb_device.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_USBDeviceTasks
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function _USBStallHandler
  4224  07E0                     _USBStallHandler:	
  4225                           
  4226                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4230  07E0  003D               	movlb	29	; select bank29
  4231  07E1  1C18               	btfss	24,0	;volatile
  4232  07E2  2FFB               	goto	i1l3306
  4233                           
  4234                           ;usb_device.c: 2369: {
  4235                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4236  07E3  0021               	movlb	1	; select bank1
  4237  07E4  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4238  07E5  0086               	movwf	6
  4239  07E6  0187               	clrf	7
  4240  07E7  3080               	movlw	128
  4241  07E8  0601               	xorwf	1,w
  4242  07E9  1D03               	btfss	3,2
  4243  07EA  2FF9               	goto	i1l3304
  4244  07EB  0832               	movf	_pBDTEntryIn^(0+128),w
  4245  07EC  0086               	movwf	6
  4246  07ED  0187               	clrf	7
  4247  07EE  3084               	movlw	132
  4248  07EF  0601               	xorwf	1,w
  4249  07F0  1D03               	btfss	3,2
  4250  07F1  2FF9               	goto	i1l3304
  4251                           
  4252                           ;usb_device.c: 2372: {
  4253                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  4254  07F2  308C               	movlw	140
  4255  07F3  00F0               	movwf	??_USBStallHandler
  4256  07F4  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4257  07F5  0086               	movwf	6
  4258  07F6  0187               	clrf	7
  4259  07F7  0870               	movf	??_USBStallHandler,w
  4260  07F8  0081               	movwf	1
  4261  07F9                     i1l3304:	
  4262                           
  4263                           ;usb_device.c: 2375: }
  4264                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
  4265  07F9  003D               	movlb	29	; select bank29
  4266  07FA  1018               	bcf	24,0	;volatile
  4267  07FB                     i1l3306:	
  4268                           
  4269                           ;usb_device.c: 2377: }
  4270                           ;usb_device.c: 2379: (UIR &= 0xDF);
  4271  07FB  30DF               	movlw	223
  4272  07FC  00F0               	movwf	??_USBStallHandler
  4273  07FD  0870               	movf	??_USBStallHandler,w
  4274  07FE  0590               	andwf	16,f	;volatile
  4275  07FF  0008               	return
  4276  0800                     __end_of_USBStallHandler:	
  4277                           
  4278                           	psect	text17
  4279  0717                     __ptext17:	
  4280 ;; *************** function _USBCtrlEPService *****************
  4281 ;; Defined at:
  4282 ;;		line 2522 in file "../Microchip/USB/usb_device.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  setup_cnt       1    3[BANK1 ] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;Total ram usage:        4 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    8
  4303 ;; This function calls:
  4304 ;;		_USBCtrlTrfInHandler
  4305 ;;		_USBCtrlTrfOutHandler
  4306 ;;		_USBCtrlTrfSetupHandler
  4307 ;; This function is called by:
  4308 ;;		_USBDeviceTasks
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function _USBCtrlEPService
  4314  0717                     _USBCtrlEPService:	
  4315                           
  4316                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  4317                           
  4318                           ;incstack = 0
  4319                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4320  0717  0021               	movlb	1	; select bank1
  4321  0718  084F               	movf	_USTATcopy^(0+128),w	;volatile
  4322  0719  39FD               	andlw	253
  4323  071A  1D03               	btfss	3,2
  4324  071B  2F76               	goto	i1l3336
  4325                           
  4326                           ;usb_device.c: 2533: {
  4327                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4328  071C  364F               	lsrf	_USTATcopy^(0+128),w	;volatile
  4329  071D  393F               	andlw	63
  4330  071E  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4331  071F  3001               	movlw	1
  4332  0720                     u273_25:	
  4333  0720  35D2               	lslf	??_USBCtrlEPService^(0+128),f
  4334  0721  3EFF               	addlw	-1
  4335  0722  1D03               	skipz
  4336  0723  2F20               	goto	u273_25
  4337  0724  3552               	lslf	??_USBCtrlEPService^(0+128),w
  4338  0725  3E20               	addlw	32
  4339  0726  00D3               	movwf	(??_USBCtrlEPService+1)^(0+128)
  4340  0727  0853               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4341  0728  00CD               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  4342                           
  4343                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4344  0729  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4345  072A  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4346  072B  0852               	movf	??_USBCtrlEPService^(0+128),w
  4347  072C  00CC               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4348                           
  4349                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4350  072D  3004               	movlw	4
  4351  072E  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4352  072F  0852               	movf	??_USBCtrlEPService^(0+128),w
  4353  0730  06CC               	xorwf	_pBDTEntryEP0OutNext^(0+128),f
  4354                           
  4355                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4356  0731  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4357  0732  0086               	movwf	6
  4358  0733  0187               	clrf	7
  4359  0734  0C01               	rrf	1,w
  4360  0735  0C89               	rrf	9,f
  4361  0736  390F               	andlw	15
  4362  0737  3A0D               	xorlw	13
  4363  0738  1D03               	skipz
  4364  0739  2F73               	goto	i1l3334
  4365                           
  4366                           ;usb_device.c: 2550: {
  4367                           ;usb_device.c: 2551: unsigned char setup_cnt;
  4368                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  4369  073A  01D5               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  4370  073B  3008               	movlw	8
  4371  073C  0255               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  4372  073D  1803               	btfsc	3,0
  4373  073E  2F64               	goto	i1l3330
  4374  073F                     i1l3324:	
  4375                           
  4376                           ;usb_device.c: 2558: {
  4377                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  4378  073F  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4379  0740  3E02               	addlw	2
  4380  0741  0086               	movwf	6
  4381  0742  0187               	clrf	7
  4382  0743  3F40               	moviw [0]fsr1
  4383  0744  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4384  0745  3F41               	moviw [1]fsr1
  4385  0746  00D3               	movwf	(??_USBCtrlEPService^(0+128)+1)
  4386  0747  0852               	movf	??_USBCtrlEPService^(0+128),w
  4387  0748  0086               	movwf	6
  4388  0749  0853               	movf	(??_USBCtrlEPService+1)^(0+128),w
  4389  074A  0087               	movwf	7
  4390  074B  0801               	movf	1,w
  4391  074C  00D4               	movwf	(??_USBCtrlEPService+2)^(0+128)
  4392  074D  0855               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  4393  074E  3E50               	addlw	80
  4394  074F  0086               	movwf	6
  4395  0750  0187               	clrf	7
  4396  0751  0854               	movf	(??_USBCtrlEPService+2)^(0+128),w
  4397  0752  0081               	movwf	1
  4398                           
  4399                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  4400  0753  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4401  0754  3E02               	addlw	2
  4402  0755  0086               	movwf	6
  4403  0756  0187               	clrf	7
  4404  0757  3001               	movlw	1
  4405  0758  0781               	addwf	1,f
  4406  0759  3141               	addfsr 1,1
  4407  075A  1803               	skipnc
  4408  075B  0A81               	incf	1,f
  4409  075C  3001               	movlw	1
  4410  075D  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4411  075E  0852               	movf	??_USBCtrlEPService^(0+128),w
  4412  075F  07D5               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  4413  0760  3008               	movlw	8
  4414  0761  0255               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  4415  0762  1C03               	skipc
  4416  0763  2F3F               	goto	i1l3324
  4417  0764                     i1l3330:	
  4418                           
  4419                           ;usb_device.c: 2561: }
  4420                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4421  0764  3050               	movlw	80
  4422  0765  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4423  0766  3000               	movlw	0
  4424  0767  00D3               	movwf	(??_USBCtrlEPService^(0+128)+1)
  4425  0768  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  4426  0769  3E02               	addlw	2
  4427  076A  0086               	movwf	6
  4428  076B  0187               	clrf	7
  4429  076C  0852               	movf	??_USBCtrlEPService^(0+128),w
  4430  076D  3FC0               	movwi [0]fsr1
  4431  076E  0853               	movf	(??_USBCtrlEPService^(0+128)+1),w
  4432  076F  3FC1               	movwi [1]fsr1
  4433                           
  4434                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  4435  0770  318D  2579         	fcall	_USBCtrlTrfSetupHandler
  4436                           
  4437                           ;usb_device.c: 2566: }
  4438  0772  0008               	return
  4439  0773                     i1l3334:	
  4440                           
  4441                           ;usb_device.c: 2567: else
  4442                           ;usb_device.c: 2568: {
  4443                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  4444  0773  318C  2420         	fcall	_USBCtrlTrfOutHandler
  4445                           
  4446                           ;usb_device.c: 2571: }
  4447                           ;usb_device.c: 2572: }
  4448  0775  0008               	return
  4449  0776                     i1l3336:	
  4450                           
  4451                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  4452  0776  30FD               	movlw	253
  4453  0777  0021               	movlb	1	; select bank1
  4454  0778  054F               	andwf	_USTATcopy^(0+128),w	;volatile
  4455  0779  00D2               	movwf	??_USBCtrlEPService^(0+128)
  4456  077A  3004               	movlw	4
  4457  077B  0652               	xorwf	??_USBCtrlEPService^(0+128),w
  4458  077C  1D03               	btfss	3,2
  4459  077D  0008               	return
  4460                           
  4461                           ;usb_device.c: 2574: {
  4462                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  4463  077E  318E  26EF         	fcall	_USBCtrlTrfInHandler
  4464  0780  0008               	return
  4465  0781                     __end_of_USBCtrlEPService:	
  4466                           
  4467                           	psect	text18
  4468  0D79                     __ptext18:	
  4469 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4470 ;; Defined at:
  4471 ;;		line 2622 in file "../Microchip/USB/usb_device.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    7
  4492 ;; This function calls:
  4493 ;;		_USBCheckStdRequest
  4494 ;;		_USBCtrlEPServiceComplete
  4495 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4496 ;; This function is called by:
  4497 ;;		_USBCtrlEPService
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _USBCtrlTrfSetupHandler
  4503  0D79                     _USBCtrlTrfSetupHandler:	
  4504                           
  4505                           ;usb_device.c: 2627: shortPacketStatus = 0;
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4509  0D79  0021               	movlb	1	; select bank1
  4510  0D7A  01CB               	clrf	_shortPacketStatus^(0+128)	;volatile
  4511                           
  4512                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
  4513  0D7B  01C3               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  4514                           
  4515                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
  4516  0D7C  01C0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4517                           
  4518                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
  4519  0D7D  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4520                           
  4521                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
  4522  0D7E  01C5               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  4523                           
  4524                           ;usb_device.c: 2632: controlTransferState = 0;
  4525  0D7F  01CA               	clrf	_controlTransferState^(0+128)	;volatile
  4526                           
  4527                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4528  0D80  307F               	movlw	127
  4529  0D81  0020               	movlb	0	; select bank0
  4530  0D82  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4531  0D83  0021               	movlb	1	; select bank1
  4532  0D84  0832               	movf	_pBDTEntryIn^(0+128),w
  4533  0D85  0086               	movwf	6
  4534  0D86  0187               	clrf	7
  4535  0D87  0020               	movlb	0	; select bank0
  4536  0D88  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4537  0D89  0581               	andwf	1,f
  4538                           
  4539                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4540  0D8A  3004               	movlw	4
  4541  0D8B  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4542  0D8C  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4543  0D8D  0021               	movlb	1	; select bank1
  4544  0D8E  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  4545                           
  4546                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4547  0D8F  307F               	movlw	127
  4548  0D90  0020               	movlb	0	; select bank0
  4549  0D91  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4550  0D92  0021               	movlb	1	; select bank1
  4551  0D93  0832               	movf	_pBDTEntryIn^(0+128),w
  4552  0D94  0086               	movwf	6
  4553  0D95  0187               	clrf	7
  4554  0D96  0020               	movlb	0	; select bank0
  4555  0D97  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4556  0D98  0581               	andwf	1,f
  4557                           
  4558                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4559  0D99  3004               	movlw	4
  4560  0D9A  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4561  0D9B  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4562  0D9C  0021               	movlb	1	; select bank1
  4563  0D9D  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  4564                           
  4565                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4566  0D9E  307F               	movlw	127
  4567  0D9F  0020               	movlb	0	; select bank0
  4568  0DA0  00EF               	movwf	??_USBCtrlTrfSetupHandler
  4569  0DA1  0021               	movlb	1	; select bank1
  4570  0DA2  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4571  0DA3  0086               	movwf	6
  4572  0DA4  0187               	clrf	7
  4573  0DA5  0020               	movlb	0	; select bank0
  4574  0DA6  086F               	movf	??_USBCtrlTrfSetupHandler,w
  4575  0DA7  0581               	andwf	1,f
  4576                           
  4577                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
  4578  0DA8  0021               	movlb	1	; select bank1
  4579  0DA9  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  4580                           
  4581                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
  4582  0DAA  01AA               	clrf	(_inPipes^(0+128)+3)	;volatile
  4583  0DAB  01AB               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4584                           
  4585                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
  4586  0DAC  01A2               	clrf	(_outPipes^(0+128)+2)	;volatile
  4587                           
  4588                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
  4589  0DAD  01A3               	clrf	(_outPipes^(0+128)+3)	;volatile
  4590  0DAE  01A4               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  4591                           
  4592                           ;usb_device.c: 2656: USBCheckStdRequest();
  4593  0DAF  318F  27A2  318D   	fcall	_USBCheckStdRequest
  4594                           
  4595                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4596  0DB2  3003               	movlw	3
  4597  0DB3  0020               	movlb	0	; select bank0
  4598  0DB4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4599  0DB5  3000               	movlw	0
  4600  0DB6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4601  0DB7  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4602  0DB8  3000               	movlw	0
  4603  0DB9  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4604  0DBA  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4605  0DBB  318C  24F3  318D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4606                           
  4607                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
  4608  0DBE  3186  2631         	fcall	_USBCtrlEPServiceComplete
  4609  0DC0  0008               	return
  4610  0DC1                     __end_of_USBCtrlTrfSetupHandler:	
  4611                           
  4612                           	psect	text19
  4613  0631                     __ptext19:	
  4614 ;; *************** function _USBCtrlEPServiceComplete *****************
  4615 ;; Defined at:
  4616 ;;		line 1785 in file "../Microchip/USB/usb_device.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;Total ram usage:        2 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    2
  4637 ;; This function calls:
  4638 ;;		_USBCtrlEPAllowDataStage
  4639 ;;		_USBCtrlEPAllowStatusStage
  4640 ;; This function is called by:
  4641 ;;		_USBCtrlTrfSetupHandler
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _USBCtrlEPServiceComplete
  4647  0631                     _USBCtrlEPServiceComplete:	
  4648                           
  4649                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4653  0631  003D               	movlb	29	; select bank29
  4654  0632  120E               	bcf	14,4	;volatile
  4655                           
  4656                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
  4657  0633  0021               	movlb	1	; select bank1
  4658  0634  1BA9               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  4659  0635  2E67               	goto	i1l212
  4660                           
  4661                           ;usb_device.c: 1798: {
  4662                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
  4663  0636  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  4664  0637  2E45               	goto	i1l2972
  4665                           
  4666                           ;usb_device.c: 1800: {
  4667                           ;usb_device.c: 1801: controlTransferState = 2;
  4668  0638  3002               	movlw	2
  4669  0639  00F7               	movwf	??_USBCtrlEPServiceComplete
  4670  063A  0877               	movf	??_USBCtrlEPServiceComplete,w
  4671  063B  00CA               	movwf	_controlTransferState^(0+128)	;volatile
  4672                           
  4673                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
  4674  063C  083F               	movf	_USBDeferOUTDataStagePackets^(0+128),w	;volatile
  4675  063D  1D03               	btfss	3,2
  4676  063E  2E41               	goto	i1l2968
  4677                           
  4678                           ;usb_device.c: 1813: {
  4679                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
  4680  063F  318E  2653         	fcall	_USBCtrlEPAllowDataStage
  4681  0641                     i1l2968:	
  4682                           
  4683                           ;usb_device.c: 1815: }
  4684                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
  4685  0641  0021               	movlb	1	; select bank1
  4686  0642  01C1               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4687                           
  4688                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
  4689  0643  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4690                           
  4691                           ;usb_device.c: 1821: }
  4692  0644  0008               	return
  4693  0645                     i1l2972:	
  4694                           
  4695                           ;usb_device.c: 1822: else
  4696                           ;usb_device.c: 1823: {
  4697                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
  4698  0645  3008               	movlw	8
  4699  0646  00F7               	movwf	??_USBCtrlEPServiceComplete
  4700  0647  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  4701  0648  0086               	movwf	6
  4702  0649  0187               	clrf	7
  4703  064A  0877               	movf	??_USBCtrlEPServiceComplete,w
  4704  064B  0081               	movwf	1
  4705                           
  4706                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4707  064C  3050               	movlw	80
  4708  064D  00F7               	movwf	??_USBCtrlEPServiceComplete
  4709  064E  3000               	movlw	0
  4710  064F  00F8               	movwf	??_USBCtrlEPServiceComplete+1
  4711  0650  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4712  0651  3E02               	addlw	2
  4713  0652  0086               	movwf	6
  4714  0653  0187               	clrf	7
  4715  0654  0877               	movf	??_USBCtrlEPServiceComplete,w
  4716  0655  3FC0               	movwi [0]fsr1
  4717  0656  0878               	movf	??_USBCtrlEPServiceComplete+1,w
  4718  0657  3FC1               	movwi [1]fsr1
  4719                           
  4720                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  4721  0658  308C               	movlw	140
  4722  0659  00F7               	movwf	??_USBCtrlEPServiceComplete
  4723  065A  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4724  065B  0086               	movwf	6
  4725  065C  0187               	clrf	7
  4726  065D  0877               	movf	??_USBCtrlEPServiceComplete,w
  4727  065E  0081               	movwf	1
  4728                           
  4729                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  4730  065F  3084               	movlw	132
  4731  0660  00F7               	movwf	??_USBCtrlEPServiceComplete
  4732  0661  0832               	movf	_pBDTEntryIn^(0+128),w
  4733  0662  0086               	movwf	6
  4734  0663  0187               	clrf	7
  4735  0664  0877               	movf	??_USBCtrlEPServiceComplete,w
  4736  0665  0081               	movwf	1
  4737                           
  4738                           ;usb_device.c: 1832: }
  4739                           ;usb_device.c: 1833: }
  4740  0666  0008               	return
  4741  0667                     i1l212:	
  4742                           
  4743                           ;usb_device.c: 1834: else
  4744                           ;usb_device.c: 1835: {
  4745                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
  4746  0667  0020               	movlb	0	; select bank0
  4747  0668  1FD0               	btfss	80,7	;volatile
  4748  0669  2E7E               	goto	i1l2994
  4749                           
  4750                           ;usb_device.c: 1837: {
  4751                           ;usb_device.c: 1838: controlTransferState = 1;
  4752  066A  3001               	movlw	1
  4753  066B  00F7               	movwf	??_USBCtrlEPServiceComplete
  4754  066C  0877               	movf	??_USBCtrlEPServiceComplete,w
  4755  066D  0021               	movlb	1	; select bank1
  4756  066E  00CA               	movwf	_controlTransferState^(0+128)	;volatile
  4757                           
  4758                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
  4759  066F  0840               	movf	_USBDeferINDataStagePackets^(0+128),w	;volatile
  4760  0670  1D03               	btfss	3,2
  4761  0671  2E75               	goto	i1l2986
  4762                           
  4763                           ;usb_device.c: 1853: {
  4764                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
  4765  0672  318E  2653  3186   	fcall	_USBCtrlEPAllowDataStage
  4766  0675                     i1l2986:	
  4767                           
  4768                           ;usb_device.c: 1855: }
  4769                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
  4770  0675  0021               	movlb	1	; select bank1
  4771  0676  01C1               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4772                           
  4773                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
  4774  0677  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4775                           
  4776                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
  4777  0678  0843               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4778  0679  1D03               	btfss	3,2
  4779  067A  0008               	return
  4780                           
  4781                           ;usb_device.c: 1880: {
  4782                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
  4783  067B  318F  2746         	fcall	_USBCtrlEPAllowStatusStage
  4784                           
  4785                           ;usb_device.c: 1882: }
  4786                           ;usb_device.c: 1883: }
  4787  067D  0008               	return
  4788  067E                     i1l2994:	
  4789                           
  4790                           ;usb_device.c: 1884: else
  4791                           ;usb_device.c: 1885: {
  4792                           ;usb_device.c: 1896: controlTransferState = 2;
  4793  067E  3002               	movlw	2
  4794  067F  00F7               	movwf	??_USBCtrlEPServiceComplete
  4795  0680  0877               	movf	??_USBCtrlEPServiceComplete,w
  4796  0681  0021               	movlb	1	; select bank1
  4797  0682  00CA               	movwf	_controlTransferState^(0+128)	;volatile
  4798                           
  4799                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
  4800  0683  3008               	movlw	8
  4801  0684  00F7               	movwf	??_USBCtrlEPServiceComplete
  4802  0685  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  4803  0686  0086               	movwf	6
  4804  0687  0187               	clrf	7
  4805  0688  0877               	movf	??_USBCtrlEPServiceComplete,w
  4806  0689  0081               	movwf	1
  4807                           
  4808                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  4809  068A  3050               	movlw	80
  4810  068B  00F7               	movwf	??_USBCtrlEPServiceComplete
  4811  068C  3000               	movlw	0
  4812  068D  00F8               	movwf	??_USBCtrlEPServiceComplete+1
  4813  068E  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4814  068F  3E02               	addlw	2
  4815  0690  0086               	movwf	6
  4816  0691  0187               	clrf	7
  4817  0692  0877               	movf	??_USBCtrlEPServiceComplete,w
  4818  0693  3FC0               	movwi [0]fsr1
  4819  0694  0878               	movf	??_USBCtrlEPServiceComplete+1,w
  4820  0695  3FC1               	movwi [1]fsr1
  4821                           
  4822                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  4823  0696  3084               	movlw	132
  4824  0697  00F7               	movwf	??_USBCtrlEPServiceComplete
  4825  0698  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4826  0699  0086               	movwf	6
  4827  069A  0187               	clrf	7
  4828  069B  0877               	movf	??_USBCtrlEPServiceComplete,w
  4829  069C  0081               	movwf	1
  4830                           
  4831                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
  4832  069D  01C1               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4833                           
  4834                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
  4835  069E  01C2               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4836                           
  4837                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
  4838  069F  0843               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4839  06A0  1D03               	btfss	3,2
  4840  06A1  0008               	return
  4841                           
  4842                           ;usb_device.c: 1907: {
  4843                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
  4844  06A2  318F  2746         	fcall	_USBCtrlEPAllowStatusStage
  4845  06A4  0008               	return
  4846  06A5                     __end_of_USBCtrlEPServiceComplete:	
  4847                           
  4848                           	psect	text20
  4849  0E53                     __ptext20:	
  4850 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4851 ;; Defined at:
  4852 ;;		line 1659 in file "../Microchip/USB/usb_device.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        2 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    1
  4873 ;; This function calls:
  4874 ;;		_USBCtrlTrfTxService
  4875 ;; This function is called by:
  4876 ;;		_USBCtrlEPServiceComplete
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _USBCtrlEPAllowDataStage
  4882  0E53                     _USBCtrlEPAllowDataStage:	
  4883                           
  4884                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4888  0E53  0021               	movlb	1	; select bank1
  4889  0E54  01C0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  4890                           
  4891                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
  4892  0E55  01BF               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  4893                           
  4894                           ;usb_device.c: 1664: if(controlTransferState == 2)
  4895  0E56  3002               	movlw	2
  4896  0E57  064A               	xorwf	_controlTransferState^(0+128),w	;volatile
  4897  0E58  1D03               	btfss	3,2
  4898  0E59  2E75               	goto	i1l2764
  4899                           
  4900                           ;usb_device.c: 1665: {
  4901                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
  4902  0E5A  3008               	movlw	8
  4903  0E5B  00F5               	movwf	??_USBCtrlEPAllowDataStage
  4904  0E5C  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  4905  0E5D  0086               	movwf	6
  4906  0E5E  0187               	clrf	7
  4907  0E5F  0875               	movf	??_USBCtrlEPAllowDataStage,w
  4908  0E60  0081               	movwf	1
  4909                           
  4910                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  4911  0E61  3058               	movlw	88
  4912  0E62  00F5               	movwf	??_USBCtrlEPAllowDataStage
  4913  0E63  3000               	movlw	0
  4914  0E64  00F6               	movwf	??_USBCtrlEPAllowDataStage+1
  4915  0E65  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4916  0E66  3E02               	addlw	2
  4917  0E67  0086               	movwf	6
  4918  0E68  0187               	clrf	7
  4919  0E69  0875               	movf	??_USBCtrlEPAllowDataStage,w
  4920  0E6A  3FC0               	movwi [0]fsr1
  4921  0E6B  0876               	movf	??_USBCtrlEPAllowDataStage+1,w
  4922  0E6C  3FC1               	movwi [1]fsr1
  4923                           
  4924                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  4925  0E6D  30C8               	movlw	200
  4926  0E6E  00F5               	movwf	??_USBCtrlEPAllowDataStage
  4927  0E6F  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4928  0E70  0086               	movwf	6
  4929  0E71  0187               	clrf	7
  4930  0E72  0875               	movf	??_USBCtrlEPAllowDataStage,w
  4931  0E73  0081               	movwf	1
  4932                           
  4933                           ;usb_device.c: 1670: }
  4934  0E74  0008               	return
  4935  0E75                     i1l2764:	
  4936                           
  4937                           ;usb_device.c: 1671: else
  4938                           ;usb_device.c: 1672: {
  4939                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  4940  0E75  082B               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  4941  0E76  0020               	movlb	0	; select bank0
  4942  0E77  0257               	subwf	87,w	;volatile
  4943  0E78  1D03               	skipz
  4944  0E79  2E7E               	goto	u206_25
  4945  0E7A  0021               	movlb	1	; select bank1
  4946  0E7B  082A               	movf	(_inPipes^(0+128)+3),w	;volatile
  4947  0E7C  0020               	movlb	0	; select bank0
  4948  0E7D  0256               	subwf	86,w	;volatile
  4949  0E7E                     u206_25:	
  4950  0E7E  1803               	skipnc
  4951  0E7F  2E87               	goto	i1l2768
  4952                           
  4953                           ;usb_device.c: 1676: {
  4954                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
  4955  0E80  0857               	movf	87,w	;volatile
  4956  0E81  0021               	movlb	1	; select bank1
  4957  0E82  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4958  0E83  0020               	movlb	0	; select bank0
  4959  0E84  0856               	movf	86,w	;volatile
  4960  0E85  0021               	movlb	1	; select bank1
  4961  0E86  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  4962  0E87                     i1l2768:	
  4963                           
  4964                           ;usb_device.c: 1678: }
  4965                           ;usb_device.c: 1679: USBCtrlTrfTxService();
  4966  0E87  3186  26A5         	fcall	_USBCtrlTrfTxService
  4967                           
  4968                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  4969  0E89  3058               	movlw	88
  4970  0E8A  00F5               	movwf	??_USBCtrlEPAllowDataStage
  4971  0E8B  3000               	movlw	0
  4972  0E8C  00F6               	movwf	??_USBCtrlEPAllowDataStage+1
  4973  0E8D  0021               	movlb	1	; select bank1
  4974  0E8E  0832               	movf	_pBDTEntryIn^(0+128),w
  4975  0E8F  3E02               	addlw	2
  4976  0E90  0086               	movwf	6
  4977  0E91  0187               	clrf	7
  4978  0E92  0875               	movf	??_USBCtrlEPAllowDataStage,w
  4979  0E93  3FC0               	movwi [0]fsr1
  4980  0E94  0876               	movf	??_USBCtrlEPAllowDataStage+1,w
  4981  0E95  3FC1               	movwi [1]fsr1
  4982                           
  4983                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  4984  0E96  30C8               	movlw	200
  4985  0E97  00F5               	movwf	??_USBCtrlEPAllowDataStage
  4986  0E98  0832               	movf	_pBDTEntryIn^(0+128),w
  4987  0E99  0086               	movwf	6
  4988  0E9A  0187               	clrf	7
  4989  0E9B  0875               	movf	??_USBCtrlEPAllowDataStage,w
  4990  0E9C  0081               	movwf	1
  4991  0E9D  0008               	return
  4992  0E9E                     __end_of_USBCtrlEPAllowDataStage:	
  4993                           
  4994                           	psect	text21
  4995  0FA2                     __ptext21:	
  4996 ;; *************** function _USBCheckStdRequest *****************
  4997 ;; Defined at:
  4998 ;;		line 2838 in file "../Microchip/USB/usb_device.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;Total ram usage:        1 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    6
  5019 ;; This function calls:
  5020 ;;		_USBStdFeatureReqHandler
  5021 ;;		_USBStdGetDscHandler
  5022 ;;		_USBStdGetStatusHandler
  5023 ;;		_USBStdSetCfgHandler
  5024 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5025 ;; This function is called by:
  5026 ;;		_USBCtrlTrfSetupHandler
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _USBCheckStdRequest
  5032  0FA2                     _USBCheckStdRequest:	
  5033                           
  5034                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5038  0FA2  0020               	movlb	0	; select bank0
  5039  0FA3  0E50               	swapf	80,w	;volatile
  5040  0FA4  0C89               	rrf	9,f
  5041  0FA5  3903               	andlw	3
  5042  0FA6  3A00               	xorlw	0
  5043  0FA7  1D03               	btfss	3,2
  5044  0FA8  0008               	return
  5045  0FA9  2FF4               	goto	i1l3088
  5046  0FAA                     i1l336:	
  5047                           ;usb_device.c: 2843: {
  5048                           ;usb_device.c: 2844: case 5:
  5049                           
  5050                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
  5051                           
  5052                           
  5053                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
  5054  0FAA  0021               	movlb	1	; select bank1
  5055  0FAB  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5056                           
  5057                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
  5058  0FAC  3008               	movlw	8
  5059  0FAD  0020               	movlb	0	; select bank0
  5060  0FAE  00EE               	movwf	??_USBCheckStdRequest
  5061  0FAF  086E               	movf	??_USBCheckStdRequest,w
  5062  0FB0  0021               	movlb	1	; select bank1
  5063  0FB1  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  5064                           
  5065                           ;usb_device.c: 2848: break;
  5066  0FB2  0008               	return
  5067  0FB3                     i1l3058:	
  5068                           ;usb_device.c: 2849: case 6:
  5069                           
  5070                           
  5071                           ;usb_device.c: 2850: USBStdGetDscHandler();
  5072  0FB3  3185  25B8         	fcall	_USBStdGetDscHandler
  5073                           
  5074                           ;usb_device.c: 2851: break;
  5075  0FB5  0008               	return
  5076  0FB6                     i1l3060:	
  5077                           ;usb_device.c: 2852: case 9:
  5078                           
  5079                           
  5080                           ;usb_device.c: 2853: USBStdSetCfgHandler();
  5081  0FB6  3185  2539         	fcall	_USBStdSetCfgHandler
  5082                           
  5083                           ;usb_device.c: 2854: break;
  5084  0FB8  0008               	return
  5085  0FB9                     i1l3062:	
  5086                           ;usb_device.c: 2855: case 8:
  5087                           
  5088                           
  5089                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
  5090  0FB9  30D1               	movlw	low _USBActiveConfiguration
  5091  0FBA  0021               	movlb	1	; select bank1
  5092  0FBB  00A7               	movwf	_inPipes^(0+128)	;volatile
  5093  0FBC  3000               	movlw	high _USBActiveConfiguration
  5094  0FBD  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5095                           
  5096                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5097  0FBE  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5098                           
  5099                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
  5100  0FBF  3001               	movlw	1
  5101  0FC0  0020               	movlb	0	; select bank0
  5102  0FC1  00EE               	movwf	??_USBCheckStdRequest
  5103  0FC2  086E               	movf	??_USBCheckStdRequest,w
  5104  0FC3  0021               	movlb	1	; select bank1
  5105  0FC4  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5106                           
  5107                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
  5108  0FC5  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5109                           
  5110                           ;usb_device.c: 2860: break;
  5111  0FC6  0008               	return
  5112  0FC7                     i1l3070:	
  5113                           ;usb_device.c: 2861: case 0:
  5114                           
  5115                           
  5116                           ;usb_device.c: 2862: USBStdGetStatusHandler();
  5117  0FC7  318E  2609         	fcall	_USBStdGetStatusHandler
  5118                           
  5119                           ;usb_device.c: 2863: break;
  5120  0FC9  0008               	return
  5121  0FCA                     i1l3072:	
  5122                           ;usb_device.c: 2864: case 1:
  5123                           
  5124                           
  5125                           ;usb_device.c: 2865: case 3:
  5126                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
  5127  0FCA  3180  2054         	fcall	_USBStdFeatureReqHandler
  5128                           
  5129                           ;usb_device.c: 2867: break;
  5130  0FCC  0008               	return
  5131  0FCD                     i1l3074:	
  5132                           ;usb_device.c: 2868: case 10:
  5133                           
  5134                           
  5135                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
  5136  0FCD  0020               	movlb	0	; select bank0
  5137  0FCE  0854               	movf	84,w	;volatile
  5138  0FCF  3ED0               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5139  0FD0  0021               	movlb	1	; select bank1
  5140  0FD1  00A7               	movwf	_inPipes^(0+128)	;volatile
  5141  0FD2  3000               	movlw	0
  5142  0FD3  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5143                           
  5144                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5145  0FD4  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5146                           
  5147                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
  5148  0FD5  3001               	movlw	1
  5149  0FD6  0020               	movlb	0	; select bank0
  5150  0FD7  00EE               	movwf	??_USBCheckStdRequest
  5151  0FD8  086E               	movf	??_USBCheckStdRequest,w
  5152  0FD9  0021               	movlb	1	; select bank1
  5153  0FDA  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5154                           
  5155                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
  5156  0FDB  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5157                           
  5158                           ;usb_device.c: 2873: break;
  5159  0FDC  0008               	return
  5160  0FDD                     i1l345:	
  5161                           ;usb_device.c: 2874: case 11:
  5162                           
  5163                           
  5164                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
  5165  0FDD  0021               	movlb	1	; select bank1
  5166  0FDE  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5167                           
  5168                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5169  0FDF  0020               	movlb	0	; select bank0
  5170  0FE0  0852               	movf	82,w	;volatile
  5171  0FE1  00EE               	movwf	??_USBCheckStdRequest
  5172  0FE2  0854               	movf	84,w	;volatile
  5173  0FE3  3ED0               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5174  0FE4  0086               	movwf	6
  5175  0FE5  0187               	clrf	7
  5176  0FE6  086E               	movf	??_USBCheckStdRequest,w
  5177  0FE7  0081               	movwf	1
  5178                           
  5179                           ;usb_device.c: 2877: break;
  5180  0FE8  0008               	return
  5181  0FE9                     i1l3084:	
  5182                           ;usb_device.c: 2878: case 7:
  5183                           
  5184                           
  5185                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5186  0FE9  3002               	movlw	2
  5187  0FEA  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5188  0FEB  3000               	movlw	0
  5189  0FEC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5190  0FED  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5191  0FEE  3000               	movlw	0
  5192  0FEF  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5193  0FF0  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5194  0FF1  318C  24F3         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5195                           
  5196                           ;usb_device.c: 2884: }
  5197                           
  5198                           ;usb_device.c: 2883: break;
  5199                           
  5200                           ;usb_device.c: 2882: default:
  5201                           
  5202                           ;usb_device.c: 2881: case 12:
  5203                           
  5204                           ;usb_device.c: 2880: break;
  5205  0FF3  0008               	return
  5206  0FF4                     i1l3088:	
  5207  0FF4  0020               	movlb	0	; select bank0
  5208  0FF5  0851               	movf	81,w	;volatile
  5209                           
  5210                           ; Switch size 1, requested type "space"
  5211                           ; Number of cases is 11, Range of values is 0 to 12
  5212                           ; switch strategies available:
  5213                           ; Name         Instructions Cycles
  5214                           ; direct_byte           32     6 (fixed)
  5215                           ; simple_byte           34    18 (average)
  5216                           ; jumptable            260     6 (fixed)
  5217                           ;	Chosen strategy is direct_byte
  5218  0FF6  0084               	movwf	4
  5219  0FF7  300D               	movlw	13
  5220  0FF8  0204               	subwf	4,w
  5221  0FF9  1803               	skipnc
  5222  0FFA  0008               	return
  5223  0FFB  3188               	movlp	high i1S4248
  5224  0FFC  3504               	lslf	4,w
  5225  0FFD  3E00               	addlw	low i1S4248
  5226  0FFE  0082               	movwf	2
  5227  0FFF                     i1l334:	
  5228  0FFF  0008               	return
  5229  1000                     __end_of_USBCheckStdRequest:	
  5230                           
  5231                           	psect	swtext1
  5232  0800                     __pswtext1:	
  5233  0800                     i1S4248:	
  5234  0800  318F  2FC7         	ljmp	i1l3070
  5235  0802  318F  2FCA         	ljmp	i1l3072
  5236  0804  318F  2FFF         	ljmp	i1l334
  5237  0806  318F  2FCA         	ljmp	i1l3072
  5238  0808  318F  2FFF         	ljmp	i1l334
  5239  080A  318F  2FAA         	ljmp	i1l336
  5240  080C  318F  2FB3         	ljmp	i1l3058
  5241  080E  318F  2FE9         	ljmp	i1l3084
  5242  0810  318F  2FB9         	ljmp	i1l3062
  5243  0812  318F  2FB6         	ljmp	i1l3060
  5244  0814  318F  2FCD         	ljmp	i1l3074
  5245  0816  318F  2FDD         	ljmp	i1l345
  5246  0818  318F  2FFF         	ljmp	i1l334
  5247                           
  5248                           	psect	text22
  5249  0539                     __ptext22:	
  5250 ;; *************** function _USBStdSetCfgHandler *****************
  5251 ;; Defined at:
  5252 ;;		line 2131 in file "../Microchip/USB/usb_device.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  p               2    8[BANK0 ] PTR unsigned char 
  5257 ;;		 -> UEP1(1), 
  5258 ;;  i               1   10[BANK0 ] unsigned char 
  5259 ;;  i               1   11[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        5 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    5
  5276 ;; This function calls:
  5277 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5278 ;;		_memset
  5279 ;; This function is called by:
  5280 ;;		_USBCheckStdRequest
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _USBStdSetCfgHandler
  5286  0539                     _USBStdSetCfgHandler:	
  5287                           
  5288                           ;usb_device.c: 2133: BYTE i;
  5289                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5293  0539  0021               	movlb	1	; select bank1
  5294  053A  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5295                           
  5296                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<2;i++) *p++ = 0; };
  5297  053B  300E               	movlw	14
  5298  053C  0020               	movlb	0	; select bank0
  5299  053D  00E9               	movwf	USBStdSetCfgHandler@p+1
  5300  053E  3099               	movlw	153
  5301  053F  00E8               	movwf	USBStdSetCfgHandler@p
  5302  0540  01EA               	clrf	USBStdSetCfgHandler@i_1853
  5303  0541  3002               	movlw	2
  5304  0542  026A               	subwf	USBStdSetCfgHandler@i_1853,w
  5305  0543  1803               	btfsc	3,0
  5306  0544  2D56               	goto	i1l2790
  5307  0545                     i1l2782:	
  5308  0545  0868               	movf	USBStdSetCfgHandler@p,w
  5309  0546  0086               	movwf	6
  5310  0547  0869               	movf	USBStdSetCfgHandler@p+1,w
  5311  0548  0087               	movwf	7
  5312  0549  0181               	clrf	1
  5313  054A  3001               	movlw	1
  5314  054B  07E8               	addwf	USBStdSetCfgHandler@p,f
  5315  054C  3000               	movlw	0
  5316  054D  3DE9               	addwfc	USBStdSetCfgHandler@p+1,f
  5317  054E  3001               	movlw	1
  5318  054F  00FD               	movwf	??_USBStdSetCfgHandler
  5319  0550  087D               	movf	??_USBStdSetCfgHandler,w
  5320  0551  07EA               	addwf	USBStdSetCfgHandler@i_1853,f
  5321  0552  3002               	movlw	2
  5322  0553  026A               	subwf	USBStdSetCfgHandler@i_1853,w
  5323  0554  1C03               	skipc
  5324  0555  2D45               	goto	i1l2782
  5325  0556                     i1l2790:	
  5326                           
  5327                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5328  0556  3000               	movlw	0
  5329  0557  00F0               	movwf	memset@c
  5330  0558  00F1               	movwf	memset@c+1
  5331  0559  3030               	movlw	48
  5332  055A  00F2               	movwf	memset@n
  5333  055B  3000               	movlw	0
  5334  055C  00F3               	movwf	memset@n+1
  5335  055D  3020               	movlw	32
  5336  055E  318B  23CA  3185   	fcall	_memset
  5337                           
  5338                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
  5339  0561  003D               	movlb	29	; select bank29
  5340  0562  170E               	bsf	14,6	;volatile
  5341                           
  5342                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(2+1u); i++)
  5343  0563  0020               	movlb	0	; select bank0
  5344  0564  01EB               	clrf	USBStdSetCfgHandler@i
  5345  0565  3003               	movlw	3
  5346  0566  026B               	subwf	USBStdSetCfgHandler@i,w
  5347  0567  1803               	btfsc	3,0
  5348  0568  2D7B               	goto	i1l2806
  5349  0569                     i1l2800:	
  5350                           
  5351                           ;usb_device.c: 2151: {
  5352                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
  5353  0569  086B               	movf	USBStdSetCfgHandler@i,w
  5354  056A  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  5355  056B  0086               	movwf	6
  5356  056C  0187               	clrf	7
  5357  056D  0181               	clrf	1
  5358                           
  5359                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
  5360  056E  086B               	movf	USBStdSetCfgHandler@i,w
  5361  056F  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  5362  0570  0086               	movwf	6
  5363  0571  0187               	clrf	7
  5364  0572  0181               	clrf	1
  5365  0573  3001               	movlw	1
  5366  0574  00FD               	movwf	??_USBStdSetCfgHandler
  5367  0575  087D               	movf	??_USBStdSetCfgHandler,w
  5368  0576  07EB               	addwf	USBStdSetCfgHandler@i,f
  5369  0577  3003               	movlw	3
  5370  0578  026B               	subwf	USBStdSetCfgHandler@i,w
  5371  0579  1C03               	skipc
  5372  057A  2D69               	goto	i1l2800
  5373  057B                     i1l2806:	
  5374                           
  5375                           ;usb_device.c: 2154: }
  5376                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
  5377  057B  3000               	movlw	0
  5378  057C  00F0               	movwf	memset@c
  5379  057D  00F1               	movwf	memset@c+1
  5380  057E  3001               	movlw	1
  5381  057F  00F2               	movwf	memset@n
  5382  0580  3000               	movlw	0
  5383  0581  00F3               	movwf	memset@n+1
  5384  0582  30D0               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  5385  0583  318B  23CA  3185   	fcall	_memset
  5386                           
  5387                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
  5388  0586  003D               	movlb	29	; select bank29
  5389  0587  130E               	bcf	14,6	;volatile
  5390                           
  5391                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5392  0588  3028               	movlw	40
  5393  0589  00FD               	movwf	??_USBStdSetCfgHandler
  5394  058A  087D               	movf	??_USBStdSetCfgHandler,w
  5395  058B  0021               	movlb	1	; select bank1
  5396  058C  00B2               	movwf	_pBDTEntryIn^(0+128)
  5397                           
  5398                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5399  058D  3020               	movlw	32
  5400  058E  00FD               	movwf	??_USBStdSetCfgHandler
  5401  058F  087D               	movf	??_USBStdSetCfgHandler,w
  5402  0590  00CD               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5403                           
  5404                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5405  0591  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5406  0592  00FD               	movwf	??_USBStdSetCfgHandler
  5407  0593  087D               	movf	??_USBStdSetCfgHandler,w
  5408  0594  00CC               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5409                           
  5410                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5411  0595  0020               	movlb	0	; select bank0
  5412  0596  0852               	movf	82,w	;volatile
  5413  0597  00FD               	movwf	??_USBStdSetCfgHandler
  5414  0598  087D               	movf	??_USBStdSetCfgHandler,w
  5415  0599  0021               	movlb	1	; select bank1
  5416  059A  00D1               	movwf	_USBActiveConfiguration^(0+128)	;volatile
  5417                           
  5418                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
  5419  059B  0851               	movf	_USBActiveConfiguration^(0+128),w	;volatile
  5420  059C  1D03               	btfss	3,2
  5421  059D  2DA3               	goto	i1l2822
  5422                           
  5423                           ;usb_device.c: 2173: {
  5424                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
  5425  059E  3010               	movlw	16
  5426  059F  00FD               	movwf	??_USBStdSetCfgHandler
  5427  05A0  087D               	movf	??_USBStdSetCfgHandler,w
  5428  05A1  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  5429                           
  5430                           ;usb_device.c: 2176: }
  5431  05A2  0008               	return
  5432  05A3                     i1l2822:	
  5433                           
  5434                           ;usb_device.c: 2177: else
  5435                           ;usb_device.c: 2178: {
  5436                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5437  05A3  3001               	movlw	1
  5438  05A4  0020               	movlb	0	; select bank0
  5439  05A5  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5440  05A6  3000               	movlw	0
  5441  05A7  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5442  05A8  30D1               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5443  05A9  00FD               	movwf	??_USBStdSetCfgHandler
  5444  05AA  087D               	movf	??_USBStdSetCfgHandler,w
  5445  05AB  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5446  05AC  3001               	movlw	1
  5447  05AD  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5448  05AE  3000               	movlw	0
  5449  05AF  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5450  05B0  318C  24F3         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5451                           
  5452                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
  5453  05B2  3020               	movlw	32
  5454  05B3  00FD               	movwf	??_USBStdSetCfgHandler
  5455  05B4  087D               	movf	??_USBStdSetCfgHandler,w
  5456  05B5  0021               	movlb	1	; select bank1
  5457  05B6  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  5458  05B7  0008               	return
  5459  05B8                     __end_of_USBStdSetCfgHandler:	
  5460                           
  5461                           	psect	text23
  5462  0BCA                     __ptext23:	
  5463 ;; *************** function _memset *****************
  5464 ;; Defined at:
  5465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  p1              1    wreg     PTR void 
  5468 ;;		 -> USBAlternateInterface(1), BDT(48), 
  5469 ;;  c               2    0[COMMON] int 
  5470 ;;  n               2    2[COMMON] unsigned int 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  p1              1    6[COMMON] PTR void 
  5473 ;;		 -> USBAlternateInterface(1), BDT(48), 
  5474 ;;  p               1    5[COMMON] PTR unsigned char 
  5475 ;;		 -> USBAlternateInterface(1), BDT(48), 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      PTR void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;Total ram usage:        7 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_USBStdSetCfgHandler
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _memset
  5500  0BCA                     _memset:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5504                           ;memset@p1 stored from wreg
  5505  0BCA  00F6               	movwf	memset@p1
  5506  0BCB  0876               	movf	memset@p1,w
  5507  0BCC  00F4               	movwf	??_memset
  5508  0BCD  0874               	movf	??_memset,w
  5509  0BCE  00F5               	movwf	memset@p
  5510  0BCF                     i1l2720:	
  5511  0BCF  3001               	movlw	1
  5512  0BD0  02F2               	subwf	memset@n,f
  5513  0BD1  3000               	movlw	0
  5514  0BD2  3BF3               	subwfb	memset@n+1,f
  5515  0BD3  0A72               	incf	memset@n,w
  5516  0BD4  1903               	btfsc	3,2
  5517  0BD5  0A73               	incf	memset@n+1,w
  5518  0BD6  1903               	btfsc	3,2
  5519  0BD7  0008               	return
  5520  0BD8  0870               	movf	memset@c,w
  5521  0BD9  00F4               	movwf	??_memset
  5522  0BDA  0875               	movf	memset@p,w
  5523  0BDB  0086               	movwf	6
  5524  0BDC  0187               	clrf	7
  5525  0BDD  0874               	movf	??_memset,w
  5526  0BDE  0081               	movwf	1
  5527  0BDF  3001               	movlw	1
  5528  0BE0  00F4               	movwf	??_memset
  5529  0BE1  0874               	movf	??_memset,w
  5530  0BE2  07F5               	addwf	memset@p,f
  5531  0BE3  2BCF               	goto	i1l2720
  5532  0BE4                     __end_of_memset:	
  5533                           ;	Return value of _memset is never used
  5534                           
  5535                           
  5536                           	psect	text24
  5537  0E09                     __ptext24:	
  5538 ;; *************** function _USBStdGetStatusHandler *****************
  5539 ;; Defined at:
  5540 ;;		line 2282 in file "../Microchip/USB/usb_device.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  p               1    1[COMMON] PTR struct __BDT
  5545 ;;		 -> NULL(0), BDT(48), 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;Total ram usage:        2 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_USBCheckStdRequest
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _USBStdGetStatusHandler
  5570  0E09                     _USBStdGetStatusHandler:	
  5571                           
  5572                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5576  0E09  0020               	movlb	0	; select bank0
  5577  0E0A  01D8               	clrf	88	;volatile
  5578                           
  5579                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
  5580  0E0B  01D9               	clrf	89	;volatile
  5581                           
  5582                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
  5583  0E0C  2E3A               	goto	i1l2874
  5584  0E0D                     i1l275:	
  5585                           ;usb_device.c: 2288: {
  5586                           ;usb_device.c: 2289: case (0x00):
  5587                           
  5588                           
  5589                           ;usb_device.c: 2290: inPipes[0].info.bits.busy = 1;
  5590  0E0D  0021               	movlb	1	; select bank1
  5591  0E0E  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5592                           
  5593                           ;usb_device.c: 2298: }
  5594                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
  5595                           
  5596                           ;usb_device.c: 2296: {
  5597                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
  5598                           
  5599                           ;usb_device.c: 2295: if(0 == 1)
  5600  0E0F  0021               	movlb	1	; select bank1
  5601  0E10  0348               	decf	_RemoteWakeup^(0+128),w	;volatile
  5602  0E11  1D03               	btfss	3,2
  5603  0E12  2E46               	goto	i1l278
  5604                           
  5605                           ;usb_device.c: 2301: {
  5606                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
  5607  0E13  0020               	movlb	0	; select bank0
  5608  0E14  14D8               	bsf	88,1	;volatile
  5609                           
  5610                           ;usb_device.c: 2303: }
  5611                           ;usb_device.c: 2304: break;
  5612  0E15  2E46               	goto	i1l278
  5613  0E16                     i1l279:	
  5614                           ;usb_device.c: 2305: case (0x01):
  5615                           
  5616                           
  5617                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
  5618  0E16  0021               	movlb	1	; select bank1
  5619  0E17  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5620                           
  5621                           ;usb_device.c: 2307: break;
  5622  0E18  2E46               	goto	i1l278
  5623  0E19                     i1l280:	
  5624                           ;usb_device.c: 2308: case (0x02):
  5625                           
  5626                           
  5627                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
  5628  0E19  0021               	movlb	1	; select bank1
  5629  0E1A  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5630                           
  5631                           ;usb_device.c: 2313: {
  5632                           ;usb_device.c: 2314: BDT_ENTRY *p;
  5633                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
  5634  0E1B  0020               	movlb	0	; select bank0
  5635  0E1C  1BD4               	btfsc	84,7	;volatile
  5636  0E1D  2E22               	goto	i1l2864
  5637                           
  5638                           ;usb_device.c: 2317: {
  5639                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5640  0E1E  0854               	movf	84,w	;volatile
  5641  0E1F  390F               	andlw	15
  5642  0E20  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  5643  0E21  2E25               	goto	L8
  5644  0E22                     i1l2864:	
  5645                           ;usb_device.c: 2319: }
  5646                           
  5647                           
  5648                           ;usb_device.c: 2320: else
  5649                           ;usb_device.c: 2321: {
  5650                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5651  0E22  0854               	movf	84,w	;volatile
  5652  0E23  390F               	andlw	15
  5653  0E24  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5654  0E25                     L8:	
  5655  0E25  0086               	movwf	6
  5656  0E26  0187               	clrf	7
  5657  0E27  0801               	movf	1,w
  5658  0E28  00F0               	movwf	??_USBStdGetStatusHandler
  5659  0E29  0870               	movf	??_USBStdGetStatusHandler,w
  5660  0E2A  00F1               	movwf	USBStdGetStatusHandler@p
  5661                           
  5662                           ;usb_device.c: 2323: }
  5663                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5664  0E2B  0871               	movf	USBStdGetStatusHandler@p,w
  5665  0E2C  0086               	movwf	6
  5666  0E2D  0187               	clrf	7
  5667  0E2E  1F81               	btfss	1,7
  5668  0E2F  2E46               	goto	i1l278
  5669  0E30  0871               	movf	USBStdGetStatusHandler@p,w
  5670  0E31  0086               	movwf	6
  5671  0E32  0187               	clrf	7
  5672  0E33  1D01               	btfss	1,2
  5673  0E34  2E46               	goto	i1l278
  5674                           
  5675                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
  5676  0E35  3001               	movlw	1
  5677  0E36  00F0               	movwf	??_USBStdGetStatusHandler
  5678  0E37  0870               	movf	??_USBStdGetStatusHandler,w
  5679  0E38  00D8               	movwf	88	;volatile
  5680                           
  5681                           ;usb_device.c: 2328: }
  5682                           ;usb_device.c: 2329: }
  5683                           
  5684                           ;usb_device.c: 2327: break;
  5685  0E39  2E46               	goto	i1l278
  5686  0E3A                     i1l2874:	
  5687  0E3A  0850               	movf	80,w	;volatile
  5688  0E3B  391F               	andlw	31
  5689                           
  5690                           ; Switch size 1, requested type "space"
  5691                           ; Number of cases is 3, Range of values is 0 to 2
  5692                           ; switch strategies available:
  5693                           ; Name         Instructions Cycles
  5694                           ; simple_byte           10     6 (average)
  5695                           ; direct_byte           12     6 (fixed)
  5696                           ; jumptable            260     6 (fixed)
  5697                           ;	Chosen strategy is simple_byte
  5698  0E3C  3A00               	xorlw	0	; case 0
  5699  0E3D  1903               	skipnz
  5700  0E3E  2E0D               	goto	i1l275
  5701  0E3F  3A01               	xorlw	1	; case 1
  5702  0E40  1903               	skipnz
  5703  0E41  2E16               	goto	i1l279
  5704  0E42  3A03               	xorlw	3	; case 2
  5705  0E43  1903               	skipnz
  5706  0E44  2E19               	goto	i1l280
  5707  0E45  2E46               	goto	i1l278
  5708  0E46                     i1l278:	
  5709                           
  5710                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
  5711  0E46  0021               	movlb	1	; select bank1
  5712  0E47  1FA9               	btfss	(_inPipes^(0+128)+2),7	;volatile
  5713  0E48  0008               	return
  5714                           
  5715                           ;usb_device.c: 2332: {
  5716                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
  5717  0E49  3058               	movlw	88
  5718  0E4A  00A7               	movwf	_inPipes^(0+128)	;volatile
  5719  0E4B  3000               	movlw	0
  5720  0E4C  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5721                           
  5722                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5723  0E4D  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5724                           
  5725                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
  5726  0E4E  3002               	movlw	2
  5727  0E4F  00F0               	movwf	??_USBStdGetStatusHandler
  5728  0E50  0870               	movf	??_USBStdGetStatusHandler,w
  5729  0E51  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5730  0E52  0008               	return
  5731  0E53                     __end_of_USBStdGetStatusHandler:	
  5732                           
  5733                           	psect	text25
  5734  05B8                     __ptext25:	
  5735 ;; *************** function _USBStdGetDscHandler *****************
  5736 ;; Defined at:
  5737 ;;		line 2206 in file "../Microchip/USB/usb_device.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;Total ram usage:        3 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_USBCheckStdRequest
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _USBStdGetDscHandler
  5766  05B8                     _USBStdGetDscHandler:	
  5767                           
  5768                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5772  05B8  3080               	movlw	128
  5773  05B9  0020               	movlb	0	; select bank0
  5774  05BA  0650               	xorwf	80,w	;volatile
  5775  05BB  1D03               	btfss	3,2
  5776  05BC  0008               	return
  5777                           
  5778                           ;usb_device.c: 2209: {
  5779                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5780  05BD  30C0               	movlw	192
  5781  05BE  00F0               	movwf	??_USBStdGetDscHandler
  5782  05BF  0870               	movf	??_USBStdGetDscHandler,w
  5783  05C0  0021               	movlb	1	; select bank1
  5784  05C1  00A9               	movwf	(_inPipes^(0+128)+2)	;volatile
  5785                           
  5786                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
  5787  05C2  2E24               	goto	i1l2852
  5788  05C3                     i1l2830:	
  5789                           ;usb_device.c: 2213: {
  5790                           ;usb_device.c: 2214: case 0x01:
  5791                           
  5792                           
  5793                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
  5794  05C3  30C1               	movlw	low (_device_dsc| (0+32768))
  5795  05C4  0021               	movlb	1	; select bank1
  5796  05C5  00A7               	movwf	_inPipes^(0+128)	;volatile
  5797  05C6  3090               	movlw	high (_device_dsc| (0+32768))
  5798  05C7  00A8               	movwf	(_inPipes^(0+128)+1)	;volatile
  5799                           
  5800                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
  5801  05C8  3000               	movlw	0
  5802  05C9  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5803  05CA  3012               	movlw	18
  5804  05CB  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5805                           
  5806                           ;usb_device.c: 2221: break;
  5807  05CC  0008               	return
  5808  05CD                     i1l2834:	
  5809                           ;usb_device.c: 2222: case 0x02:
  5810                           
  5811                           
  5812                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5813  05CD  0020               	movlb	0	; select bank0
  5814  05CE  0852               	movf	82,w	;volatile
  5815  05CF  00F0               	movwf	??_USBStdGetDscHandler
  5816  05D0  01F1               	clrf	??_USBStdGetDscHandler+1
  5817  05D1  35F0               	lslf	??_USBStdGetDscHandler,f
  5818  05D2  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  5819  05D3  30D9               	movlw	low (_USB_CD_Ptr| (0+32768))
  5820  05D4  0770               	addwf	??_USBStdGetDscHandler,w
  5821  05D5  0084               	movwf	4
  5822  05D6  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  5823  05D7  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  5824  05D8  0085               	movwf	5
  5825  05D9  3F00               	moviw [0]fsr0
  5826  05DA  0021               	movlb	1	; select bank1
  5827  05DB  00A7               	movwf	_inPipes^(0+128)	;volatile
  5828  05DC  3F01               	moviw [1]fsr0
  5829  05DD  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5830                           
  5831                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5832  05DE  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  5833  05DF  00F1               	movwf	??_USBStdGetDscHandler+1
  5834  05E0  0827               	movf	_inPipes^(0+128),w	;volatile
  5835  05E1  00F0               	movwf	??_USBStdGetDscHandler
  5836  05E2  3002               	movlw	2
  5837  05E3  0770               	addwf	??_USBStdGetDscHandler,w
  5838  05E4  0084               	movwf	4
  5839  05E5  0871               	movf	??_USBStdGetDscHandler+1,w
  5840  05E6  1803               	skipnc
  5841  05E7  0A71               	incf	??_USBStdGetDscHandler+1,w
  5842  05E8  0085               	movwf	5
  5843  05E9  0800               	movf	0,w	;code access
  5844  05EA  00F2               	movwf	??_USBStdGetDscHandler+2
  5845  05EB  0872               	movf	??_USBStdGetDscHandler+2,w
  5846  05EC  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5847                           
  5848                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5849  05ED  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  5850  05EE  00F1               	movwf	??_USBStdGetDscHandler+1
  5851  05EF  0827               	movf	_inPipes^(0+128),w	;volatile
  5852  05F0  00F0               	movwf	??_USBStdGetDscHandler
  5853  05F1  3003               	movlw	3
  5854  05F2  0770               	addwf	??_USBStdGetDscHandler,w
  5855  05F3  0084               	movwf	4
  5856  05F4  0871               	movf	??_USBStdGetDscHandler+1,w
  5857  05F5  1803               	skipnc
  5858  05F6  0A71               	incf	??_USBStdGetDscHandler+1,w
  5859  05F7  0085               	movwf	5
  5860  05F8  0800               	movf	0,w	;code access
  5861  05F9  00F2               	movwf	??_USBStdGetDscHandler+2
  5862  05FA  0872               	movf	??_USBStdGetDscHandler+2,w
  5863  05FB  00AB               	movwf	(_inPipes^(0+128)+4)	;volatile
  5864                           
  5865                           ;usb_device.c: 2234: break;
  5866  05FC  0008               	return
  5867  05FD                     i1l2840:	
  5868                           ;usb_device.c: 2235: case 0x03:
  5869                           
  5870                           
  5871                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
  5872  05FD  3003               	movlw	3
  5873  05FE  0020               	movlb	0	; select bank0
  5874  05FF  0252               	subwf	82,w	;volatile
  5875  0600  1803               	skipnc
  5876  0601  2E1E               	goto	i1l2846
  5877                           
  5878                           ;usb_device.c: 2240: {
  5879                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5880  0602  0852               	movf	82,w	;volatile
  5881  0603  00F0               	movwf	??_USBStdGetDscHandler
  5882  0604  01F1               	clrf	??_USBStdGetDscHandler+1
  5883  0605  35F0               	lslf	??_USBStdGetDscHandler,f
  5884  0606  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  5885  0607  30D3               	movlw	low (_USB_SD_Ptr| (0+32768))
  5886  0608  0770               	addwf	??_USBStdGetDscHandler,w
  5887  0609  0084               	movwf	4
  5888  060A  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  5889  060B  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  5890  060C  0085               	movwf	5
  5891  060D  3F00               	moviw [0]fsr0
  5892  060E  0021               	movlb	1	; select bank1
  5893  060F  00A7               	movwf	_inPipes^(0+128)	;volatile
  5894  0610  3F01               	moviw [1]fsr0
  5895  0611  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  5896                           
  5897                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5898  0612  0827               	movf	_inPipes^(0+128),w	;volatile
  5899  0613  0084               	movwf	4
  5900  0614  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  5901  0615  0085               	movwf	5
  5902  0616  0800               	movf	0,w	;code access
  5903  0617  00F0               	movwf	??_USBStdGetDscHandler
  5904  0618  01F1               	clrf	??_USBStdGetDscHandler+1
  5905  0619  0870               	movf	??_USBStdGetDscHandler,w
  5906  061A  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  5907  061B  0871               	movf	??_USBStdGetDscHandler+1,w
  5908  061C  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5909                           
  5910                           ;usb_device.c: 2245: }
  5911  061D  0008               	return
  5912  061E                     i1l2846:	
  5913                           
  5914                           ;usb_device.c: 2255: else
  5915                           ;usb_device.c: 2256: {
  5916                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
  5917  061E  0021               	movlb	1	; select bank1
  5918  061F  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  5919                           
  5920                           ;usb_device.c: 2258: }
  5921                           ;usb_device.c: 2259: break;
  5922  0620  0008               	return
  5923  0621                     i1l2848:	
  5924                           ;usb_device.c: 2260: default:
  5925                           
  5926                           
  5927                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
  5928  0621  0021               	movlb	1	; select bank1
  5929  0622  01A9               	clrf	(_inPipes^(0+128)+2)	;volatile
  5930                           
  5931                           ;usb_device.c: 2263: }
  5932                           
  5933                           ;usb_device.c: 2262: break;
  5934  0623  0008               	return
  5935  0624                     i1l2852:	
  5936  0624  0020               	movlb	0	; select bank0
  5937  0625  0853               	movf	83,w	;volatile
  5938                           
  5939                           ; Switch size 1, requested type "space"
  5940                           ; Number of cases is 3, Range of values is 1 to 3
  5941                           ; switch strategies available:
  5942                           ; Name         Instructions Cycles
  5943                           ; simple_byte           10     6 (average)
  5944                           ; direct_byte           15     9 (fixed)
  5945                           ; jumptable            263     9 (fixed)
  5946                           ;	Chosen strategy is simple_byte
  5947  0626  3A01               	xorlw	1	; case 1
  5948  0627  1903               	skipnz
  5949  0628  2DC3               	goto	i1l2830
  5950  0629  3A03               	xorlw	3	; case 2
  5951  062A  1903               	skipnz
  5952  062B  2DCD               	goto	i1l2834
  5953  062C  3A01               	xorlw	1	; case 3
  5954  062D  1903               	skipnz
  5955  062E  2DFD               	goto	i1l2840
  5956  062F  2E21               	goto	i1l2848
  5957  0630  0008               	return
  5958  0631                     __end_of_USBStdGetDscHandler:	
  5959                           
  5960                           	psect	text26
  5961  0054                     __ptext26:	
  5962 ;; *************** function _USBStdFeatureReqHandler *****************
  5963 ;; Defined at:
  5964 ;;		line 2906 in file "../Microchip/USB/usb_device.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  pUEP            2   10[BANK0 ] PTR unsigned char 
  5969 ;;		 -> UEP0(1), 
  5970 ;;  p               1   13[BANK0 ] PTR struct __BDT
  5971 ;;		 -> NULL(0), BDT(48), 
  5972 ;;  current_ep_d    1   12[BANK0 ] struct .
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;Total ram usage:        6 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    5
  5989 ;; This function calls:
  5990 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5991 ;; This function is called by:
  5992 ;;		_USBCheckStdRequest
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function _USBStdFeatureReqHandler
  5998  0054                     _USBStdFeatureReqHandler:	
  5999                           
  6000                           ;usb_device.c: 2908: BDT_ENTRY *p;
  6001                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
  6002                           ;usb_device.c: 2913: unsigned char* pUEP;
  6003                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
  6004                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6008  0054  0020               	movlb	0	; select bank0
  6009  0055  0352               	decf	82,w	;volatile
  6010  0056  1D03               	btfss	3,2
  6011  0057  286C               	goto	i1l2894
  6012  0058  0850               	movf	80,w	;volatile
  6013  0059  391F               	andlw	31
  6014  005A  3A00               	xorlw	0
  6015  005B  1D03               	skipz
  6016  005C  286C               	goto	i1l2894
  6017                           
  6018                           ;usb_device.c: 2953: {
  6019                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
  6020  005D  0021               	movlb	1	; select bank1
  6021  005E  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6022                           
  6023                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
  6024  005F  3003               	movlw	3
  6025  0060  0020               	movlb	0	; select bank0
  6026  0061  0651               	xorwf	81,w	;volatile
  6027  0062  1D03               	btfss	3,2
  6028  0063  286A               	goto	i1l2892
  6029                           
  6030                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
  6031  0064  3001               	movlw	1
  6032  0065  00E8               	movwf	??_USBStdFeatureReqHandler
  6033  0066  0868               	movf	??_USBStdFeatureReqHandler,w
  6034  0067  0021               	movlb	1	; select bank1
  6035  0068  00C8               	movwf	_RemoteWakeup^(0+128)	;volatile
  6036  0069  286C               	goto	i1l2894
  6037  006A                     i1l2892:	
  6038                           
  6039                           ;usb_device.c: 2957: else
  6040                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
  6041  006A  0021               	movlb	1	; select bank1
  6042  006B  01C8               	clrf	_RemoteWakeup^(0+128)	;volatile
  6043  006C                     i1l2894:	
  6044                           
  6045                           ;usb_device.c: 2959: }
  6046                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
  6047                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
  6048                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6049                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
  6050  006C  0020               	movlb	0	; select bank0
  6051  006D  0852               	movf	82,w	;volatile
  6052  006E  1D03               	btfss	3,2
  6053  006F  0008               	return
  6054  0070  0850               	movf	80,w	;volatile
  6055  0071  391F               	andlw	31
  6056  0072  3A02               	xorlw	2
  6057  0073  1D03               	skipz
  6058  0074  0008               	return
  6059  0075  0854               	movf	84,w	;volatile
  6060  0076  390F               	andlw	15
  6061  0077  3A00               	xorlw	0
  6062  0078  1903               	skipnz
  6063  0079  0008               	return
  6064  007A  0854               	movf	84,w	;volatile
  6065  007B  390F               	andlw	15
  6066  007C  00E8               	movwf	??_USBStdFeatureReqHandler
  6067  007D  3003               	movlw	3
  6068  007E  0268               	subwf	??_USBStdFeatureReqHandler,w
  6069  007F  1803               	skipnc
  6070  0080  0008               	return
  6071  0081  3020               	movlw	32
  6072  0082  0021               	movlb	1	; select bank1
  6073  0083  064E               	xorwf	_USBDeviceState^(0+128),w	;volatile
  6074  0084  1D03               	btfss	3,2
  6075  0085  0008               	return
  6076                           
  6077                           ;usb_device.c: 2966: {
  6078                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
  6079  0086  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6080                           
  6081                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
  6082  0087  0020               	movlb	0	; select bank0
  6083  0088  1BD4               	btfsc	84,7	;volatile
  6084  0089  2897               	goto	i1l2908
  6085                           
  6086                           ;usb_device.c: 2973: {
  6087                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6088  008A  0854               	movf	84,w	;volatile
  6089  008B  390F               	andlw	15
  6090  008C  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  6091  008D  0086               	movwf	6
  6092  008E  0187               	clrf	7
  6093  008F  0801               	movf	1,w
  6094  0090  00E8               	movwf	??_USBStdFeatureReqHandler
  6095  0091  0868               	movf	??_USBStdFeatureReqHandler,w
  6096  0092  00ED               	movwf	USBStdFeatureReqHandler@p
  6097                           
  6098                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6099  0093  0854               	movf	84,w	;volatile
  6100  0094  390F               	andlw	15
  6101  0095  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6102  0096  28A3               	goto	L9
  6103  0097                     i1l2908:	
  6104                           ;usb_device.c: 2976: }
  6105                           
  6106                           
  6107                           ;usb_device.c: 2977: else
  6108                           ;usb_device.c: 2978: {
  6109                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6110  0097  0854               	movf	84,w	;volatile
  6111  0098  390F               	andlw	15
  6112  0099  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6113  009A  0086               	movwf	6
  6114  009B  0187               	clrf	7
  6115  009C  0801               	movf	1,w
  6116  009D  00E8               	movwf	??_USBStdFeatureReqHandler
  6117  009E  0868               	movf	??_USBStdFeatureReqHandler,w
  6118  009F  00ED               	movwf	USBStdFeatureReqHandler@p
  6119                           
  6120                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6121  00A0  0854               	movf	84,w	;volatile
  6122  00A1  390F               	andlw	15
  6123  00A2  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6124  00A3                     L9:	
  6125  00A3  0086               	movwf	6
  6126  00A4  0187               	clrf	7
  6127  00A5  0801               	movf	1,w
  6128  00A6  00E8               	movwf	??_USBStdFeatureReqHandler
  6129  00A7  0868               	movf	??_USBStdFeatureReqHandler,w
  6130  00A8  00EC               	movwf	USBStdFeatureReqHandler@current_ep_data
  6131                           
  6132                           ;usb_device.c: 2981: }
  6133                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
  6134  00A9  186C               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6135  00AA  28B0               	goto	i1l357
  6136                           
  6137                           ;usb_device.c: 2988: {
  6138                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
  6139  00AB  30FB               	movlw	251
  6140  00AC  00E8               	movwf	??_USBStdFeatureReqHandler
  6141  00AD  0868               	movf	??_USBStdFeatureReqHandler,w
  6142  00AE  05ED               	andwf	USBStdFeatureReqHandler@p,f
  6143                           
  6144                           ;usb_device.c: 2990: }
  6145  00AF  28B1               	goto	i1l358
  6146  00B0                     i1l357:	
  6147                           
  6148                           ;usb_device.c: 2991: else
  6149                           ;usb_device.c: 2992: {
  6150                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
  6151  00B0  156D               	bsf	USBStdFeatureReqHandler@p,2
  6152  00B1                     i1l358:	
  6153                           
  6154                           ;usb_device.c: 2994: }
  6155                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
  6156  00B1  1BD4               	btfsc	84,7	;volatile
  6157  00B2  28B9               	goto	i1l2916
  6158                           
  6159                           ;usb_device.c: 3000: {
  6160                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6161  00B3  086D               	movf	USBStdFeatureReqHandler@p,w
  6162  00B4  00E8               	movwf	??_USBStdFeatureReqHandler
  6163  00B5  0854               	movf	84,w	;volatile
  6164  00B6  390F               	andlw	15
  6165  00B7  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  6166  00B8  28BE               	goto	L10
  6167  00B9                     i1l2916:	
  6168                           ;usb_device.c: 3002: }
  6169                           
  6170                           
  6171                           ;usb_device.c: 3003: else
  6172                           ;usb_device.c: 3004: {
  6173                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6174  00B9  086D               	movf	USBStdFeatureReqHandler@p,w
  6175  00BA  00E8               	movwf	??_USBStdFeatureReqHandler
  6176  00BB  0854               	movf	84,w	;volatile
  6177  00BC  390F               	andlw	15
  6178  00BD  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6179  00BE                     L10:	
  6180  00BE  0086               	movwf	6
  6181  00BF  0187               	clrf	7
  6182  00C0  0868               	movf	??_USBStdFeatureReqHandler,w
  6183  00C1  0081               	movwf	1
  6184                           
  6185                           ;usb_device.c: 3006: }
  6186                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
  6187  00C2  3003               	movlw	3
  6188  00C3  0651               	xorwf	81,w	;volatile
  6189  00C4  1D03               	btfss	3,2
  6190  00C5  28DF               	goto	i1l2928
  6191                           
  6192                           ;usb_device.c: 3010: {
  6193                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
  6194  00C6  086D               	movf	USBStdFeatureReqHandler@p,w
  6195  00C7  0086               	movwf	6
  6196  00C8  0187               	clrf	7
  6197  00C9  1F81               	btfss	1,7
  6198  00CA  28D7               	goto	i1l362
  6199                           
  6200                           ;usb_device.c: 3012: {
  6201                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
  6202  00CB  1BD4               	btfsc	84,7	;volatile
  6203  00CC  28D1               	goto	i1l2926
  6204                           
  6205                           ;usb_device.c: 3016: {
  6206                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6207  00CD  0854               	movf	84,w	;volatile
  6208  00CE  390F               	andlw	15
  6209  00CF  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6210  00D0  28D4               	goto	L11
  6211  00D1                     i1l2926:	
  6212                           ;usb_device.c: 3018: }
  6213                           
  6214                           
  6215                           ;usb_device.c: 3019: else
  6216                           ;usb_device.c: 3020: {
  6217                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6218  00D1  0854               	movf	84,w	;volatile
  6219  00D2  390F               	andlw	15
  6220  00D3  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6221  00D4                     L11:	
  6222  00D4  0086               	movwf	6
  6223  00D5  0187               	clrf	7
  6224  00D6  1481               	bsf	1,1
  6225  00D7                     i1l362:	
  6226                           
  6227                           ;usb_device.c: 3022: }
  6228                           ;usb_device.c: 3023: }
  6229                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
  6230  00D7  3084               	movlw	132
  6231  00D8  00E8               	movwf	??_USBStdFeatureReqHandler
  6232  00D9  086D               	movf	USBStdFeatureReqHandler@p,w
  6233  00DA  0086               	movwf	6
  6234  00DB  0187               	clrf	7
  6235  00DC  0868               	movf	??_USBStdFeatureReqHandler,w
  6236  00DD  0481               	iorwf	1,f
  6237                           
  6238                           ;usb_device.c: 3027: }
  6239  00DE  0008               	return
  6240  00DF                     i1l2928:	
  6241                           
  6242                           ;usb_device.c: 3028: else
  6243                           ;usb_device.c: 3029: {
  6244                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  6245  00DF  3004               	movlw	4
  6246  00E0  00E8               	movwf	??_USBStdFeatureReqHandler
  6247  00E1  0868               	movf	??_USBStdFeatureReqHandler,w
  6248  00E2  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  6249                           
  6250                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
  6251  00E3  086D               	movf	USBStdFeatureReqHandler@p,w
  6252  00E4  0086               	movwf	6
  6253  00E5  0187               	clrf	7
  6254  00E6  1F81               	btfss	1,7
  6255  00E7  2903               	goto	i1l2938
  6256                           
  6257                           ;usb_device.c: 3036: {
  6258                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
  6259  00E8  307F               	movlw	127
  6260  00E9  00E8               	movwf	??_USBStdFeatureReqHandler
  6261  00EA  086D               	movf	USBStdFeatureReqHandler@p,w
  6262  00EB  0086               	movwf	6
  6263  00EC  0187               	clrf	7
  6264  00ED  0868               	movf	??_USBStdFeatureReqHandler,w
  6265  00EE  0581               	andwf	1,f
  6266                           
  6267                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
  6268  00EF  086D               	movf	USBStdFeatureReqHandler@p,w
  6269  00F0  0086               	movwf	6
  6270  00F1  0187               	clrf	7
  6271  00F2  1701               	bsf	1,6
  6272                           
  6273                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6274  00F3  3005               	movlw	5
  6275  00F4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6276  00F5  3000               	movlw	0
  6277  00F6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6278  00F7  086D               	movf	USBStdFeatureReqHandler@p,w
  6279  00F8  00E8               	movwf	??_USBStdFeatureReqHandler
  6280  00F9  0868               	movf	??_USBStdFeatureReqHandler,w
  6281  00FA  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6282  00FB  3001               	movlw	1
  6283  00FC  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6284  00FD  3000               	movlw	0
  6285  00FE  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6286  00FF  318C  24F3  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6287                           
  6288                           ;usb_device.c: 3042: }
  6289  0102  2908               	goto	i1l2940
  6290  0103                     i1l2938:	
  6291                           
  6292                           ;usb_device.c: 3043: else
  6293                           ;usb_device.c: 3044: {
  6294                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
  6295  0103  0020               	movlb	0	; select bank0
  6296  0104  086D               	movf	USBStdFeatureReqHandler@p,w
  6297  0105  0086               	movwf	6
  6298  0106  0187               	clrf	7
  6299  0107  1701               	bsf	1,6
  6300  0108                     i1l2940:	
  6301                           
  6302                           ;usb_device.c: 3047: }
  6303                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
  6304  0108  3004               	movlw	4
  6305  0109  0020               	movlb	0	; select bank0
  6306  010A  00E8               	movwf	??_USBStdFeatureReqHandler
  6307  010B  0868               	movf	??_USBStdFeatureReqHandler,w
  6308  010C  06ED               	xorwf	USBStdFeatureReqHandler@p,f
  6309                           
  6310                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6311  010D  18EC               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6312  010E  2914               	goto	i1l370
  6313  010F  086D               	movf	USBStdFeatureReqHandler@p,w
  6314  0110  0086               	movwf	6
  6315  0111  0187               	clrf	7
  6316  0112  1F81               	btfss	1,7
  6317  0113  2937               	goto	i1l2952
  6318  0114                     i1l370:	
  6319                           
  6320                           ;usb_device.c: 3058: {
  6321                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
  6322  0114  1BD4               	btfsc	84,7	;volatile
  6323  0115  291A               	goto	i1l2948
  6324                           
  6325                           ;usb_device.c: 3060: {
  6326                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6327  0116  0854               	movf	84,w	;volatile
  6328  0117  390F               	andlw	15
  6329  0118  3EAC               	addlw	(low (_ep_data_out| 0))& (0+255)
  6330  0119  291D               	goto	L12
  6331  011A                     i1l2948:	
  6332                           ;usb_device.c: 3062: }
  6333                           
  6334                           
  6335                           ;usb_device.c: 3063: else
  6336                           ;usb_device.c: 3064: {
  6337                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6338  011A  0854               	movf	84,w	;volatile
  6339  011B  390F               	andlw	15
  6340  011C  3EAF               	addlw	(low (_ep_data_in| 0))& (0+255)
  6341  011D                     L12:	
  6342  011D  0086               	movwf	6
  6343  011E  0187               	clrf	7
  6344  011F  1081               	bcf	1,1
  6345                           
  6346                           ;usb_device.c: 3066: }
  6347                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6348  0120  303B               	movlw	59
  6349  0121  00E8               	movwf	??_USBStdFeatureReqHandler
  6350  0122  086D               	movf	USBStdFeatureReqHandler@p,w
  6351  0123  0086               	movwf	6
  6352  0124  0187               	clrf	7
  6353  0125  0868               	movf	??_USBStdFeatureReqHandler,w
  6354  0126  0581               	andwf	1,f
  6355                           
  6356                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6357  0127  3005               	movlw	5
  6358  0128  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6359  0129  3000               	movlw	0
  6360  012A  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6361  012B  086D               	movf	USBStdFeatureReqHandler@p,w
  6362  012C  00E8               	movwf	??_USBStdFeatureReqHandler
  6363  012D  0868               	movf	??_USBStdFeatureReqHandler,w
  6364  012E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6365  012F  3001               	movlw	1
  6366  0130  00E6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6367  0131  3000               	movlw	0
  6368  0132  00E7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6369  0133  318C  24F3  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6370                           
  6371                           ;usb_device.c: 3072: }
  6372  0136  293F               	goto	i1l2954
  6373  0137                     i1l2952:	
  6374                           
  6375                           ;usb_device.c: 3073: else
  6376                           ;usb_device.c: 3074: {
  6377                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6378  0137  303B               	movlw	59
  6379  0138  0020               	movlb	0	; select bank0
  6380  0139  00E8               	movwf	??_USBStdFeatureReqHandler
  6381  013A  086D               	movf	USBStdFeatureReqHandler@p,w
  6382  013B  0086               	movwf	6
  6383  013C  0187               	clrf	7
  6384  013D  0868               	movf	??_USBStdFeatureReqHandler,w
  6385  013E  0581               	andwf	1,f
  6386  013F                     i1l2954:	
  6387                           
  6388                           ;usb_device.c: 3077: }
  6389                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6390  013F  0020               	movlb	0	; select bank0
  6391  0140  0854               	movf	84,w	;volatile
  6392  0141  390F               	andlw	15
  6393  0142  3E98               	addlw	152
  6394  0143  00E8               	movwf	??_USBStdFeatureReqHandler
  6395  0144  01E9               	clrf	??_USBStdFeatureReqHandler+1
  6396  0145  300E               	movlw	14
  6397  0146  3DE9               	addwfc	??_USBStdFeatureReqHandler+1,f
  6398  0147  0868               	movf	??_USBStdFeatureReqHandler,w
  6399  0148  00EA               	movwf	USBStdFeatureReqHandler@pUEP
  6400  0149  0869               	movf	??_USBStdFeatureReqHandler+1,w
  6401  014A  00EB               	movwf	USBStdFeatureReqHandler@pUEP+1
  6402                           
  6403                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
  6404  014B  30FE               	movlw	254
  6405  014C  00E8               	movwf	??_USBStdFeatureReqHandler
  6406  014D  086A               	movf	USBStdFeatureReqHandler@pUEP,w
  6407  014E  0086               	movwf	6
  6408  014F  086B               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6409  0150  0087               	movwf	7
  6410  0151  0868               	movf	??_USBStdFeatureReqHandler,w
  6411  0152  0581               	andwf	1,f
  6412  0153  0008               	return
  6413  0154                     __end_of_USBStdFeatureReqHandler:	
  6414                           
  6415                           	psect	text27
  6416  0CF3                     __ptext27:	
  6417 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6418 ;; Defined at:
  6419 ;;		line 839 in file "../main.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  event           2    3[BANK0 ] int 
  6422 ;;  pdata           1    5[BANK0 ] PTR void 
  6423 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  6424 ;;  size            2    6[BANK0 ] unsigned short 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      enum E3
  6429 ;; Registers used:
  6430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6436 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;Total ram usage:        5 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    4
  6443 ;; This function calls:
  6444 ;;		_USBCBCheckOtherReq
  6445 ;;		_USBCBErrorHandler
  6446 ;;		_USBCBInitEP
  6447 ;;		_USBCBStdSetDscHandler
  6448 ;;		_USBCBSuspend
  6449 ;;		_USBCBWakeFromSuspend
  6450 ;;		_USBCB_SOF_Handler
  6451 ;; This function is called by:
  6452 ;;		_USBDeviceTasks
  6453 ;;		_USBStdSetCfgHandler
  6454 ;;		_USBSuspend
  6455 ;;		_USBWakeFromSuspend
  6456 ;;		_USBCtrlTrfSetupHandler
  6457 ;;		_USBCheckStdRequest
  6458 ;;		_USBStdFeatureReqHandler
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           
  6463                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6464  0CF3                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6465                           
  6466                           ;main.c: 841: switch( event )
  6467                           
  6468                           ;incstack = 0
  6469                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6470  0CF3  2D09               	goto	i1l2662
  6471  0CF4                     i1l2646:	
  6472                           ;main.c: 846: case EVENT_SOF:
  6473                           
  6474                           ;main.c: 845: break;
  6475                           
  6476                           ;main.c: 842: {
  6477                           ;main.c: 843: case EVENT_TRANSFER:
  6478                           
  6479                           
  6480                           ;main.c: 847: USBCB_SOF_Handler();
  6481  0CF4  3180  2003         	fcall	_USBCB_SOF_Handler
  6482                           
  6483                           ;main.c: 848: break;
  6484  0CF6  0008               	return
  6485  0CF7                     i1l2648:	
  6486                           ;main.c: 849: case EVENT_SUSPEND:
  6487                           
  6488                           
  6489                           ;main.c: 850: USBCBSuspend();
  6490  0CF7  318B  2355         	fcall	_USBCBSuspend
  6491                           
  6492                           ;main.c: 851: break;
  6493  0CF9  0008               	return
  6494  0CFA                     i1l2650:	
  6495                           ;main.c: 852: case EVENT_RESUME:
  6496                           
  6497                           
  6498                           ;main.c: 853: USBCBWakeFromSuspend();
  6499  0CFA  3180  2002         	fcall	_USBCBWakeFromSuspend
  6500                           
  6501                           ;main.c: 854: break;
  6502  0CFC  0008               	return
  6503  0CFD                     i1l2652:	
  6504                           ;main.c: 855: case EVENT_CONFIGURED:
  6505                           
  6506                           
  6507                           ;main.c: 856: USBCBInitEP();
  6508  0CFD  318B  2359         	fcall	_USBCBInitEP
  6509                           
  6510                           ;main.c: 857: break;
  6511  0CFF  0008               	return
  6512  0D00                     i1l2654:	
  6513                           ;main.c: 858: case EVENT_SET_DESCRIPTOR:
  6514                           
  6515                           
  6516                           ;main.c: 859: USBCBStdSetDscHandler();
  6517  0D00  318B  2354         	fcall	_USBCBStdSetDscHandler
  6518                           
  6519                           ;main.c: 860: break;
  6520  0D02  0008               	return
  6521  0D03                     i1l2656:	
  6522                           ;main.c: 861: case EVENT_EP0_REQUEST:
  6523                           
  6524                           
  6525                           ;main.c: 862: USBCBCheckOtherReq();
  6526  0D03  318B  2356         	fcall	_USBCBCheckOtherReq
  6527                           
  6528                           ;main.c: 863: break;
  6529  0D05  0008               	return
  6530  0D06                     i1l2658:	
  6531                           ;main.c: 864: case EVENT_BUS_ERROR:
  6532                           
  6533                           
  6534                           ;main.c: 865: USBCBErrorHandler();
  6535  0D06  318B  2353         	fcall	_USBCBErrorHandler
  6536                           
  6537                           ;main.c: 879: }
  6538                           
  6539                           ;main.c: 878: break;
  6540                           
  6541                           ;main.c: 877: default:
  6542                           
  6543                           ;main.c: 876: break;
  6544                           
  6545                           ;main.c: 867: case EVENT_TRANSFER_TERMINATED:
  6546                           
  6547                           ;main.c: 866: break;
  6548  0D08  0008               	return
  6549  0D09                     i1l2662:	
  6550                           
  6551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6552                           ; Switch size 1, requested type "space"
  6553                           ; Number of cases is 2, Range of values is 0 to 127
  6554                           ; switch strategies available:
  6555                           ; Name         Instructions Cycles
  6556                           ; simple_byte            7     4 (average)
  6557                           ; direct_byte          262     6 (fixed)
  6558                           ; jumptable            260     6 (fixed)
  6559                           ;	Chosen strategy is simple_byte
  6560  0D09  0020               	movlb	0	; select bank0
  6561  0D0A  0864               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6562  0D0B  3A00               	xorlw	0	; case 0
  6563  0D0C  1903               	skipnz
  6564  0D0D  2D12               	goto	i1l4250
  6565  0D0E  3A7F               	xorlw	127	; case 127
  6566  0D0F  1903               	skipnz
  6567  0D10  2D2C               	goto	i1l4252
  6568  0D11  2D31               	goto	i1l678
  6569  0D12                     i1l4250:	
  6570                           
  6571                           ; Switch size 1, requested type "space"
  6572                           ; Number of cases is 8, Range of values is 1 to 117
  6573                           ; switch strategies available:
  6574                           ; Name         Instructions Cycles
  6575                           ; simple_byte           25    13 (average)
  6576                           ; direct_byte          243     9 (fixed)
  6577                           ; jumptable            263     9 (fixed)
  6578                           ;	Chosen strategy is simple_byte
  6579  0D12  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6580  0D13  3A01               	xorlw	1	; case 1
  6581  0D14  1903               	skipnz
  6582  0D15  2CFD               	goto	i1l2652
  6583  0D16  3A03               	xorlw	3	; case 2
  6584  0D17  1903               	skipnz
  6585  0D18  2D00               	goto	i1l2654
  6586  0D19  3A01               	xorlw	1	; case 3
  6587  0D1A  1903               	skipnz
  6588  0D1B  2D03               	goto	i1l2656
  6589  0D1C  3A06               	xorlw	6	; case 5
  6590  0D1D  1903               	skipnz
  6591  0D1E  2D31               	goto	i1l678
  6592  0D1F  3A77               	xorlw	119	; case 114
  6593  0D20  1903               	skipnz
  6594  0D21  2D31               	goto	i1l678
  6595  0D22  3A01               	xorlw	1	; case 115
  6596  0D23  1903               	skipnz
  6597  0D24  2CF4               	goto	i1l2646
  6598  0D25  3A07               	xorlw	7	; case 116
  6599  0D26  1903               	skipnz
  6600  0D27  2CFA               	goto	i1l2650
  6601  0D28  3A01               	xorlw	1	; case 117
  6602  0D29  1903               	skipnz
  6603  0D2A  2CF7               	goto	i1l2648
  6604  0D2B  2D31               	goto	i1l678
  6605  0D2C                     i1l4252:	
  6606                           
  6607                           ; Switch size 1, requested type "space"
  6608                           ; Number of cases is 1, Range of values is 255 to 255
  6609                           ; switch strategies available:
  6610                           ; Name         Instructions Cycles
  6611                           ; simple_byte            4     3 (average)
  6612                           ; direct_byte            7     5 (fixed)
  6613                           ; jumptable            263     9 (fixed)
  6614                           ;	Chosen strategy is simple_byte
  6615  0D2C  0863               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6616  0D2D  3AFF               	xorlw	255	; case 255
  6617  0D2E  1903               	skipnz
  6618  0D2F  2D06               	goto	i1l2658
  6619  0D30  2D31               	goto	i1l678
  6620  0D31                     i1l678:	
  6621                           ;main.c: 880: return TRUE;
  6622                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6623                           
  6624  0D31  0008               	return
  6625  0D32                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6626                           
  6627                           	psect	text28
  6628  0003                     __ptext28:	
  6629 ;; *************** function _USBCB_SOF_Handler *****************
  6630 ;; Defined at:
  6631 ;;		line 520 in file "../main.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		None
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function _USBCB_SOF_Handler
  6660  0003                     _USBCB_SOF_Handler:	
  6661                           
  6662                           ;incstack = 0
  6663                           ; Regs used in _USBCB_SOF_Handler: []
  6664  0003  0008               	return
  6665  0004                     __end_of_USBCB_SOF_Handler:	
  6666                           
  6667                           	psect	text29
  6668  0002                     __ptext29:	
  6669 ;; *************** function _USBCBWakeFromSuspend *****************
  6670 ;; Defined at:
  6671 ;;		line 488 in file "../main.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		None
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6695 ;;		_USBCBSendResume
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _USBCBWakeFromSuspend
  6701  0002                     _USBCBWakeFromSuspend:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _USBCBWakeFromSuspend: []
  6705  0002  0008               	return
  6706  0003                     __end_of_USBCBWakeFromSuspend:	
  6707                           
  6708                           	psect	text30
  6709  0B55                     __ptext30:	
  6710 ;; *************** function _USBCBSuspend *****************
  6711 ;; Defined at:
  6712 ;;		line 444 in file "../main.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		None
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; This function calls:
  6733 ;;		Nothing
  6734 ;; This function is called by:
  6735 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function _USBCBSuspend
  6741  0B55                     _USBCBSuspend:	
  6742                           
  6743                           ;incstack = 0
  6744                           ; Regs used in _USBCBSuspend: []
  6745  0B55  0008               	return
  6746  0B56                     __end_of_USBCBSuspend:	
  6747                           
  6748                           	psect	text31
  6749  0B54                     __ptext31:	
  6750 ;; *************** function _USBCBStdSetDscHandler *****************
  6751 ;; Defined at:
  6752 ;;		line 617 in file "../main.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		None
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           
  6780                           ;psect for function _USBCBStdSetDscHandler
  6781  0B54                     _USBCBStdSetDscHandler:	
  6782                           
  6783                           ;incstack = 0
  6784                           ; Regs used in _USBCBStdSetDscHandler: []
  6785  0B54  0008               	return
  6786  0B55                     __end_of_USBCBStdSetDscHandler:	
  6787                           
  6788                           	psect	text32
  6789  0B59                     __ptext32:	
  6790 ;; *************** function _USBCBInitEP *****************
  6791 ;; Defined at:
  6792 ;;		line 642 in file "../main.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    3
  6813 ;; This function calls:
  6814 ;;		_CDCInitEP
  6815 ;; This function is called by:
  6816 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function _USBCBInitEP
  6822  0B59                     _USBCBInitEP:	
  6823                           
  6824                           ;main.c: 645: CDCInitEP();
  6825                           
  6826                           ;incstack = 0
  6827                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6828  0B59  318C  247D         	fcall	_CDCInitEP
  6829  0B5B  0008               	return
  6830  0B5C                     __end_of_USBCBInitEP:	
  6831                           
  6832                           	psect	text33
  6833  0C7D                     __ptext33:	
  6834 ;; *************** function _CDCInitEP *****************
  6835 ;; Defined at:
  6836 ;;		line 414 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;Total ram usage:        3 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    2
  6857 ;; This function calls:
  6858 ;;		_USBEnableEndpoint
  6859 ;;		i1_USBTransferOnePacket
  6860 ;; This function is called by:
  6861 ;;		_USBCBInitEP
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           
  6866                           ;psect for function _CDCInitEP
  6867  0C7D                     _CDCInitEP:	
  6868                           
  6869                           ;usb_function_cdc.c: 417: line_coding.dwDTERate.Val = 19200;
  6870                           
  6871                           ;incstack = 0
  6872                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6873  0C7D  3000               	movlw	0
  6874  0C7E  0022               	movlb	2	; select bank2
  6875  0C7F  00A3               	movwf	35
  6876  0C80  3000               	movlw	0
  6877  0C81  00A2               	movwf	34
  6878  0C82  304B               	movlw	75
  6879  0C83  00A1               	movwf	33
  6880  0C84  3000               	movlw	0
  6881  0C85  00A0               	movwf	32
  6882                           
  6883                           ;usb_function_cdc.c: 418: line_coding.bCharFormat = 0x00;
  6884  0C86  01A4               	clrf	36
  6885                           
  6886                           ;usb_function_cdc.c: 419: line_coding.bParityType = 0x00;
  6887  0C87  01A5               	clrf	37
  6888                           
  6889                           ;usb_function_cdc.c: 420: line_coding.bDataBits = 0x08;
  6890  0C88  3008               	movlw	8
  6891  0C89  0020               	movlb	0	; select bank0
  6892  0C8A  00E0               	movwf	??_CDCInitEP
  6893  0C8B  0860               	movf	??_CDCInitEP,w
  6894  0C8C  0022               	movlb	2	; select bank2
  6895  0C8D  00A6               	movwf	38
  6896                           
  6897                           ;usb_function_cdc.c: 422: cdc_rx_len = 0;
  6898  0C8E  0021               	movlb	1	; select bank1
  6899  0C8F  01BE               	clrf	_cdc_rx_len^(0+128)
  6900                           
  6901                           ;usb_function_cdc.c: 435: USBEnableEndpoint(1,0x02|0x10|0x08);
  6902  0C90  301A               	movlw	26
  6903  0C91  0020               	movlb	0	; select bank0
  6904  0C92  00E0               	movwf	??_CDCInitEP
  6905  0C93  0860               	movf	??_CDCInitEP,w
  6906  0C94  00F7               	movwf	USBEnableEndpoint@options
  6907  0C95  3001               	movlw	1
  6908  0C96  318C  2400  318C   	fcall	_USBEnableEndpoint
  6909                           
  6910                           ;usb_function_cdc.c: 436: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  6911  0C99  301E               	movlw	30
  6912  0C9A  0020               	movlb	0	; select bank0
  6913  0C9B  00E0               	movwf	??_CDCInitEP
  6914  0C9C  0860               	movf	??_CDCInitEP,w
  6915  0C9D  00F7               	movwf	USBEnableEndpoint@options
  6916  0C9E  3002               	movlw	2
  6917  0C9F  318C  2400  318C   	fcall	_USBEnableEndpoint
  6918                           
  6919                           ;usb_function_cdc.c: 438: CDCDataOutHandle = USBTransferOnePacket(2,0,(BYTE*)&cdc_data_r
      +                          x,sizeof(cdc_data_rx));
  6920  0CA2  01F0               	clrf	i1USBTransferOnePacket@dir
  6921  0CA3  30A0               	movlw	160
  6922  0CA4  0020               	movlb	0	; select bank0
  6923  0CA5  00E0               	movwf	??_CDCInitEP
  6924  0CA6  0860               	movf	??_CDCInitEP,w
  6925  0CA7  00F1               	movwf	i1USBTransferOnePacket@data
  6926  0CA8  3040               	movlw	64
  6927  0CA9  00E1               	movwf	??_CDCInitEP+1
  6928  0CAA  0861               	movf	??_CDCInitEP+1,w
  6929  0CAB  00F2               	movwf	i1USBTransferOnePacket@len
  6930  0CAC  3002               	movlw	2
  6931  0CAD  318D  2532         	fcall	i1_USBTransferOnePacket
  6932  0CAF  0020               	movlb	0	; select bank0
  6933  0CB0  00E2               	movwf	??_CDCInitEP+2
  6934  0CB1  0862               	movf	??_CDCInitEP+2,w
  6935  0CB2  0021               	movlb	1	; select bank1
  6936  0CB3  00BA               	movwf	_CDCDataOutHandle^(0+128)
  6937                           
  6938                           ;usb_function_cdc.c: 439: CDCDataInHandle = (0);
  6939  0CB4  01B9               	clrf	_CDCDataInHandle^(0+128)
  6940                           
  6941                           ;usb_function_cdc.c: 466: cdc_trf_state = 0;
  6942  0CB5  01BD               	clrf	_cdc_trf_state^(0+128)
  6943  0CB6  0008               	return
  6944  0CB7                     __end_of_CDCInitEP:	
  6945                           
  6946                           	psect	text34
  6947  0D32                     __ptext34:	
  6948 ;; *************** function i1_USBTransferOnePacket *****************
  6949 ;; Defined at:
  6950 ;;		line 1172 in file "../Microchip/USB/usb_device.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  ep              1    wreg     unsigned char 
  6953 ;;  dir             1    0[COMMON] unsigned char 
  6954 ;;  data            1    1[COMMON] PTR unsigned char 
  6955 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6956 ;;  len             1    2[COMMON] unsigned char 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  ep              1    5[COMMON] unsigned char 
  6959 ;;  USBTransferO    1    6[COMMON] PTR volatile struct __BD
  6960 ;;		 -> NULL(0), BDT(48), 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      PTR void 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;Total ram usage:        7 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_CDCInitEP
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function i1_USBTransferOnePacket
  6985  0D32                     i1_USBTransferOnePacket:	
  6986                           
  6987                           ;incstack = 0
  6988                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  6989                           ;i1USBTransferOnePacket@ep stored from wreg
  6990  0D32  00F5               	movwf	i1USBTransferOnePacket@ep
  6991                           
  6992                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
  6993                           ;usb_device.c: 1177: if(dir != 0)
  6994  0D33  0870               	movf	i1USBTransferOnePacket@dir,w
  6995  0D34  1903               	btfsc	3,2
  6996  0D35  2D39               	goto	i1l2550
  6997                           
  6998                           ;usb_device.c: 1178: {
  6999                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
  7000  0D36  0875               	movf	i1USBTransferOnePacket@ep,w
  7001  0D37  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7002  0D38  2D3B               	goto	L13
  7003  0D39                     i1l2550:	
  7004                           ;usb_device.c: 1181: }
  7005                           
  7006                           
  7007                           ;usb_device.c: 1182: else
  7008                           ;usb_device.c: 1183: {
  7009                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
  7010  0D39  0875               	movf	i1USBTransferOnePacket@ep,w
  7011  0D3A  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  7012  0D3B                     L13:	
  7013  0D3B  0086               	movwf	6
  7014  0D3C  0187               	clrf	7
  7015  0D3D  0801               	movf	1,w
  7016  0D3E  00F3               	movwf	??i1_USBTransferOnePacket
  7017  0D3F  0873               	movf	??i1_USBTransferOnePacket,w
  7018  0D40  00F6               	movwf	i1USBTransferOnePacket@handle
  7019                           
  7020                           ;usb_device.c: 1186: }
  7021                           ;usb_device.c: 1190: if(handle == 0)
  7022  0D41  0876               	movf	i1USBTransferOnePacket@handle,w
  7023  0D42  1D03               	btfss	3,2
  7024  0D43  2D46               	goto	i1l2558
  7025                           
  7026                           ;usb_device.c: 1191: {
  7027                           ;usb_device.c: 1192: return 0;
  7028  0D44  3000               	movlw	0
  7029  0D45  0008               	return
  7030  0D46                     i1l2558:	
  7031                           
  7032                           ;usb_device.c: 1193: }
  7033                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
  7034  0D46  0871               	movf	i1USBTransferOnePacket@data,w
  7035  0D47  00F3               	movwf	??i1_USBTransferOnePacket
  7036  0D48  3002               	movlw	2
  7037  0D49  00F4               	movwf	??i1_USBTransferOnePacket+1
  7038  0D4A  0876               	movf	i1USBTransferOnePacket@handle,w
  7039  0D4B  3E02               	addlw	2
  7040  0D4C  0086               	movwf	6
  7041  0D4D  0187               	clrf	7
  7042  0D4E  0873               	movf	??i1_USBTransferOnePacket,w
  7043  0D4F  3FC0               	movwi [0]fsr1
  7044  0D50  0874               	movf	??i1_USBTransferOnePacket+1,w
  7045  0D51  3FC1               	movwi [1]fsr1
  7046                           
  7047                           ;usb_device.c: 1207: handle->CNT = len;
  7048  0D52  0872               	movf	i1USBTransferOnePacket@len,w
  7049  0D53  00F3               	movwf	??i1_USBTransferOnePacket
  7050  0D54  0A76               	incf	i1USBTransferOnePacket@handle,w
  7051  0D55  0086               	movwf	6
  7052  0D56  0187               	clrf	7
  7053  0D57  0873               	movf	??i1_USBTransferOnePacket,w
  7054  0D58  0081               	movwf	1
  7055                           
  7056                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
  7057  0D59  3040               	movlw	64
  7058  0D5A  00F3               	movwf	??i1_USBTransferOnePacket
  7059  0D5B  0876               	movf	i1USBTransferOnePacket@handle,w
  7060  0D5C  0086               	movwf	6
  7061  0D5D  0187               	clrf	7
  7062  0D5E  0873               	movf	??i1_USBTransferOnePacket,w
  7063  0D5F  0581               	andwf	1,f
  7064                           
  7065                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
  7066  0D60  3088               	movlw	136
  7067  0D61  00F3               	movwf	??i1_USBTransferOnePacket
  7068  0D62  0876               	movf	i1USBTransferOnePacket@handle,w
  7069  0D63  0086               	movwf	6
  7070  0D64  0187               	clrf	7
  7071  0D65  0873               	movf	??i1_USBTransferOnePacket,w
  7072  0D66  0481               	iorwf	1,f
  7073                           
  7074                           ;usb_device.c: 1212: if(dir != 0)
  7075  0D67  0870               	movf	i1USBTransferOnePacket@dir,w
  7076  0D68  1903               	btfsc	3,2
  7077  0D69  2D6F               	goto	i1l2570
  7078                           
  7079                           ;usb_device.c: 1213: {
  7080                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
  7081  0D6A  3004               	movlw	4
  7082  0D6B  00F3               	movwf	??i1_USBTransferOnePacket
  7083  0D6C  0875               	movf	i1USBTransferOnePacket@ep,w
  7084  0D6D  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7085  0D6E  2D73               	goto	L14
  7086  0D6F                     i1l2570:	
  7087                           ;usb_device.c: 1216: }
  7088                           
  7089                           
  7090                           ;usb_device.c: 1217: else
  7091                           ;usb_device.c: 1218: {
  7092                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
  7093  0D6F  3004               	movlw	4
  7094  0D70  00F3               	movwf	??i1_USBTransferOnePacket
  7095  0D71  0875               	movf	i1USBTransferOnePacket@ep,w
  7096  0D72  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  7097  0D73                     L14:	
  7098  0D73  0086               	movwf	6
  7099  0D74  0187               	clrf	7
  7100  0D75  0873               	movf	??i1_USBTransferOnePacket,w
  7101  0D76  0681               	xorwf	1,f
  7102                           
  7103                           ;usb_device.c: 1221: }
  7104                           ;usb_device.c: 1222: return (void*)handle;
  7105  0D77  0876               	movf	i1USBTransferOnePacket@handle,w
  7106  0D78  0008               	return
  7107  0D79                     __end_ofi1_USBTransferOnePacket:	
  7108                           
  7109                           	psect	text35
  7110  0C00                     __ptext35:	
  7111 ;; *************** function _USBEnableEndpoint *****************
  7112 ;; Defined at:
  7113 ;;		line 1055 in file "../Microchip/USB/usb_device.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  ep              1    wreg     unsigned char 
  7116 ;;  options         1    7[COMMON] unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  ep              1   12[COMMON] unsigned char 
  7119 ;;  p               2   10[COMMON] PTR unsigned char 
  7120 ;;		 -> UEP0(1), 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7130 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;Total ram usage:        6 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    1
  7137 ;; This function calls:
  7138 ;;		_USBConfigureEndpoint
  7139 ;; This function is called by:
  7140 ;;		_CDCInitEP
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           
  7145                           ;psect for function _USBEnableEndpoint
  7146  0C00                     _USBEnableEndpoint:	
  7147                           
  7148                           ;incstack = 0
  7149                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7150                           ;USBEnableEndpoint@ep stored from wreg
  7151  0C00  00FC               	movwf	USBEnableEndpoint@ep
  7152                           
  7153                           ;usb_device.c: 1057: unsigned char* p;
  7154                           ;usb_device.c: 1061: if(options & 0x04)
  7155  0C01  1D77               	btfss	USBEnableEndpoint@options,2
  7156  0C02  2C08               	goto	i1l2538
  7157                           
  7158                           ;usb_device.c: 1062: {
  7159                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
  7160  0C03  01F0               	clrf	USBConfigureEndpoint@direction
  7161  0C04  087C               	movf	USBEnableEndpoint@ep,w
  7162  0C05  318C  24B7  318C   	fcall	_USBConfigureEndpoint
  7163  0C08                     i1l2538:	
  7164                           
  7165                           ;usb_device.c: 1064: }
  7166                           ;usb_device.c: 1065: if(options & 0x02)
  7167  0C08  1CF7               	btfss	USBEnableEndpoint@options,1
  7168  0C09  2C0F               	goto	i1l2542
  7169                           
  7170                           ;usb_device.c: 1066: {
  7171                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
  7172  0C0A  01F0               	clrf	USBConfigureEndpoint@direction
  7173  0C0B  0AF0               	incf	USBConfigureEndpoint@direction,f
  7174  0C0C  087C               	movf	USBEnableEndpoint@ep,w
  7175  0C0D  318C  24B7         	fcall	_USBConfigureEndpoint
  7176  0C0F                     i1l2542:	
  7177                           
  7178                           ;usb_device.c: 1068: }
  7179                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
  7180  0C0F  087C               	movf	USBEnableEndpoint@ep,w
  7181  0C10  3E98               	addlw	152
  7182  0C11  00F8               	movwf	??_USBEnableEndpoint
  7183  0C12  01F9               	clrf	??_USBEnableEndpoint+1
  7184  0C13  300E               	movlw	14
  7185  0C14  3DF9               	addwfc	??_USBEnableEndpoint+1,f
  7186  0C15  0878               	movf	??_USBEnableEndpoint,w
  7187  0C16  00FA               	movwf	USBEnableEndpoint@p
  7188  0C17  0879               	movf	??_USBEnableEndpoint+1,w
  7189  0C18  00FB               	movwf	USBEnableEndpoint@p+1
  7190                           
  7191                           ;usb_device.c: 1078: *p = options;
  7192  0C19  087A               	movf	USBEnableEndpoint@p,w
  7193  0C1A  0086               	movwf	6
  7194  0C1B  087B               	movf	USBEnableEndpoint@p+1,w
  7195  0C1C  0087               	movwf	7
  7196  0C1D  0877               	movf	USBEnableEndpoint@options,w
  7197  0C1E  0081               	movwf	1
  7198  0C1F  0008               	return
  7199  0C20                     __end_of_USBEnableEndpoint:	
  7200                           
  7201                           	psect	text36
  7202  0CB7                     __ptext36:	
  7203 ;; *************** function _USBConfigureEndpoint *****************
  7204 ;; Defined at:
  7205 ;;		line 1712 in file "../Microchip/USB/usb_device.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  EPNum           1    wreg     unsigned char 
  7208 ;;  direction       1    0[COMMON] unsigned char 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  EPNum           1    5[COMMON] unsigned char 
  7211 ;;  handle          1    6[COMMON] PTR volatile struct __BD
  7212 ;;		 -> BDT(48), 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;Total ram usage:        7 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_USBEnableEndpoint
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           
  7236                           ;psect for function _USBConfigureEndpoint
  7237  0CB7                     _USBConfigureEndpoint:	
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7241                           ;USBConfigureEndpoint@EPNum stored from wreg
  7242  0CB7  00F5               	movwf	USBConfigureEndpoint@EPNum
  7243                           
  7244                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
  7245                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
  7246  0CB8  3020               	movlw	32
  7247  0CB9  00F1               	movwf	??_USBConfigureEndpoint
  7248  0CBA  0871               	movf	??_USBConfigureEndpoint,w
  7249  0CBB  00F6               	movwf	USBConfigureEndpoint@handle
  7250                           
  7251                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
  7252  0CBC  0870               	movf	USBConfigureEndpoint@direction,w
  7253  0CBD  00F1               	movwf	??_USBConfigureEndpoint
  7254  0CBE  3001               	movlw	1
  7255  0CBF                     u181_25:	
  7256  0CBF  35F1               	lslf	??_USBConfigureEndpoint,f
  7257  0CC0  0B89               	decfsz	9,f
  7258  0CC1  2CBF               	goto	u181_25
  7259  0CC2  0875               	movf	USBConfigureEndpoint@EPNum,w
  7260  0CC3  00F2               	movwf	??_USBConfigureEndpoint+1
  7261  0CC4  3001               	movlw	1
  7262  0CC5                     u182_25:	
  7263  0CC5  35F2               	lslf	??_USBConfigureEndpoint+1,f
  7264  0CC6  3EFF               	addlw	-1
  7265  0CC7  1D03               	skipz
  7266  0CC8  2CC5               	goto	u182_25
  7267  0CC9  3572               	lslf	??_USBConfigureEndpoint+1,w
  7268  0CCA  0771               	addwf	??_USBConfigureEndpoint,w
  7269  0CCB  00F3               	movwf	??_USBConfigureEndpoint+2
  7270  0CCC  3001               	movlw	1
  7271  0CCD                     u183_25:	
  7272  0CCD  35F3               	lslf	??_USBConfigureEndpoint+2,f
  7273  0CCE  3EFF               	addlw	-1
  7274  0CCF  1D03               	skipz
  7275  0CD0  2CCD               	goto	u183_25
  7276  0CD1  3573               	lslf	??_USBConfigureEndpoint+2,w
  7277  0CD2  00F4               	movwf	??_USBConfigureEndpoint+3
  7278  0CD3  0874               	movf	??_USBConfigureEndpoint+3,w
  7279  0CD4  07F6               	addwf	USBConfigureEndpoint@handle,f
  7280                           
  7281                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
  7282  0CD5  0876               	movf	USBConfigureEndpoint@handle,w
  7283  0CD6  0086               	movwf	6
  7284  0CD7  0187               	clrf	7
  7285  0CD8  1381               	bcf	1,7
  7286                           
  7287                           ;usb_device.c: 1726: if(direction == 0)
  7288  0CD9  0870               	movf	USBConfigureEndpoint@direction,w
  7289  0CDA  1D03               	btfss	3,2
  7290  0CDB  2CE1               	goto	i1l2528
  7291                           
  7292                           ;usb_device.c: 1727: {
  7293                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
  7294  0CDC  0876               	movf	USBConfigureEndpoint@handle,w
  7295  0CDD  00F1               	movwf	??_USBConfigureEndpoint
  7296  0CDE  0875               	movf	USBConfigureEndpoint@EPNum,w
  7297  0CDF  3EB5               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  7298  0CE0  2CE5               	goto	L15
  7299  0CE1                     i1l2528:	
  7300                           ;usb_device.c: 1729: }
  7301                           
  7302                           
  7303                           ;usb_device.c: 1730: else
  7304                           ;usb_device.c: 1731: {
  7305                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
  7306  0CE1  0876               	movf	USBConfigureEndpoint@handle,w
  7307  0CE2  00F1               	movwf	??_USBConfigureEndpoint
  7308  0CE3  0875               	movf	USBConfigureEndpoint@EPNum,w
  7309  0CE4  3EB2               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7310  0CE5                     L15:	
  7311  0CE5  0086               	movwf	6
  7312  0CE6  0187               	clrf	7
  7313  0CE7  0871               	movf	??_USBConfigureEndpoint,w
  7314  0CE8  0081               	movwf	1
  7315                           
  7316                           ;usb_device.c: 1733: }
  7317                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
  7318  0CE9  0876               	movf	USBConfigureEndpoint@handle,w
  7319  0CEA  0086               	movwf	6
  7320  0CEB  0187               	clrf	7
  7321  0CEC  1301               	bcf	1,6
  7322                           
  7323                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
  7324  0CED  0876               	movf	USBConfigureEndpoint@handle,w
  7325  0CEE  3E04               	addlw	4
  7326  0CEF  0086               	movwf	6
  7327  0CF0  0187               	clrf	7
  7328  0CF1  1701               	bsf	1,6
  7329  0CF2  0008               	return
  7330  0CF3                     __end_of_USBConfigureEndpoint:	
  7331                           
  7332                           	psect	text37
  7333  0B53                     __ptext37:	
  7334 ;; *************** function _USBCBErrorHandler *****************
  7335 ;; Defined at:
  7336 ;;		line 543 in file "../main.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		None
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;Total ram usage:        0 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _USBCBErrorHandler
  7365  0B53                     _USBCBErrorHandler:	
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _USBCBErrorHandler: []
  7369  0B53  0008               	return
  7370  0B54                     __end_of_USBCBErrorHandler:	
  7371                           
  7372                           	psect	text38
  7373  0B56                     __ptext38:	
  7374 ;; *************** function _USBCBCheckOtherReq *****************
  7375 ;; Defined at:
  7376 ;;		line 593 in file "../main.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    1
  7397 ;; This function calls:
  7398 ;;		_USBCheckCDCRequest
  7399 ;; This function is called by:
  7400 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _USBCBCheckOtherReq
  7406  0B56                     _USBCBCheckOtherReq:	
  7407                           
  7408                           ;main.c: 595: USBCheckCDCRequest();
  7409                           
  7410                           ;incstack = 0
  7411                           ; Regs used in _USBCBCheckOtherReq: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7412  0B56  3187  2781         	fcall	_USBCheckCDCRequest
  7413  0B58  0008               	return
  7414  0B59                     __end_of_USBCBCheckOtherReq:	
  7415                           
  7416                           	psect	text39
  7417  0781                     __ptext39:	
  7418 ;; *************** function _USBCheckCDCRequest *****************
  7419 ;; Defined at:
  7420 ;;		line 267 in file "../Microchip/USB/CDC_Device_Driver/usb_function_cdc.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;Total ram usage:        1 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_USBCBCheckOtherReq
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           
  7448                           ;psect for function _USBCheckCDCRequest
  7449  0781                     _USBCheckCDCRequest:	
  7450                           
  7451                           ;usb_function_cdc.c: 272: if(SetupPkt.Recipient != (0x01)) return;
  7452                           
  7453                           ;incstack = 0
  7454                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7455  0781  0020               	movlb	0	; select bank0
  7456  0782  0850               	movf	80,w	;volatile
  7457  0783  391F               	andlw	31
  7458  0784  3A01               	xorlw	1
  7459  0785  1D03               	btfss	3,2
  7460  0786  0008               	return
  7461                           
  7462                           ;usb_function_cdc.c: 277: if(SetupPkt.RequestType != (0x20>>5)) return;
  7463  0787  0E50               	swapf	80,w	;volatile
  7464  0788  0C89               	rrf	9,f
  7465  0789  3903               	andlw	3
  7466  078A  3A01               	xorlw	1
  7467  078B  1D03               	btfss	3,2
  7468  078C  0008               	return
  7469                           
  7470                           ;usb_function_cdc.c: 283: if((SetupPkt.bIntfID != 0x0)&&
  7471                           ;usb_function_cdc.c: 284: (SetupPkt.bIntfID != 0x01)) return;
  7472  078D  0854               	movf	84,w	;volatile
  7473  078E  1903               	btfsc	3,2
  7474  078F  2FCD               	goto	i1l2620
  7475  0790  0354               	decf	84,w	;volatile
  7476  0791  1D03               	btfss	3,2
  7477  0792  0008               	return
  7478  0793  2FCD               	goto	i1l2620
  7479  0794                     i1l2590:	
  7480                           ;usb_function_cdc.c: 287: {
  7481                           ;usb_function_cdc.c: 289: case 0x00:
  7482                           
  7483                           ;usb_function_cdc.c: 286: switch(SetupPkt.bRequest)
  7484                           
  7485                           
  7486                           ;usb_function_cdc.c: 291: inPipes[0].pSrc.bRam = (BYTE*)&dummy_encapsulated_cmd_response
      +                          ;
  7487  0794  303F               	movlw	low _dummy_encapsulated_cmd_response
  7488  0795  0021               	movlb	1	; select bank1
  7489  0796  00A7               	movwf	_inPipes^(0+128)	;volatile
  7490  0797  3001               	movlw	high _dummy_encapsulated_cmd_response
  7491  0798  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7492                           
  7493                           ;usb_function_cdc.c: 292: inPipes[0].wCount.Val = 0x08;
  7494  0799  3000               	movlw	0
  7495  079A  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7496  079B  3008               	movlw	8
  7497  079C  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  7498                           
  7499                           ;usb_function_cdc.c: 293: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7500  079D  1429               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7501                           
  7502                           ;usb_function_cdc.c: 294: inPipes[0].info.bits.busy = 1;
  7503  079E  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7504                           
  7505                           ;usb_function_cdc.c: 295: break;
  7506  079F  0008               	return
  7507  07A0                     i1l2598:	
  7508                           ;usb_function_cdc.c: 296: case 0x01:
  7509                           
  7510                           
  7511                           ;usb_function_cdc.c: 298: inPipes[0].pSrc.bRam = (BYTE*)&dummy_encapsulated_cmd_response
      +                          ;
  7512  07A0  303F               	movlw	low _dummy_encapsulated_cmd_response
  7513  07A1  0021               	movlb	1	; select bank1
  7514  07A2  00A7               	movwf	_inPipes^(0+128)	;volatile
  7515  07A3  3001               	movlw	high _dummy_encapsulated_cmd_response
  7516  07A4  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7517                           
  7518                           ;usb_function_cdc.c: 299: inPipes[0].info.bits.busy = 1;
  7519  07A5  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7520                           
  7521                           ;usb_function_cdc.c: 300: break;
  7522  07A6  0008               	return
  7523  07A7                     i1l2602:	
  7524                           ;usb_function_cdc.c: 304: case 0x20:
  7525                           
  7526                           
  7527                           ;usb_function_cdc.c: 305: outPipes[0].wCount.Val = SetupPkt.wLength;
  7528  07A7  0020               	movlb	0	; select bank0
  7529  07A8  0857               	movf	87,w	;volatile
  7530  07A9  0021               	movlb	1	; select bank1
  7531  07AA  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  7532  07AB  0020               	movlb	0	; select bank0
  7533  07AC  0856               	movf	86,w	;volatile
  7534  07AD  0021               	movlb	1	; select bank1
  7535  07AE  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
  7536                           
  7537                           ;usb_function_cdc.c: 306: outPipes[0].pDst.bRam = (BYTE*)&line_coding._byte[0];
  7538  07AF  3020               	movlw	32
  7539  07B0  00F0               	movwf	??_USBCheckCDCRequest
  7540  07B1  0870               	movf	??_USBCheckCDCRequest,w
  7541  07B2  00A0               	movwf	_outPipes^(0+128)	;volatile
  7542                           
  7543                           ;usb_function_cdc.c: 307: outPipes[0].pFunc = (0);
  7544  07B3  01A5               	clrf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  7545  07B4  01A6               	clrf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  7546                           
  7547                           ;usb_function_cdc.c: 308: outPipes[0].info.bits.busy = 1;
  7548  07B5  17A2               	bsf	(_outPipes^(0+128)+2),7	;volatile
  7549                           
  7550                           ;usb_function_cdc.c: 309: break;
  7551  07B6  0008               	return
  7552  07B7                     i1l2608:	
  7553                           ;usb_function_cdc.c: 311: case 0x21:
  7554                           
  7555                           
  7556                           ;usb_function_cdc.c: 312: { inPipes[0].pSrc.bRam = (BYTE*)&line_coding; inPipes[0].wCoun
      +                          t.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7557  07B7  3020               	movlw	32
  7558  07B8  0021               	movlb	1	; select bank1
  7559  07B9  00A7               	movwf	_inPipes^(0+128)	;volatile
  7560  07BA  3001               	movlw	1
  7561  07BB  00A8               	movwf	(_inPipes+1)^(0+128)	;volatile
  7562  07BC  3000               	movlw	0
  7563  07BD  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7564  07BE  3007               	movlw	7
  7565  07BF  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  7566  07C0  30C1               	movlw	193
  7567  07C1  00F0               	movwf	??_USBCheckCDCRequest
  7568  07C2  0870               	movf	??_USBCheckCDCRequest,w
  7569  07C3  00A9               	movwf	(_inPipes^(0+128)+2)	;volatile
  7570                           
  7571                           ;usb_function_cdc.c: 316: break;
  7572  07C4  0008               	return
  7573  07C5                     i1l2614:	
  7574                           ;usb_function_cdc.c: 318: case 0x22:
  7575                           
  7576                           
  7577                           ;usb_function_cdc.c: 319: control_signal_bitmap._byte = (BYTE)SetupPkt.W_Value.v[0];
  7578  07C5  0020               	movlb	0	; select bank0
  7579  07C6  0852               	movf	82,w	;volatile
  7580  07C7  00F0               	movwf	??_USBCheckCDCRequest
  7581  07C8  0870               	movf	??_USBCheckCDCRequest,w
  7582  07C9  0021               	movlb	1	; select bank1
  7583  07CA  00B8               	movwf	_control_signal_bitmap^(0+128)
  7584                           
  7585                           ;usb_function_cdc.c: 351: inPipes[0].info.bits.busy = 1;
  7586  07CB  17A9               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7587                           
  7588                           ;usb_function_cdc.c: 378: }
  7589                           
  7590                           ;usb_function_cdc.c: 377: break;
  7591                           
  7592                           ;usb_function_cdc.c: 376: default:
  7593                           
  7594                           ;usb_function_cdc.c: 352: break;
  7595  07CC  0008               	return
  7596  07CD                     i1l2620:	
  7597  07CD  0020               	movlb	0	; select bank0
  7598  07CE  0851               	movf	81,w	;volatile
  7599                           
  7600                           ; Switch size 1, requested type "space"
  7601                           ; Number of cases is 5, Range of values is 0 to 34
  7602                           ; switch strategies available:
  7603                           ; Name         Instructions Cycles
  7604                           ; simple_byte           16     9 (average)
  7605                           ; direct_byte           76     6 (fixed)
  7606                           ; jumptable            260     6 (fixed)
  7607                           ;	Chosen strategy is simple_byte
  7608  07CF  3A00               	xorlw	0	; case 0
  7609  07D0  1903               	skipnz
  7610  07D1  2F94               	goto	i1l2590
  7611  07D2  3A01               	xorlw	1	; case 1
  7612  07D3  1903               	skipnz
  7613  07D4  2FA0               	goto	i1l2598
  7614  07D5  3A21               	xorlw	33	; case 32
  7615  07D6  1903               	skipnz
  7616  07D7  2FA7               	goto	i1l2602
  7617  07D8  3A01               	xorlw	1	; case 33
  7618  07D9  1903               	skipnz
  7619  07DA  2FB7               	goto	i1l2608
  7620  07DB  3A03               	xorlw	3	; case 34
  7621  07DC  1903               	skipnz
  7622  07DD  2FC5               	goto	i1l2614
  7623  07DE  2FDF               	goto	i1l420
  7624  07DF                     i1l420:	
  7625  07DF  0008               	return
  7626  07E0                     __end_of_USBCheckCDCRequest:	
  7627                           
  7628                           	psect	text40
  7629  0C20                     __ptext40:	
  7630 ;; *************** function _USBCtrlTrfOutHandler *****************
  7631 ;; Defined at:
  7632 ;;		line 2694 in file "../Microchip/USB/usb_device.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;Total ram usage:        2 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    2
  7653 ;; This function calls:
  7654 ;;		_USBCtrlTrfRxService
  7655 ;; This function is called by:
  7656 ;;		_USBCtrlEPService
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function _USBCtrlTrfOutHandler
  7662  0C20                     _USBCtrlTrfOutHandler:	
  7663                           
  7664                           ;usb_device.c: 2696: if(controlTransferState == 2)
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7668  0C20  3002               	movlw	2
  7669  0C21  0021               	movlb	1	; select bank1
  7670  0C22  064A               	xorwf	_controlTransferState^(0+128),w	;volatile
  7671  0C23  1D03               	btfss	3,2
  7672  0C24  2C28               	goto	i1l3154
  7673                           
  7674                           ;usb_device.c: 2697: {
  7675                           ;usb_device.c: 2698: USBCtrlTrfRxService();
  7676  0C25  3184  2414         	fcall	_USBCtrlTrfRxService
  7677                           
  7678                           ;usb_device.c: 2699: }
  7679  0C27  0008               	return
  7680  0C28                     i1l3154:	
  7681                           
  7682                           ;usb_device.c: 2700: else
  7683                           ;usb_device.c: 2701: {
  7684                           ;usb_device.c: 2704: controlTransferState = 0;
  7685  0C28  0021               	movlb	1	; select bank1
  7686  0C29  01CA               	clrf	_controlTransferState^(0+128)	;volatile
  7687                           
  7688                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
  7689  0C2A  0845               	movf	_BothEP0OutUOWNsSet^(0+128),w	;volatile
  7690  0C2B  1D03               	btfss	3,2
  7691  0C2C  2C48               	goto	i1l3164
  7692                           
  7693                           ;usb_device.c: 2712: {
  7694                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
  7695  0C2D  3008               	movlw	8
  7696  0C2E  00F8               	movwf	??_USBCtrlTrfOutHandler
  7697  0C2F  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  7698  0C30  0086               	movwf	6
  7699  0C31  0187               	clrf	7
  7700  0C32  0878               	movf	??_USBCtrlTrfOutHandler,w
  7701  0C33  0081               	movwf	1
  7702                           
  7703                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  7704  0C34  3050               	movlw	80
  7705  0C35  00F8               	movwf	??_USBCtrlTrfOutHandler
  7706  0C36  3000               	movlw	0
  7707  0C37  00F9               	movwf	??_USBCtrlTrfOutHandler+1
  7708  0C38  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7709  0C39  3E02               	addlw	2
  7710  0C3A  0086               	movwf	6
  7711  0C3B  0187               	clrf	7
  7712  0C3C  0878               	movf	??_USBCtrlTrfOutHandler,w
  7713  0C3D  3FC0               	movwi [0]fsr1
  7714  0C3E  0879               	movf	??_USBCtrlTrfOutHandler+1,w
  7715  0C3F  3FC1               	movwi [1]fsr1
  7716                           
  7717                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
  7718  0C40  308C               	movlw	140
  7719  0C41  00F8               	movwf	??_USBCtrlTrfOutHandler
  7720  0C42  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7721  0C43  0086               	movwf	6
  7722  0C44  0187               	clrf	7
  7723  0C45  0878               	movf	??_USBCtrlTrfOutHandler,w
  7724  0C46  0081               	movwf	1
  7725                           
  7726                           ;usb_device.c: 2716: }
  7727  0C47  0008               	return
  7728  0C48                     i1l3164:	
  7729                           
  7730                           ;usb_device.c: 2717: else
  7731                           ;usb_device.c: 2718: {
  7732                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
  7733  0C48  01C5               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  7734  0C49  0008               	return
  7735  0C4A                     __end_of_USBCtrlTrfOutHandler:	
  7736                           
  7737                           	psect	text41
  7738  0414                     __ptext41:	
  7739 ;; *************** function _USBCtrlTrfRxService *****************
  7740 ;; Defined at:
  7741 ;;		line 2018 in file "../Microchip/USB/usb_device.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  byteToRead      1    7[COMMON] unsigned char 
  7746 ;;  i               1    6[COMMON] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;Total ram usage:        6 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    1
  7763 ;; This function calls:
  7764 ;;		_USBCtrlEPAllowStatusStage
  7765 ;; This function is called by:
  7766 ;;		_USBCtrlTrfOutHandler
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function _USBCtrlTrfRxService
  7772  0414                     _USBCtrlTrfRxService:	
  7773                           
  7774                           ;usb_device.c: 2020: BYTE byteToRead;
  7775                           ;usb_device.c: 2021: BYTE i;
  7776                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7777                           
  7778                           ;incstack = 0
  7779                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7780  0414  0021               	movlb	1	; select bank1
  7781  0415  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  7782  0416  0086               	movwf	6
  7783  0417  0187               	clrf	7
  7784  0418  3F41               	moviw [1]fsr1
  7785  0419  00F7               	movwf	USBCtrlTrfRxService@byteToRead
  7786                           
  7787                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
  7788  041A  0877               	movf	USBCtrlTrfRxService@byteToRead,w
  7789  041B  00F2               	movwf	??_USBCtrlTrfRxService
  7790  041C  01F3               	clrf	??_USBCtrlTrfRxService+1
  7791  041D  0873               	movf	??_USBCtrlTrfRxService+1,w
  7792  041E  0224               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  7793  041F  1D03               	skipz
  7794  0420  2C23               	goto	u244_25
  7795  0421  0872               	movf	??_USBCtrlTrfRxService,w
  7796  0422  0223               	subwf	(_outPipes^(0+128)+3),w	;volatile
  7797  0423                     u244_25:	
  7798  0423  1803               	skipnc
  7799  0424  2C29               	goto	i1l3016
  7800                           
  7801                           ;usb_device.c: 2032: {
  7802                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
  7803  0425  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  7804  0426  00F2               	movwf	??_USBCtrlTrfRxService
  7805  0427  0872               	movf	??_USBCtrlTrfRxService,w
  7806  0428  00F7               	movwf	USBCtrlTrfRxService@byteToRead
  7807  0429                     i1l3016:	
  7808                           
  7809                           ;usb_device.c: 2034: }
  7810                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
  7811  0429  3003               	movlw	3
  7812  042A  3EA0               	addlw	(low (_outPipes| 0))& (0+255)
  7813  042B  0086               	movwf	6
  7814  042C  0187               	clrf	7
  7815  042D  0877               	movf	USBCtrlTrfRxService@byteToRead,w
  7816  042E  00F2               	movwf	??_USBCtrlTrfRxService
  7817  042F  01F3               	clrf	??_USBCtrlTrfRxService+1
  7818  0430  09F2               	comf	??_USBCtrlTrfRxService,f
  7819  0431  09F3               	comf	??_USBCtrlTrfRxService+1,f
  7820  0432  0AF2               	incf	??_USBCtrlTrfRxService,f
  7821  0433  1903               	skipnz
  7822  0434  0AF3               	incf	??_USBCtrlTrfRxService+1,f
  7823  0435  3F40               	moviw [0]fsr1
  7824  0436  0772               	addwf	??_USBCtrlTrfRxService,w
  7825  0437  00F4               	movwf	??_USBCtrlTrfRxService+2
  7826  0438  3F41               	moviw [1]fsr1
  7827  0439  3D73               	addwfc	??_USBCtrlTrfRxService+1,w
  7828  043A  00F5               	movwf	??_USBCtrlTrfRxService+3
  7829  043B  0874               	movf	??_USBCtrlTrfRxService+2,w
  7830  043C  00A3               	movwf	(_outPipes^(0+128)+3)	;volatile
  7831  043D  0875               	movf	??_USBCtrlTrfRxService+3,w
  7832  043E  00A4               	movwf	((_outPipes+1)^(0+128)+3)	;volatile
  7833                           
  7834                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
  7835  043F  01F6               	clrf	USBCtrlTrfRxService@i
  7836  0440                     i1l3026:	
  7837  0440  0877               	movf	USBCtrlTrfRxService@byteToRead,w
  7838  0441  0276               	subwf	USBCtrlTrfRxService@i,w
  7839  0442  1803               	btfsc	3,0
  7840  0443  2C59               	goto	i1l3028
  7841                           
  7842                           ;usb_device.c: 2041: {
  7843                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7844  0444  0876               	movf	USBCtrlTrfRxService@i,w
  7845  0445  3E58               	addlw	88
  7846  0446  0086               	movwf	6
  7847  0447  0187               	clrf	7
  7848  0448  0801               	movf	1,w
  7849  0449  00F2               	movwf	??_USBCtrlTrfRxService
  7850  044A  0820               	movf	_outPipes^(0+128),w	;volatile
  7851  044B  0086               	movwf	6
  7852  044C  3001               	movlw	1	; select bank2/3
  7853  044D  0087               	movwf	7
  7854  044E  0872               	movf	??_USBCtrlTrfRxService,w
  7855  044F  0081               	movwf	1
  7856  0450  3001               	movlw	1
  7857  0451  00F2               	movwf	??_USBCtrlTrfRxService
  7858  0452  0872               	movf	??_USBCtrlTrfRxService,w
  7859  0453  07A0               	addwf	_outPipes^(0+128),f	;volatile
  7860  0454  3001               	movlw	1
  7861  0455  00F2               	movwf	??_USBCtrlTrfRxService
  7862  0456  0872               	movf	??_USBCtrlTrfRxService,w
  7863  0457  07F6               	addwf	USBCtrlTrfRxService@i,f
  7864  0458  2C40               	goto	i1l3026
  7865  0459                     i1l3028:	
  7866                           
  7867                           ;usb_device.c: 2043: }
  7868                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
  7869  0459  0823               	movf	(_outPipes^(0+128)+3),w	;volatile
  7870  045A  0424               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  7871  045B  1903               	btfsc	3,2
  7872  045C  2C85               	goto	i1l3040
  7873                           
  7874                           ;usb_device.c: 2048: {
  7875                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
  7876  045D  3008               	movlw	8
  7877  045E  00F2               	movwf	??_USBCtrlTrfRxService
  7878  045F  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  7879  0460  0086               	movwf	6
  7880  0461  0187               	clrf	7
  7881  0462  0872               	movf	??_USBCtrlTrfRxService,w
  7882  0463  0081               	movwf	1
  7883                           
  7884                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
  7885  0464  3058               	movlw	88
  7886  0465  00F2               	movwf	??_USBCtrlTrfRxService
  7887  0466  3000               	movlw	0
  7888  0467  00F3               	movwf	??_USBCtrlTrfRxService+1
  7889  0468  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7890  0469  3E02               	addlw	2
  7891  046A  0086               	movwf	6
  7892  046B  0187               	clrf	7
  7893  046C  0872               	movf	??_USBCtrlTrfRxService,w
  7894  046D  3FC0               	movwi [0]fsr1
  7895  046E  0873               	movf	??_USBCtrlTrfRxService+1,w
  7896  046F  3FC1               	movwi [1]fsr1
  7897                           
  7898                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7899  0470  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  7900  0471  0086               	movwf	6
  7901  0472  0187               	clrf	7
  7902  0473  1B01               	btfsc	1,6
  7903  0474  2C7D               	goto	i1l3038
  7904                           
  7905                           ;usb_device.c: 2052: {
  7906                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  7907  0475  30C8               	movlw	200
  7908  0476  00F2               	movwf	??_USBCtrlTrfRxService
  7909  0477  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7910  0478  0086               	movwf	6
  7911  0479  0187               	clrf	7
  7912  047A  0872               	movf	??_USBCtrlTrfRxService,w
  7913  047B  0081               	movwf	1
  7914                           
  7915                           ;usb_device.c: 2054: }
  7916  047C  0008               	return
  7917  047D                     i1l3038:	
  7918                           
  7919                           ;usb_device.c: 2055: else
  7920                           ;usb_device.c: 2056: {
  7921                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  7922  047D  3088               	movlw	136
  7923  047E  00F2               	movwf	??_USBCtrlTrfRxService
  7924  047F  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7925  0480  0086               	movwf	6
  7926  0481  0187               	clrf	7
  7927  0482  0872               	movf	??_USBCtrlTrfRxService,w
  7928  0483  0081               	movwf	1
  7929                           
  7930                           ;usb_device.c: 2058: }
  7931                           ;usb_device.c: 2059: }
  7932  0484  0008               	return
  7933  0485                     i1l3040:	
  7934                           
  7935                           ;usb_device.c: 2060: else
  7936                           ;usb_device.c: 2061: {
  7937                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
  7938  0485  3008               	movlw	8
  7939  0486  00F2               	movwf	??_USBCtrlTrfRxService
  7940  0487  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  7941  0488  0086               	movwf	6
  7942  0489  0187               	clrf	7
  7943  048A  0872               	movf	??_USBCtrlTrfRxService,w
  7944  048B  0081               	movwf	1
  7945                           
  7946                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  7947  048C  3050               	movlw	80
  7948  048D  00F2               	movwf	??_USBCtrlTrfRxService
  7949  048E  3000               	movlw	0
  7950  048F  00F3               	movwf	??_USBCtrlTrfRxService+1
  7951  0490  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7952  0491  3E02               	addlw	2
  7953  0492  0086               	movwf	6
  7954  0493  0187               	clrf	7
  7955  0494  0872               	movf	??_USBCtrlTrfRxService,w
  7956  0495  3FC0               	movwi [0]fsr1
  7957  0496  0873               	movf	??_USBCtrlTrfRxService+1,w
  7958  0497  3FC1               	movwi [1]fsr1
  7959                           
  7960                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
  7961  0498  3084               	movlw	132
  7962  0499  00F2               	movwf	??_USBCtrlTrfRxService
  7963  049A  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7964  049B  0086               	movwf	6
  7965  049C  0187               	clrf	7
  7966  049D  0872               	movf	??_USBCtrlTrfRxService,w
  7967  049E  0081               	movwf	1
  7968                           
  7969                           ;usb_device.c: 2078: {
  7970                           ;usb_device.c: 2084: outPipes[0].pFunc();
  7971  049F  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  7972  04A0  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  7973                           
  7974                           ;usb_device.c: 2089: }
  7975                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
  7976  04A1  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  7977                           
  7978                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
  7979  04A2  0843               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  7980  04A3  1D03               	btfss	3,2
  7981  04A4  0008               	return
  7982                           
  7983                           ;usb_device.c: 2105: {
  7984                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
  7985  04A5  318F  2746         	fcall	_USBCtrlEPAllowStatusStage
  7986  04A7  0008               	return
  7987  04A8                     __end_of_USBCtrlTrfRxService:	
  7988                           
  7989                           	psect	text42
  7990  0F46                     __ptext42:	
  7991 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7992 ;; Defined at:
  7993 ;;		line 1589 in file "../Microchip/USB/usb_device.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;Total ram usage:        2 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_USBCtrlEPServiceComplete
  8017 ;;		_USBCtrlTrfRxService
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function _USBCtrlEPAllowStatusStage
  8023  0F46                     _USBCtrlEPAllowStatusStage:	
  8024                           
  8025                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
  8026                           
  8027                           ;incstack = 0
  8028                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8029  0F46  0021               	movlb	1	; select bank1
  8030  0F47  0842               	movf	_USBStatusStageEnabledFlag1^(0+128),w	;volatile
  8031  0F48  1D03               	btfss	3,2
  8032  0F49  0008               	return
  8033                           
  8034                           ;usb_device.c: 1597: {
  8035                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
  8036  0F4A  3001               	movlw	1
  8037  0F4B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8038  0F4C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8039  0F4D  00C2               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8040                           
  8041                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
  8042  0F4E  0841               	movf	_USBStatusStageEnabledFlag2^(0+128),w	;volatile
  8043  0F4F  1D03               	btfss	3,2
  8044  0F50  0008               	return
  8045                           
  8046                           ;usb_device.c: 1600: {
  8047                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
  8048  0F51  3001               	movlw	1
  8049  0F52  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8050  0F53  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8051  0F54  00C1               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8052                           
  8053                           ;usb_device.c: 1605: if(controlTransferState == 2)
  8054  0F55  3002               	movlw	2
  8055  0F56  064A               	xorwf	_controlTransferState^(0+128),w	;volatile
  8056  0F57  1D03               	btfss	3,2
  8057  0F58  2F65               	goto	i1l2736
  8058                           
  8059                           ;usb_device.c: 1606: {
  8060                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
  8061  0F59  0A32               	incf	_pBDTEntryIn^(0+128),w
  8062  0F5A  0086               	movwf	6
  8063  0F5B  0187               	clrf	7
  8064  0F5C  0181               	clrf	1
  8065                           
  8066                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  8067  0F5D  30C8               	movlw	200
  8068  0F5E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8069  0F5F  0832               	movf	_pBDTEntryIn^(0+128),w
  8070  0F60  0086               	movwf	6
  8071  0F61  0187               	clrf	7
  8072  0F62  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8073  0F63  0081               	movwf	1
  8074                           
  8075                           ;usb_device.c: 1609: }
  8076  0F64  0008               	return
  8077  0F65                     i1l2736:	
  8078                           
  8079                           ;usb_device.c: 1610: else if(controlTransferState == 1)
  8080  0F65  034A               	decf	_controlTransferState^(0+128),w	;volatile
  8081  0F66  1D03               	btfss	3,2
  8082  0F67  0008               	return
  8083                           
  8084                           ;usb_device.c: 1611: {
  8085                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
  8086  0F68  01C5               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8087                           
  8088                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
  8089  0F69  3008               	movlw	8
  8090  0F6A  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8091  0F6B  0A4D               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  8092  0F6C  0086               	movwf	6
  8093  0F6D  0187               	clrf	7
  8094  0F6E  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8095  0F6F  0081               	movwf	1
  8096                           
  8097                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8098  0F70  3050               	movlw	80
  8099  0F71  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8100  0F72  3000               	movlw	0
  8101  0F73  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8102  0F74  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8103  0F75  3E02               	addlw	2
  8104  0F76  0086               	movwf	6
  8105  0F77  0187               	clrf	7
  8106  0F78  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8107  0F79  3FC0               	movwi [0]fsr1
  8108  0F7A  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8109  0F7B  3FC1               	movwi [1]fsr1
  8110                           
  8111                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
  8112  0F7C  3084               	movlw	132
  8113  0F7D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8114  0F7E  084D               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  8115  0F7F  0086               	movwf	6
  8116  0F80  0187               	clrf	7
  8117  0F81  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8118  0F82  0081               	movwf	1
  8119                           
  8120                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
  8121  0F83  3001               	movlw	1
  8122  0F84  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8123  0F85  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8124  0F86  00C5               	movwf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8125                           
  8126                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
  8127  0F87  3008               	movlw	8
  8128  0F88  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8129  0F89  0A4C               	incf	_pBDTEntryEP0OutNext^(0+128),w
  8130  0F8A  0086               	movwf	6
  8131  0F8B  0187               	clrf	7
  8132  0F8C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8133  0F8D  0081               	movwf	1
  8134                           
  8135                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  8136  0F8E  3050               	movlw	80
  8137  0F8F  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8138  0F90  3000               	movlw	0
  8139  0F91  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8140  0F92  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8141  0F93  3E02               	addlw	2
  8142  0F94  0086               	movwf	6
  8143  0F95  0187               	clrf	7
  8144  0F96  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8145  0F97  3FC0               	movwi [0]fsr1
  8146  0F98  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8147  0F99  3FC1               	movwi [1]fsr1
  8148                           
  8149                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8150  0F9A  3080               	movlw	128
  8151  0F9B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8152  0F9C  084C               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8153  0F9D  0086               	movwf	6
  8154  0F9E  0187               	clrf	7
  8155  0F9F  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8156  0FA0  0081               	movwf	1
  8157  0FA1  0008               	return
  8158  0FA2                     __end_of_USBCtrlEPAllowStatusStage:	
  8159                           
  8160                           	psect	text43
  8161  0EEF                     __ptext43:	
  8162 ;; *************** function _USBCtrlTrfInHandler *****************
  8163 ;; Defined at:
  8164 ;;		line 2747 in file "../Microchip/USB/usb_device.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  lastDTS         1    7[COMMON] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:        3 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    1
  8185 ;; This function calls:
  8186 ;;		_USBCtrlTrfTxService
  8187 ;; This function is called by:
  8188 ;;		_USBCtrlEPService
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _USBCtrlTrfInHandler
  8194  0EEF                     _USBCtrlTrfInHandler:	
  8195                           
  8196                           ;usb_device.c: 2749: BYTE lastDTS;
  8197                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8201  0EEF  0021               	movlb	1	; select bank1
  8202  0EF0  0832               	movf	_pBDTEntryIn^(0+128),w
  8203  0EF1  0086               	movwf	6
  8204  0EF2  0187               	clrf	7
  8205  0EF3  3000               	movlw	0
  8206  0EF4  1B01               	btfsc	1,6
  8207  0EF5  3001               	movlw	1
  8208  0EF6  00F7               	movwf	USBCtrlTrfInHandler@lastDTS
  8209                           
  8210                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8211  0EF7  3004               	movlw	4
  8212  0EF8  00F5               	movwf	??_USBCtrlTrfInHandler
  8213  0EF9  0875               	movf	??_USBCtrlTrfInHandler,w
  8214  0EFA  06B2               	xorwf	_pBDTEntryIn^(0+128),f
  8215                           
  8216                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  8217  0EFB  3008               	movlw	8
  8218  0EFC  064E               	xorwf	_USBDeviceState^(0+128),w	;volatile
  8219  0EFD  1D03               	btfss	3,2
  8220  0EFE  2F0D               	goto	i1l3180
  8221                           
  8222                           ;usb_device.c: 2760: {
  8223                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  8224  0EFF  0020               	movlb	0	; select bank0
  8225  0F00  0852               	movf	82,w	;volatile
  8226  0F01  003D               	movlb	29	; select bank29
  8227  0F02  0096               	movwf	22	;volatile
  8228                           
  8229                           ;usb_device.c: 2762: if(UADDR != 0u)
  8230  0F03  0816               	movf	22,w	;volatile
  8231  0F04  1903               	btfsc	3,2
  8232  0F05  2F08               	goto	i1l3178
  8233                           
  8234                           ;usb_device.c: 2763: {
  8235                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  8236  0F06  3010               	movlw	16
  8237  0F07  2F09               	goto	L16
  8238  0F08                     i1l3178:	
  8239                           ;usb_device.c: 2765: }
  8240                           
  8241                           
  8242                           ;usb_device.c: 2766: else
  8243                           ;usb_device.c: 2767: {
  8244                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  8245  0F08  3004               	movlw	4
  8246  0F09                     L16:	
  8247  0F09  00F5               	movwf	??_USBCtrlTrfInHandler
  8248  0F0A  0875               	movf	??_USBCtrlTrfInHandler,w
  8249  0F0B  0021               	movlb	1	; select bank1
  8250  0F0C  00CE               	movwf	_USBDeviceState^(0+128)	;volatile
  8251  0F0D                     i1l3180:	
  8252                           
  8253                           ;usb_device.c: 2769: }
  8254                           ;usb_device.c: 2770: }
  8255                           ;usb_device.c: 2773: if(controlTransferState == 1)
  8256  0F0D  034A               	decf	_controlTransferState^(0+128),w	;volatile
  8257  0F0E  1D03               	btfss	3,2
  8258  0F0F  2F3F               	goto	i1l322
  8259                           
  8260                           ;usb_device.c: 2774: {
  8261                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  8262  0F10  3058               	movlw	88
  8263  0F11  00F5               	movwf	??_USBCtrlTrfInHandler
  8264  0F12  3000               	movlw	0
  8265  0F13  00F6               	movwf	??_USBCtrlTrfInHandler+1
  8266  0F14  0832               	movf	_pBDTEntryIn^(0+128),w
  8267  0F15  3E02               	addlw	2
  8268  0F16  0086               	movwf	6
  8269  0F17  0187               	clrf	7
  8270  0F18  0875               	movf	??_USBCtrlTrfInHandler,w
  8271  0F19  3FC0               	movwi [0]fsr1
  8272  0F1A  0876               	movf	??_USBCtrlTrfInHandler+1,w
  8273  0F1B  3FC1               	movwi [1]fsr1
  8274                           
  8275                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  8276  0F1C  3186  26A5  318E   	fcall	_USBCtrlTrfTxService
  8277                           
  8278                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  8279  0F1F  3002               	movlw	2
  8280  0F20  0021               	movlb	1	; select bank1
  8281  0F21  064B               	xorwf	_shortPacketStatus^(0+128),w	;volatile
  8282  0F22  1D03               	btfss	3,2
  8283  0F23  2F2C               	goto	i1l3190
  8284                           
  8285                           ;usb_device.c: 2783: {
  8286                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  8287  0F24  3084               	movlw	132
  8288  0F25  00F5               	movwf	??_USBCtrlTrfInHandler
  8289  0F26  0832               	movf	_pBDTEntryIn^(0+128),w
  8290  0F27  0086               	movwf	6
  8291  0F28  0187               	clrf	7
  8292  0F29  0875               	movf	??_USBCtrlTrfInHandler,w
  8293  0F2A  0081               	movwf	1
  8294                           
  8295                           ;usb_device.c: 2787: }
  8296  0F2B  0008               	return
  8297  0F2C                     i1l3190:	
  8298                           
  8299                           ;usb_device.c: 2788: else
  8300                           ;usb_device.c: 2789: {
  8301                           ;usb_device.c: 2790: if(lastDTS == 0)
  8302  0F2C  0877               	movf	USBCtrlTrfInHandler@lastDTS,w
  8303  0F2D  1D03               	btfss	3,2
  8304  0F2E  2F37               	goto	i1l3194
  8305                           
  8306                           ;usb_device.c: 2791: {
  8307                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  8308  0F2F  30C8               	movlw	200
  8309  0F30  00F5               	movwf	??_USBCtrlTrfInHandler
  8310  0F31  0832               	movf	_pBDTEntryIn^(0+128),w
  8311  0F32  0086               	movwf	6
  8312  0F33  0187               	clrf	7
  8313  0F34  0875               	movf	??_USBCtrlTrfInHandler,w
  8314  0F35  0081               	movwf	1
  8315                           
  8316                           ;usb_device.c: 2793: }
  8317  0F36  0008               	return
  8318  0F37                     i1l3194:	
  8319                           
  8320                           ;usb_device.c: 2794: else
  8321                           ;usb_device.c: 2795: {
  8322                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  8323  0F37  3088               	movlw	136
  8324  0F38  00F5               	movwf	??_USBCtrlTrfInHandler
  8325  0F39  0832               	movf	_pBDTEntryIn^(0+128),w
  8326  0F3A  0086               	movwf	6
  8327  0F3B  0187               	clrf	7
  8328  0F3C  0875               	movf	??_USBCtrlTrfInHandler,w
  8329  0F3D  0081               	movwf	1
  8330                           
  8331                           ;usb_device.c: 2797: }
  8332                           ;usb_device.c: 2798: }
  8333                           ;usb_device.c: 2799: }
  8334  0F3E  0008               	return
  8335  0F3F                     i1l322:	
  8336                           
  8337                           ;usb_device.c: 2800: else
  8338                           ;usb_device.c: 2801: {
  8339                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  8340  0F3F  1FA2               	btfss	(_outPipes^(0+128)+2),7	;volatile
  8341  0F40  2F44               	goto	i1l3198
  8342                           
  8343                           ;usb_device.c: 2808: {
  8344                           ;usb_device.c: 2809: outPipes[0].pFunc();
  8345  0F41  0825               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  8346  0F42  0826               	movf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  8347                           
  8348                           ;usb_device.c: 2810: }
  8349                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  8350  0F43  13A2               	bcf	(_outPipes^(0+128)+2),7	;volatile
  8351  0F44                     i1l3198:	
  8352                           
  8353                           ;usb_device.c: 2812: }
  8354                           ;usb_device.c: 2814: controlTransferState = 0;
  8355  0F44  01CA               	clrf	_controlTransferState^(0+128)	;volatile
  8356  0F45  0008               	return
  8357  0F46                     __end_of_USBCtrlTrfInHandler:	
  8358                           
  8359                           	psect	text44
  8360  06A5                     __ptext44:	
  8361 ;; *************** function _USBCtrlTrfTxService *****************
  8362 ;; Defined at:
  8363 ;;		line 1937 in file "../Microchip/USB/usb_device.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  byteToSend      1    4[COMMON] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;Total ram usage:        5 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_USBCtrlEPAllowDataStage
  8387 ;;		_USBCtrlTrfInHandler
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function _USBCtrlTrfTxService
  8393  06A5                     _USBCtrlTrfTxService:	
  8394                           
  8395                           ;usb_device.c: 1939: BYTE byteToSend;
  8396                           ;usb_device.c: 1943: byteToSend = 8;
  8397                           
  8398                           ;incstack = 0
  8399                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8400  06A5  3008               	movlw	8
  8401  06A6  00F0               	movwf	??_USBCtrlTrfTxService
  8402  06A7  0870               	movf	??_USBCtrlTrfTxService,w
  8403  06A8  00F4               	movwf	USBCtrlTrfTxService@byteToSend
  8404                           
  8405                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
  8406  06A9  3000               	movlw	0
  8407  06AA  0021               	movlb	1	; select bank1
  8408  06AB  022B               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  8409  06AC  3008               	movlw	8
  8410  06AD  1903               	skipnz
  8411  06AE  022A               	subwf	(_inPipes^(0+128)+3),w	;volatile
  8412  06AF  1803               	skipnc
  8413  06B0  2EC1               	goto	i1l2684
  8414                           
  8415                           ;usb_device.c: 1945: {
  8416                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
  8417  06B1  082A               	movf	(_inPipes^(0+128)+3),w	;volatile
  8418  06B2  00F0               	movwf	??_USBCtrlTrfTxService
  8419  06B3  0870               	movf	??_USBCtrlTrfTxService,w
  8420  06B4  00F4               	movwf	USBCtrlTrfTxService@byteToSend
  8421                           
  8422                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
  8423  06B5  084B               	movf	_shortPacketStatus^(0+128),w	;volatile
  8424  06B6  1D03               	btfss	3,2
  8425  06B7  2EBA               	goto	i1l2680
  8426                           
  8427                           ;usb_device.c: 1954: {
  8428                           ;usb_device.c: 1955: shortPacketStatus = 1;
  8429  06B8  3001               	movlw	1
  8430  06B9  2EBE               	goto	L17
  8431  06BA                     i1l2680:	
  8432                           ;usb_device.c: 1956: }
  8433                           
  8434                           
  8435                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
  8436  06BA  034B               	decf	_shortPacketStatus^(0+128),w	;volatile
  8437  06BB  1D03               	btfss	3,2
  8438  06BC  2EC1               	goto	i1l2684
  8439                           
  8440                           ;usb_device.c: 1958: {
  8441                           ;usb_device.c: 1959: shortPacketStatus = 2;
  8442  06BD  3002               	movlw	2
  8443  06BE                     L17:	
  8444  06BE  00F0               	movwf	??_USBCtrlTrfTxService
  8445  06BF  0870               	movf	??_USBCtrlTrfTxService,w
  8446  06C0  00CB               	movwf	_shortPacketStatus^(0+128)	;volatile
  8447  06C1                     i1l2684:	
  8448                           
  8449                           ;usb_device.c: 1960: }
  8450                           ;usb_device.c: 1961: }
  8451                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
  8452  06C1  3003               	movlw	3
  8453  06C2  3EA7               	addlw	(low (_inPipes| 0))& (0+255)
  8454  06C3  0086               	movwf	6
  8455  06C4  0187               	clrf	7
  8456  06C5  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  8457  06C6  00F0               	movwf	??_USBCtrlTrfTxService
  8458  06C7  01F1               	clrf	??_USBCtrlTrfTxService+1
  8459  06C8  09F0               	comf	??_USBCtrlTrfTxService,f
  8460  06C9  09F1               	comf	??_USBCtrlTrfTxService+1,f
  8461  06CA  0AF0               	incf	??_USBCtrlTrfTxService,f
  8462  06CB  1903               	skipnz
  8463  06CC  0AF1               	incf	??_USBCtrlTrfTxService+1,f
  8464  06CD  3F40               	moviw [0]fsr1
  8465  06CE  0770               	addwf	??_USBCtrlTrfTxService,w
  8466  06CF  00F2               	movwf	??_USBCtrlTrfTxService+2
  8467  06D0  3F41               	moviw [1]fsr1
  8468  06D1  3D71               	addwfc	??_USBCtrlTrfTxService+1,w
  8469  06D2  00F3               	movwf	??_USBCtrlTrfTxService+3
  8470  06D3  0872               	movf	??_USBCtrlTrfTxService+2,w
  8471  06D4  00AA               	movwf	(_inPipes^(0+128)+3)	;volatile
  8472  06D5  0873               	movf	??_USBCtrlTrfTxService+3,w
  8473  06D6  00AB               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  8474                           
  8475                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
  8476  06D7  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  8477  06D8  00F0               	movwf	??_USBCtrlTrfTxService
  8478  06D9  0A32               	incf	_pBDTEntryIn^(0+128),w
  8479  06DA  0086               	movwf	6
  8480  06DB  0187               	clrf	7
  8481  06DC  0870               	movf	??_USBCtrlTrfTxService,w
  8482  06DD  0081               	movwf	1
  8483                           
  8484                           ;usb_device.c: 1974: pDst = (volatile BYTE*)CtrlTrfData;
  8485  06DE  3058               	movlw	88
  8486  06DF  00F0               	movwf	??_USBCtrlTrfTxService
  8487  06E0  0870               	movf	??_USBCtrlTrfTxService,w
  8488  06E1  00C9               	movwf	_pDst^(0+128)
  8489                           
  8490                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8491  06E2  1C29               	btfss	(_inPipes^(0+128)+2),0	;volatile
  8492  06E3  2EFA               	goto	i1l2702
  8493  06E4  2F13               	goto	i1l2712
  8494  06E5                     i1l2694:	
  8495                           ;usb_device.c: 1976: {
  8496                           ;usb_device.c: 1977: while(byteToSend)
  8497                           
  8498                           
  8499                           ;usb_device.c: 1978: {
  8500                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
  8501  06E5  0827               	movf	_inPipes^(0+128),w	;volatile
  8502  06E6  0084               	movwf	4
  8503  06E7  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  8504  06E8  0085               	movwf	5
  8505  06E9  0800               	movf	0,w	;code access
  8506  06EA  00F0               	movwf	??_USBCtrlTrfTxService
  8507  06EB  0849               	movf	_pDst^(0+128),w
  8508  06EC  0086               	movwf	6
  8509  06ED  0187               	clrf	7
  8510  06EE  0870               	movf	??_USBCtrlTrfTxService,w
  8511  06EF  0081               	movwf	1
  8512  06F0  3001               	movlw	1
  8513  06F1  07A7               	addwf	_inPipes^(0+128),f	;volatile
  8514  06F2  3000               	movlw	0
  8515  06F3  3DA8               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8516  06F4  3001               	movlw	1
  8517  06F5  00F0               	movwf	??_USBCtrlTrfTxService
  8518  06F6  0870               	movf	??_USBCtrlTrfTxService,w
  8519  06F7  07C9               	addwf	_pDst^(0+128),f
  8520                           
  8521                           ;usb_device.c: 1980: byteToSend--;
  8522  06F8  3001               	movlw	1
  8523  06F9  02F4               	subwf	USBCtrlTrfTxService@byteToSend,f
  8524  06FA                     i1l2702:	
  8525  06FA  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  8526  06FB  1903               	btfsc	3,2
  8527  06FC  0008               	return
  8528  06FD  2EE5               	goto	i1l2694
  8529  06FE                     i1l2704:	
  8530                           ;usb_device.c: 1983: else
  8531                           ;usb_device.c: 1984: {
  8532                           ;usb_device.c: 1985: while(byteToSend)
  8533                           
  8534                           ;usb_device.c: 1981: }
  8535                           ;usb_device.c: 1982: }
  8536                           
  8537                           
  8538                           ;usb_device.c: 1986: {
  8539                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
  8540  06FE  0827               	movf	_inPipes^(0+128),w	;volatile
  8541  06FF  0084               	movwf	4
  8542  0700  0828               	movf	(_inPipes+1)^(0+128),w	;volatile
  8543  0701  0085               	movwf	5
  8544  0702  0800               	movf	0,w	;code access
  8545  0703  00F0               	movwf	??_USBCtrlTrfTxService
  8546  0704  0849               	movf	_pDst^(0+128),w
  8547  0705  0086               	movwf	6
  8548  0706  0187               	clrf	7
  8549  0707  0870               	movf	??_USBCtrlTrfTxService,w
  8550  0708  0081               	movwf	1
  8551  0709  3001               	movlw	1
  8552  070A  07A7               	addwf	_inPipes^(0+128),f	;volatile
  8553  070B  3000               	movlw	0
  8554  070C  3DA8               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8555  070D  3001               	movlw	1
  8556  070E  00F0               	movwf	??_USBCtrlTrfTxService
  8557  070F  0870               	movf	??_USBCtrlTrfTxService,w
  8558  0710  07C9               	addwf	_pDst^(0+128),f
  8559                           
  8560                           ;usb_device.c: 1988: byteToSend--;
  8561  0711  3001               	movlw	1
  8562  0712  02F4               	subwf	USBCtrlTrfTxService@byteToSend,f
  8563  0713                     i1l2712:	
  8564  0713  0874               	movf	USBCtrlTrfTxService@byteToSend,w
  8565  0714  1903               	btfsc	3,2
  8566  0715  0008               	return
  8567  0716  2EFE               	goto	i1l2704
  8568  0717                     __end_of_USBCtrlTrfTxService:	
  8569  007E                     btemp	set	126	;btemp
  8570  007E                     int$flags	set	126
  8571  007E                     wtemp0	set	126


Data Sizes:
    Strings     20
    Constant    201
    Data        4
    BSS         200
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            80     22      72
    BANK2            63      7      33
    BANK3            80      0      64
    BANK4            16      0       0
    BANK5            16      0       0
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 48
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), BDT(BANK0[48]), 

    memset@p1	PTR void  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[48]), 

    putsUSBUSART@data	PTR unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[18]), 

    putsUSBUSART@pData	PTR unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[18]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> USB_Out_Buffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned short  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned short  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S2155_POINTER$wRom	PTR const unsigned short  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S2155_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S2155_POINTER$wRam	PTR unsigned short  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S2155_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    sp__memset	PTR void  size(1) Largest target is 48
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    S118$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCBCheckOtherReq->_USBCheckCDCRequest
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRCode in BANK0

    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCBInitEP->_CDCInitEP

Critical Paths under _main in BANK1

    _ProcessIO->_CDCTxService
    _ProcessIO->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _InitializeSystem->_USBDeviceInit

Critical Paths under _ISRCode in BANK1

    _ISRCode->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_ProcessIO

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5939
                                              5 BANK2      2     2      0
                   _InitializeSystem
                          _ProcessIO
                    _USBDeviceAttach
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              8 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            5     5      0    5667
                                              0 BANK2      5     5      0
                     _BlinkUSBStatus
                       _CDCTxService
                       _getsUSBUSART
                       _putsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSBUSART                                         8     6      2     759
                                              8 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         7     6      1    2414
                                             15 BANK1      7     6      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         7     7      0    2358
                                             15 BANK1      7     7      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     4      3    2120
                                              8 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0     272
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              8 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISRCode                                              1     1      0   31883
                                              7 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   31883
                                              4 BANK1      3     3      0
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    4289
                                             13 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    4289
                                             13 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     4     4      0   18698
                                              0 BANK1      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   18401
                                             15 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              7 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              5 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   14020
                                             14 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    5035
                                             13 COMMON     1     1      0
                                              8 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              7     3      4     586
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              6     6      0    4650
                                              8 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    4289
                                              3 BANK0      5     0      5
                 _USBCBCheckOtherReq
                  _USBCBErrorHandler
                        _USBCBInitEP
              _USBCBStdSetDscHandler
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          0     0      0    1177
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            3     3      0    1177
                                              0 BANK0      3     3      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (9) i1_USBTransferOnePacket                               7     4      3     388
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     789
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     428
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              8 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  6     6      0     114
                                              2 COMMON     6     6      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              5 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitializeSystem
     _USBDeviceInit
     _UserInit
   _ProcessIO
     _BlinkUSBStatus
     _CDCTxService
       _USBTransferOnePacket
     _getsUSBUSART
       _USBTransferOnePacket
     _putsUSBUSART
   _USBDeviceAttach

 _ISRCode (ROOT)
   _USBDeviceTasks
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckCDCRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBCheckOtherReq
                 _USBCheckCDCRequest
               _USBCBErrorHandler
               _USBCBInitEP
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i1_USBTransferOnePacket
               _USBCBStdSetDscHandler
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBCheckOtherReq
               _USBCheckCDCRequest
             _USBCBErrorHandler
             _USBCBInitEP
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
             _USBCBStdSetDscHandler
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBCheckOtherReq
             _USBCheckCDCRequest
           _USBCBErrorHandler
           _USBCBInitEP
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
           _USBCBStdSetDscHandler
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckCDCRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBCheckOtherReq
           _USBCheckCDCRequest
         _USBCBErrorHandler
         _USBCBInitEP
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
         _USBCBStdSetDscHandler
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBCheckOtherReq
         _USBCheckCDCRequest
       _USBCBErrorHandler
       _USBCBInitEP
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
       _USBCBStdSetDscHandler
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     16      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            3F      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               3F      7      21       9       52.4%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     107      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     107      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 11 12:21:39 2018

                              _USB_SD_Ptr 10D3                                         pc 0002  
                             __CFG_CP$OFF 0000                            _BlinkUSBStatus 0B5C  
                           _USBDeviceInit 02D9                        __size_of_CDCInitEP 003A  
                            _putsUSBUSART 0C4A      USER_USB_CALLBACK_EVENT_HANDLER@event 0063  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0065                                       l128 0320  
             __end_of_USBStdGetDscHandler 0631                                       l187 0BF5  
                                     l607 04E5                                       _BDT 0020  
                                     _RC2 0072                                       _RC3 0073  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 0B99                      USBStdSetCfgHandler@i 006B  
                    USBStdSetCfgHandler@p 0068                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0154  
                          _USBDeviceState 00CE                    ??_USBCBWakeFromSuspend 0070  
                   ??_USBCtrlTrfRxService 0072                            ??_getsUSBUSART 00E2  
                USBEnableEndpoint@options 0077                              __CFG_LVP$OFF 0000  
                                    l3210 02E9                                      l4020 0233  
                                    l4022 0235                                      l4006 0C6B  
                                    l4040 0259                                      l4120 04B3  
                                    l3226 0307                                      l3218 02FA  
                                    l4034 0244                                      l4026 023B  
                                    l3260 0345                                      l4140 04ED  
              USBConfigureEndpoint@handle 0076                                      l3246 0325  
                                    l4046 0262                                      l3248 0334  
                                    l4152 0514                                      l4144 04D3  
                                    l3266 0361                                      l4058 027A  
                                    l4066 0296                                      l4146 04FB  
                                    l4084 02C2                                      l4068 029A  
                                    l4076 02B6                                      l4086 02C6  
                                    l4078 02B9                                      l4158 0536  
                                    l4182 0BBF                                      l4088 02D7  
                                    l4186 0BC6                                      l3692 0BFA  
                                    l3942 0DD6                                      l3934 0DC9  
                                    l3954 0DFF                                      l3980 0EC4  
                                    l3982 0EDD                                      l3974 0EC3  
                                    l3966 0EB1                                      l3984 0EED  
                                    l3968 0EB3                                      l3994 0C51  
                                    l3998 0C56                                      STR_1 10AF  
                                    STR_2 10DB                                      STR_3 10BF  
                                    STR_4 10DB                                      STR_5 10BF  
                                    u2645 030A                                      u3830 04B1  
                                    u3925 050A                     ??_USBCtrlTrfTxService 0070  
                                    u3977 052F                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                         __end_of_ISRCode 001E                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 00B9    USBStdFeatureReqHandler@current_ep_data 006C  
                                    _pDst 00C9                                      _main 0BB1  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                               _BaudRateGen 0131  
                                    fsr1l 0006                           _USBDeviceAttach 0BE4  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 001E                             __CFG_IESO$OFF 0000  
                      _USBCBCheckOtherReq 0B56                __end_of_USBCheckStdRequest 1000  
                  ??_USBCtrlTrfOutHandler 0078                             __CFG_MCLRE$ON 0000  
               ??_USBStdFeatureReqHandler 0068                    __end_of_BlinkUSBStatus 0B5F  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
                     ?_USBCBCheckOtherReq 0070                                     ?_main 0070  
                           _USB_In_Buffer 0320                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0074                    __end_of_USBDeviceTasks 0221  
               ?_USBCtrlEPServiceComplete 0070                                     i1l212 0667  
                                   i1l140 0176                                     i1l150 01D4  
                                   i1l128 03BE                                     i1l322 0F3F  
                                   i1l420 07DF                                     i1l148 01CB  
                                   i1l149 021E                                     i1l334 0FFF  
                                   i1l280 0E19                                     i1l336 0FAA  
                                   i1l345 0FDD                                     i1l370 0114  
                                   i1l362 00D7                                     i1l275 0E0D  
                                   i1l357 00B0                                     i1l358 00B1  
                                   i1l278 0E46                                     i1l279 0E16  
                                   i1l581 0018                                     i1l678 0D31  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 005C                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0E9E                                     _sd000 10AB  
                                   _sd001 1077                                     _sd002 1043  
                                   _state 0137                      ??_USBCBCheckOtherReq 0071  
                       __end_of_CDCInitEP 0CB7                                     status 0003  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 007F  
                         __initialization 0020                           ?_BlinkUSBStatus 0070  
                            __end_of_main 0BCA                     _control_signal_bitmap 00B8  
                          __CFG_LPBOR$OFF 0000                 __size_of_USBCtrlEPService 006A  
                                  ??_main 014C                 __size_of_InitializeSystem 0010  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                     __CFG_USBLSCLK$48MHz 0000                           i1_USBDeviceInit 0379  
                               ??_ISRCode 00D9                              _cdc_mem_type 00BB  
                        __end_of_UserInit 0B74                   __end_of_USBDeviceAttach 0C00  
                        _CDCDataOutHandle 00BA                         _getsUSBUSART$3173 00E6  
                                  i1S4248 0800                                    _ACTCON 039B  
                                  _ANSELA 018C                                    _ANSELC 018E  
                         getsUSBUSART@len 00E1                     __size_of_CDCTxService 00B8  
                                  i1l3040 0485                                    i1l3016 0429  
                                  i1l3026 0440                                    i1l3028 0459  
                                  i1l3060 0FB6                                    i1l3038 047D  
                                  i1l3070 0FC7                                    i1l3062 0FB9  
                                  i1l3072 0FCA                                    i1l3304 07F9  
                                  i1l3154 0C28                                    i1l2602 07A7  
                                  i1l3074 0FCD                                    i1l3058 0FB3  
                                  i1l3330 0764                                    i1l3306 07FB  
                                  i1l3180 0F0D                                    i1l3164 0C48  
                                  i1l2620 07CD                                    i1l3084 0FE9  
                                  i1l3324 073F                                    i1l2702 06FA  
                                  i1l3190 0F2C                                    i1l2614 07C5  
                                  i1l2542 0C0F                                    i1l2550 0D39  
                                  i1l3334 0773                                    i1l2704 06FE  
                                  i1l2712 0713                                    i1l2608 07B7  
                                  i1l2528 0CE1                                    i1l2720 0BCF  
                                  i1l2800 0569                                    i1l3088 0FF4  
                                  i1l3336 0776                                    i1l3600 0170  
                                  i1l3194 0F37                                    i1l3178 0F08  
                                  i1l2538 0C08                                    i1l2570 0D6F  
                                  i1l4250 0D12                                    i1l2650 0CFA  
                                  i1l3530 03A5                                    i1l3522 0399  
                                  i1l3514 0388                                    i1l4252 0D2C  
                                  i1l2652 0CFD                                    i1l3198 0F44  
                                  i1l2590 0794                                    i1l2558 0D46  
                                  i1l2654 0D00                                    i1l2646 0CF4  
                                  i1l2662 0D09                                    i1l2830 05C3  
                                  i1l2822 05A3                                    i1l2806 057B  
                                  i1l3550 03C3                                    i1l3630 01AA  
                                  i1l3622 0193                                    i1l3614 0187  
                                  i1l2680 06BA                                    i1l2736 0F65  
                                  i1l2656 0D03                                    i1l2648 0CF7  
                                  i1l2840 05FD                                    i1l3552 03D0  
                                  i1l2658 0D06                                    i1l2834 05CD  
                                  i1l3570 03FD                                    i1l2684 06C1  
                                  i1l2940 0108                                    i1l2916 00B9  
                                  i1l2908 0097                                    i1l2852 0624  
                                  i1l2764 0E75                                    i1l3564 03E1  
                                  i1l3644 01C3                                    i1l3636 01B0  
                                  i1l3628 01A4                                    i1l2694 06E5  
                                  i1l2598 07A0                                    i1l2926 00D1  
                                  i1l2846 061E                                    i1l2790 0556  
                                  i1l2782 0545                                    i1l3670 0204  
                                  i1l2952 0137                                    i1l2928 00DF  
                                  i1l2848 0621                                    i1l2864 0E22  
                                  i1l2768 0E87                                    i1l3672 0215  
                                  i1l3664 01EF                                    i1l3592 0163  
                                  i1l3832 0010                                    i1l2954 013F  
                                  i1l2938 0103                                    i1l2874 0E3A  
                                  i1l2948 011A                                    i1l2892 006A  
                                  i1l2972 0645                                    u300_25 03A8  
                                  i1l2894 006C                                    i1l2968 0641  
                                  i1l2986 0675                                    i1l2994 067E  
                                  u206_25 0E7E                                    u244_25 0423  
                                  u181_25 0CBF                                    u182_25 0CC5  
                                  u183_25 0CCD                                    u273_25 0720  
                                  _OSCCON 0099                             CDCTxService@i 00E6  
            i1USBTransferOnePacket@handle 0076                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00CB                           USBDeviceTasks@i 00D8  
             USBStdFeatureReqHandler@pUEP 006A                  USBTransferOnePacket@data 00DB  
              USBCtrlTrfInHandler@lastDTS 0077                           ??_USBDeviceInit 00DA  
                          __CFG_STVREN$ON 0000                      __end_of_getsUSBUSART 0EEF  
                            ?_USBCBInitEP 0070                         _USBEnableEndpoint 0C00  
         __size_of_USBStdGetStatusHandler 004A                                    _memset 0BCA  
                              ProcessIO@i 014B                                    _tmrVal 014E  
                      ?_USBEnableEndpoint 0077                     _USBCBStdSetDscHandler 0B54  
           __size_of_USBTransferOnePacket 0048                        __size_of_ProcessIO 0091  
                            _CDCTxService 0221                       ??_USBEnableEndpoint 0078  
                             _CtrlTrfData 0058                      _controlTransferState 00CA  
                 __end_of__initialization 0050                i1USBTransferOnePacket@data 0071  
                __size_of_USBStallHandler 0020                       __size_of_USBSuspend 0018  
                    i1USBDeviceInit@i_746 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0C20                             __end_of_sd000 10AF  
                           __end_of_sd001 10AB                             __end_of_sd002 1077  
                            __pidataBANK2 0B5F                         _USBCB_SOF_Handler 0003  
        __size_of_USBCtrlEPAllowDataStage 004B             __size_of_USBConfigureEndpoint 003C  
                 __end_ofi1_USBDeviceInit 0414               __end_of_USBCtrlTrfInHandler 0F46  
                      ?_USBCB_SOF_Handler 0070                         _CDCTxService$3221 00E4  
                              _cdc_notice 0127                       ??_USBCB_SOF_Handler 0070  
                              _cdc_rx_len 00BE                                _cdc_tx_len 00BC  
                ??_USBCtrlTrfSetupHandler 006F                            _USB_Out_Buffer 01A0  
                        ?_USBDeviceAttach 0070                    _USBStdGetStatusHandler 0E09  
                              __pbssBANK1 00A0                                __pbssBANK2 0131  
                              __pbssBANK3 01A0                                __pbssBANK6 0320  
             __size_of_USBWakeFromSuspend 0015                               _pBDTEntryIn 00B2  
                       __end_of_ProcessIO 0539          __end_of_USBCtrlEPServiceComplete 06A5  
               __end_of_USBCB_SOF_Handler 0004               __size_of_USBCheckCDCRequest 005F  
                              __pmaintext 0BB1                      USBCtrlTrfRxService@i 0076  
                         __CFG_PLLMULT$3x 0000                                __pintentry 0004  
                               ?_UserInit 0070                                   ?_memset 0070  
                  ?_USBCBStdSetDscHandler 0070                                _device_dsc 10C1  
                        _USBCtrlEPService 0717                                _ep_data_in 00AF  
                        _InitializeSystem 0B74               __end_of_USBCtrlTrfRxService 04A8  
                      _USBCheckStdRequest 0FA2                         _configDescriptor1 1000  
             __end_of_USBCtrlTrfTxService 0717                       _USBStdSetCfgHandler 0539  
                                 _ISRCode 0004                                   _OSCTUNE 0098  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 0079  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                                 _UIRbits 0E90                             _cdc_trf_state 00BD  
                         putsUSBUSART@len 00E1                  ??i1_USBTransferOnePacket 0073  
                        ??_BlinkUSBStatus 00DA                                   _pCDCDst 013B  
                                 _pCDCSrc 013D                     __size_of_getsUSBUSART 0051  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0C7D  
              __size_of_USBEnableEndpoint 0020                      ??_USBCheckStdRequest 006E  
           __size_of_USBCtrlTrfOutHandler 002A                          ??_USBDeviceTasks 00D6  
                       ??_USBStallHandler 0070                                ??_UserInit 00DA  
                        ?i1_USBDeviceInit 0070                        getsUSBUSART@buffer 00E5  
                         __size_of_memset 001A                 __end_of_configDescriptor1 1043  
                    __size_of_USBCBInitEP 0003                                   __ptext1 0BE4  
                                 __ptext2 04A8                                   __ptext3 0C4A  
                                 __ptext4 0E9E                                   __ptext5 0221  
                                 __ptext6 0DC1                                   __ptext7 0B5C  
                                 __ptext8 0B74                                   __ptext9 0B69  
                                 _inPipes 00A7               _USBDeferOUTDataStagePackets 00BF  
                            ??_USBSuspend 007D                         _USBCBErrorHandler 0B53  
                   ProcessIO@numBytesRead 014A                                   _tmrMask 0150  
                      ?_USBCBErrorHandler 0070                             ?_USBCBSuspend 0070  
                      __end_of_USB_CD_Ptr 10DB           __size_of_USBCtrlTrfSetupHandler 0048  
                                 clrloop0 0B64                      end_of_initialization 0050  
                            _getsUSBUSART 0E9E               __size_of_USBCBCheckOtherReq 0003  
                      __end_of_USB_SD_Ptr 10D9                       _pBDTEntryEP0OutNext 00CC  
                     ??_USBCBErrorHandler 0070                                   memset@c 0070  
                                 memset@n 0072                                   memset@p 0075  
         _dummy_encapsulated_cmd_response 013F                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 007D                                ?_CDCInitEP 0070  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 0BB1  
                 _USBCtrlEPAllowDataStage 0E53                  _USBCtrlEPServiceComplete 0631  
                              _tmrCounter 0139                _USBStatusStageEnabledFlag1 00C2  
              _USBStatusStageEnabledFlag2 00C1                        USBEnableEndpoint@p 007A  
                               _PORTCbits 000E                 __end_of_USBCBErrorHandler 0B54  
                        __CFG_FOSC$INTOSC 0000                                 _TRISCbits 008E  
                          ??_USBCBSuspend 0070                        _BothEP0OutUOWNsSet 00C5  
               USBStdSetCfgHandler@i_1853 006A                 USBConfigureEndpoint@EPNum 0075  
              ?_USBCtrlEPAllowStatusStage 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0066  
                               _USTATcopy 00CF                  i1USBTransferOnePacket@ep 0075  
            __end_of_USBTransferOnePacket 0E09           __size_ofi1_USBTransferOnePacket 0047  
                      __CFG_PLLEN$ENABLED 0000                        USBDeviceInit@i_746 00DD  
                  _USBCtrlTrfSetupHandler 0D79                         putsUSBUSART@pData 00DF  
                   __end_of_USBDeviceInit 0379                             ?_putsUSBUSART 00DA  
                          __end_of_memset 0BE4                         _USBBusIsSuspended 00C7  
                     start_initialization 0020                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0077                               _cdc_data_rx 02A0  
                             _cdc_data_tx 0220              __end_of_USBConfigureEndpoint 0CF3  
         __end_of_USBStdFeatureReqHandler 0154         __end_of_USBCtrlEPAllowStatusStage 0FA2  
                __end_of_USBCtrlEPService 0781                  __end_of_InitializeSystem 0B84  
               ??_USBCtrlEPAllowDataStage 0075                               ??_CDCInitEP 0060  
                          USBDeviceInit@i 00DE                            USBDeviceInit@p 00DB  
                  _pBDTEntryEP0OutCurrent 00CD                   USBTransferOnePacket@dir 00DA  
                 USBTransferOnePacket@len 00DC                   ??_USBCBStdSetDscHandler 0070  
                     _USBStdGetDscHandler 05B8                                 _ProcessIO 04A8  
                             __pdataBANK2 014E                                  ??_memset 0074  
                          ??_putsUSBUSART 00DC                    i1_USBTransferOnePacket 0D32  
              __size_of_USBCBErrorHandler 0001                         __size_of_UserInit 000B  
                  _USBActiveConfiguration 00D1            __end_of_USBStdGetStatusHandler 0E53  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0072  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00D2                             __pcstackBANK2 0147  
            __size_of_USBCtrlTrfInHandler 0057                                  ?_ISRCode 0070  
                    ?_USBStdGetDscHandler 0070                __end_of_USBWakeFromSuspend 0B99  
                         _USBStallHandler 07E0                              _pBDTEntryOut 00B5  
              __end_of_USBCheckCDCRequest 07E0                  __size_of_USBDeviceAttach 001C  
                    __end_of_USBCBSuspend 0B56              __end_of_USBCBWakeFromSuspend 0003  
                              ?_ProcessIO 0070                USBCBSendResume@delay_count 0135  
                               __pswtext1 0800                      _USBTransferOnePacket 0DC1  
            __end_of_USBCtrlTrfOutHandler 0C4A                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 00AC              __size_of_USBCtrlTrfRxService 0094  
           USBConfigureEndpoint@direction 0070              __size_of_USBCtrlTrfTxService 0072  
              ??_USBCtrlEPServiceComplete 0077                                 clear_ram0 0B63  
                                _PIE2bits 0092                                  _PIR2bits 0012  
               USBCtrlEPService@setup_cnt 00D5                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 00C0                             ??_USBCBInitEP 007D  
             __size_of_USBCheckStdRequest 005E                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0CB7          __size_of_USBStdFeatureReqHandler 0100  
                   ?_USBTransferOnePacket 00DA                             ?_CDCTxService 0070  
                            _RemoteWakeup 00C8                  __size_ofi1_USBDeviceInit 009B  
              __end_of_USBCBCheckOtherReq 0B59                          putsUSBUSART@data 00DA  
                 __end_of_USBStallHandler 0800                          __size_of_ISRCode 001A  
                       ProcessIO@validCmd 0149               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 05B8                      __end_of_putsUSBUSART 0C7D  
                      __end_of_device_dsc 10D3                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0071                    USBTransferOnePacket@ep 00DF  
                                _SetupPkt 0050                               ??_ProcessIO 0147  
                   ?_USBConfigureEndpoint 0070                         ??_USBDeviceAttach 00DA  
                                _UserInit 0B69                   __size_of_BlinkUSBStatus 0003  
                             _line_coding 0120                            ??_CDCTxService 00E1  
                     __end_of_USBCBInitEP 0B5C                   __size_of_USBDeviceTasks 00CD  
                                __ptext10 02D9                                  __ptext20 0E53  
                                __ptext12 0154                                  __ptext21 0FA2  
                                __ptext13 0379                                  __ptext30 0B55  
                                __ptext22 0539                                  __ptext14 0B84  
                                __ptext31 0B54                                  __ptext23 0BCA  
                                __ptext15 0B99                                  __ptext40 0C20  
                                __ptext32 0B59                                  __ptext24 0E09  
                                __ptext16 07E0                                  __ptext41 0414  
                                __ptext33 0C7D                                  __ptext25 05B8  
                                __ptext17 0717                                  __ptext42 0F46  
                                __ptext34 0D32                                  __ptext26 0054  
                                __ptext18 0D79                                  __ptext43 0EEF  
                                __ptext35 0C00                                  __ptext27 0CF3  
                                __ptext19 0631                                  __ptext44 06A5  
                                __ptext36 0CB7                                  __ptext28 0003  
                                __ptext37 0B53                                  __ptext29 0002  
                                __ptext38 0B56                                  __ptext39 0781  
                    _USBCBWakeFromSuspend 0002            __end_of_USBCtrlTrfSetupHandler 0DC1  
                           __size_of_main 0019                         ?_USBCtrlEPService 0070  
                   __size_of_USBCBSuspend 0001                         ?_InitializeSystem 0070  
                      ??_USBCtrlEPService 00D2                       _USBCtrlTrfInHandler 0EEF  
                      ??_InitializeSystem 00DF                                  _outPipes 00A0  
                    _USBCtrlTrfOutHandler 0C20                                  int$flags 007E  
                 ?i1_USBTransferOnePacket 0070                 _USBCtrlEPAllowStatusStage 0F46  
          __size_of_USBCBStdSetDscHandler 0001             __end_of_USBCBStdSetDscHandler 0B55  
                  ??_USBTransferOnePacket 00DD                 _USBDeferStatusStagePacket 00C3  
                CDCTxService@byte_to_send 00E7                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                    ?_USBCtrlTrfInHandler 0070             USBCtrlTrfTxService@byteToSend 0074  
                                memset@p1 0076                              _USBCBSuspend 0B55  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006D  
                   ?_USBCBWakeFromSuspend 0070                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00A0   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0D32  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0063  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007D           _USER_USB_CALLBACK_EVENT_HANDLER 0CF3  
                       ??i1_USBDeviceInit 0070                         __CFG_CLKOUTEN$OFF 0000  
          __end_ofi1_USBTransferOnePacket 0D79                    ??_USBConfigureEndpoint 0071  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0414                               _USBCBInitEP 0B59  
                      _USBWakeFromSuspend 0B84                   _USBStdFeatureReqHandler 0054  
                      _USBCheckCDCRequest 0781                       _USBCtrlTrfTxService 06A5  
                           __pstringtext1 10D3                             __pstringtext2 10D9  
                           __pstringtext3 1000                             __pstringtext4 1043  
                           __pstringtext5 1077                             __pstringtext6 10C1  
                           __pstringtext7 10AB                             __pstringtext8 10DB  
                           __pstringtext9 0000                                _OPTION_REG 0095  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0075  
                   _USBAlternateInterface 00D0                       ?_USBCheckCDCRequest 0070  
                     USBEnableEndpoint@ep 007C                           _endpoint_number 00C6  
                   __size_of_putsUSBUSART 0033                      ?_USBCtrlTrfRxService 0070  
                           ?_getsUSBUSART 00E1                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 00C4  
                    ??_USBWakeFromSuspend 007D                USBTransferOnePacket@handle 00E0  
                    __end_of_CDCTxService 02D9                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 10D9  
